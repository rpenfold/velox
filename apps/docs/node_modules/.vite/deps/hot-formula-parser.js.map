{
  "version": 3,
  "sources": ["../../../../../node_modules/tiny-emitter/index.js", "../../../../../node_modules/@handsontable/formulajs/lib/utils/error.js", "../../../../../node_modules/@handsontable/formulajs/lib/utils/common.js", "../../../../../node_modules/@handsontable/formulajs/lib/text.js", "../../../../../node_modules/jstat/dist/jstat.js", "../../../../../node_modules/@handsontable/formulajs/lib/utils/criteria-eval.js", "../../../../../node_modules/@handsontable/formulajs/lib/miscellaneous.js", "../../../../../node_modules/@handsontable/formulajs/lib/statistical.js", "../../../../../node_modules/@handsontable/formulajs/lib/information.js", "../../../../../node_modules/@handsontable/formulajs/lib/math-trig.js", "../../../../../node_modules/bessel/bessel.js", "../../../../../node_modules/@handsontable/formulajs/lib/engineering.js", "../../../../../node_modules/@handsontable/formulajs/lib/date-time.js", "../../../../../node_modules/@handsontable/formulajs/lib/compatibility.js", "../../../../../node_modules/@handsontable/formulajs/lib/database.js", "../../../../../node_modules/@handsontable/formulajs/lib/logical.js", "../../../../../node_modules/@handsontable/formulajs/lib/financial.js", "../../../../../node_modules/@handsontable/formulajs/lib/lookup-reference.js", "../../../../../node_modules/@handsontable/formulajs/index.js", "../../../../../node_modules/hot-formula-parser/parser.mjs", "../../../../../node_modules/hot-formula-parser/helper/number.mjs", "../../../../../node_modules/hot-formula-parser/error.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/add.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/ampersand.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/divide.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/equal.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/formula-function.mjs", "../../../../../node_modules/hot-formula-parser/supported-formulas.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/greater-than.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/greater-than-or-equal.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/less-than.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/less-than-or-equal.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/minus.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/multiply.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/not-equal.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/operator/power.mjs", "../../../../../node_modules/hot-formula-parser/evaluate-by-operator/evaluate-by-operator.mjs", "../../../../../node_modules/hot-formula-parser/grammar-parser/grammar-parser.mjs", "../../../../../node_modules/hot-formula-parser/helper/string.mjs", "../../../../../node_modules/hot-formula-parser/helper/cell.mjs"],
  "sourcesContent": ["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n", "exports.nil = new Error('#NULL!');\nexports.div0 = new Error('#DIV/0!');\nexports.value = new Error('#VALUE!');\nexports.ref = new Error('#REF!');\nexports.name = new Error('#NAME?');\nexports.num = new Error('#NUM!');\nexports.na = new Error('#N/A');\nexports.error = new Error('#ERROR!');\nexports.data = new Error('#GETTING_DATA');\n", "var error = require('./error');\n\nexports.flattenShallow = function(array) {\n  if (!array || !array.reduce) {\n    return array;\n  }\n\n  return array.reduce(function(a, b) {\n    var aIsArray = Array.isArray(a);\n    var bIsArray = Array.isArray(b);\n\n    if (aIsArray && bIsArray ) {\n      return a.concat(b);\n    }\n    if (aIsArray) {\n      a.push(b);\n\n      return a;\n    }\n    if (bIsArray) {\n      return [a].concat(b);\n    }\n\n    return [a, b];\n  });\n};\n\nexports.isFlat = function(array) {\n  if (!array) {\n    return false;\n  }\n\n  for (var i = 0; i < array.length; ++i) {\n    if (Array.isArray(array[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexports.flatten = function() {\n  var result = exports.argsToArray.apply(null, arguments);\n\n  while (!exports.isFlat(result)) {\n    result = exports.flattenShallow(result);\n  }\n\n  return result;\n};\n\nexports.argsToArray = function(args) {\n  var result = [];\n\n  exports.arrayEach(args, function(value) {\n    result.push(value);\n  });\n\n  return result;\n};\n\nexports.numbers = function() {\n  var possibleNumbers = this.flatten.apply(null, arguments);\n  return possibleNumbers.filter(function(el) {\n    return typeof el === 'number';\n  });\n};\n\nexports.cleanFloat = function(number) {\n  var power = 1e14;\n  return Math.round(number * power) / power;\n};\n\nexports.parseBool = function(bool) {\n  if (typeof bool === 'boolean') {\n    return bool;\n  }\n\n  if (bool instanceof Error) {\n    return bool;\n  }\n\n  if (typeof bool === 'number') {\n    return bool !== 0;\n  }\n\n  if (typeof bool === 'string') {\n    var up = bool.toUpperCase();\n    if (up === 'TRUE') {\n      return true;\n    }\n\n    if (up === 'FALSE') {\n      return false;\n    }\n  }\n\n  if (bool instanceof Date && !isNaN(bool)) {\n    return true;\n  }\n\n  return error.value;\n};\n\nexports.parseNumber = function(string) {\n  if (string === undefined || string === '') {\n    return error.value;\n  }\n  if (!isNaN(string)) {\n    return parseFloat(string);\n  }\n\n  return error.value;\n};\n\nexports.parseNumberArray = function(arr) {\n  var len;\n\n  if (!arr || (len = arr.length) === 0) {\n    return error.value;\n  }\n\n  var parsed;\n\n  while (len--) {\n    parsed = exports.parseNumber(arr[len]);\n    if (parsed === error.value) {\n      return parsed;\n    }\n    arr[len] = parsed;\n  }\n\n  return arr;\n};\n\nexports.parseMatrix = function(matrix) {\n  var n;\n\n  if (!matrix || (n = matrix.length) === 0) {\n    return error.value;\n  }\n  var pnarr;\n\n  for (var i = 0; i < matrix.length; i++) {\n    pnarr = exports.parseNumberArray(matrix[i]);\n    matrix[i] = pnarr;\n\n    if (pnarr instanceof Error) {\n      return pnarr;\n    }\n  }\n\n  return matrix;\n};\n\nvar d1900 = new Date(Date.UTC(1900, 0, 1));\nexports.parseDate = function(date) {\n  if (!isNaN(date)) {\n    if (date instanceof Date) {\n      return new Date(date);\n    }\n    var d = parseInt(date, 10);\n    if (d < 0) {\n      return error.num;\n    }\n    if (d <= 60) {\n      return new Date(d1900.getTime() + (d - 1) * 86400000);\n    }\n    return new Date(d1900.getTime() + (d - 2) * 86400000);\n  }\n  if (typeof date === 'string') {\n    date = new Date(date);\n    if (!isNaN(date)) {\n      return date;\n    }\n  }\n  return error.value;\n};\n\nexports.parseDateArray = function(arr) {\n  var len = arr.length;\n  var parsed;\n  while (len--) {\n    parsed = this.parseDate(arr[len]);\n    if (parsed === error.value) {\n      return parsed;\n    }\n    arr[len] = parsed;\n  }\n  return arr;\n};\n\nexports.anyIsError = function() {\n  var n = arguments.length;\n  while (n--) {\n    if (arguments[n] instanceof Error) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.arrayValuesToNumbers = function(arr) {\n  var n = arr.length;\n  var el;\n  while (n--) {\n    el = arr[n];\n    if (typeof el === 'number') {\n      continue;\n    }\n    if (el === true) {\n      arr[n] = 1;\n      continue;\n    }\n    if (el === false) {\n      arr[n] = 0;\n      continue;\n    }\n    if (typeof el === 'string') {\n      var number = this.parseNumber(el);\n      if (number instanceof Error) {\n        arr[n] = 0;\n      } else {\n        arr[n] = number;\n      }\n    }\n  }\n  return arr;\n};\n\nexports.rest = function(array, idx) {\n  idx = idx || 1;\n  if (!array || typeof array.slice !== 'function') {\n    return array;\n  }\n  return array.slice(idx);\n};\n\nexports.initial = function(array, idx) {\n  idx = idx || 1;\n  if (!array || typeof array.slice !== 'function') {\n    return array;\n  }\n  return array.slice(0, array.length - idx);\n};\n\nexports.arrayEach = function(array, iteratee) {\n  var index = -1, length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n};\n\nexports.transpose = function(matrix) {\n  if(!matrix) {\n    return error.value;\n  }\n\n  return matrix[0].map(function(col, i) {\n    return matrix.map(function(row) {\n      return row[i];\n    });\n  });\n};\n", "var utils = require('./utils/common');\nvar error = require('./utils/error');\n\n//TODO\nexports.ASC = function() {\n  throw new Error('ASC is not implemented');\n};\n\n//TODO\nexports.BAHTTEXT = function() {\n  throw new Error('BAHTTEXT is not implemented');\n};\n\nexports.CHAR = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return String.fromCharCode(number);\n};\n\nexports.CLEAN = function(text) {\n  text = text || '';\n  var re = /[\\0-\\x1F]/g;\n  return text.replace(re, \"\");\n};\n\nexports.CODE = function(text) {\n  text = text || '';\n  var result = text.charCodeAt(0);\n\n  if (isNaN(result)) {\n    result = error.na;\n  }\n  return result;\n};\n\nexports.CONCATENATE = function() {\n  var args = utils.flatten(arguments);\n\n  var trueFound = 0;\n  while ((trueFound = args.indexOf(true)) > -1) {\n    args[trueFound] = 'TRUE';\n  }\n\n  var falseFound = 0;\n  while ((falseFound = args.indexOf(false)) > -1) {\n    args[falseFound] = 'FALSE';\n  }\n\n  return args.join('');\n};\n\n//TODO\nexports.DBCS = function() {\n  throw new Error('DBCS is not implemented');\n};\n\n//TODO\nexports.DOLLAR = function() {\n  throw new Error('DOLLAR is not implemented');\n};\n\nexports.EXACT = function(text1, text2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  return text1 === text2;\n};\n\nexports.FIND = function(find_text, within_text, position) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  position = (position === undefined) ? 0 : position;\n  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;\n};\n\n//TODO\nexports.FIXED = function() {\n  throw new Error('FIXED is not implemented');\n};\n\nexports.HTML2TEXT = function (value) {\n  var result = '';\n\n  if (value) {\n    if (value instanceof Array) {\n      value.forEach(function (line) {\n        if (result !== '') {\n          result += '\\n';\n        }\n        result += (line.replace(/<(?:.|\\n)*?>/gm, ''));\n      });\n    } else {\n      result = value.replace(/<(?:.|\\n)*?>/gm, '');\n    }\n  }\n\n  return result;\n};\n\nexports.LEFT = function(text, number) {\n  number = (number === undefined) ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error || typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.substring(0, number) : null;\n};\n\nexports.LEN = function(text) {\n  if (arguments.length === 0) {\n    return error.error;\n  }\n\n  if (typeof text === 'string') {\n    return text ? text.length : 0;\n  }\n\n  if (text.length) {\n    return text.length;\n  }\n\n  return error.value;\n};\n\nexports.LOWER = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.toLowerCase() : text;\n};\n\nexports.MID = function(text, start, number) {\n  start = utils.parseNumber(start);\n  number = utils.parseNumber(number);\n  if (utils.anyIsError(start, number) || typeof text !== 'string') {\n    return number;\n  }\n\n  var begin = start - 1;\n  var end = begin + number;\n\n  return text.substring(begin, end);\n};\n\n// TODO\nexports.NUMBERVALUE = function (text, decimal_separator, group_separator)  {\n  decimal_separator = (typeof decimal_separator === 'undefined') ? '.' : decimal_separator;\n  group_separator = (typeof group_separator === 'undefined') ? ',' : group_separator;\n  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));\n};\n\n// TODO\nexports.PRONETIC = function() {\n  throw new Error('PRONETIC is not implemented');\n};\n\nexports.PROPER = function(text) {\n  if (text === undefined || text.length === 0) {\n    return error.value;\n  }\n  if (text === true) {\n    text = 'TRUE';\n  }\n  if (text === false) {\n    text = 'FALSE';\n  }\n  if (isNaN(text) && typeof text === 'number') {\n    return error.value;\n  }\n  if (typeof text === 'number') {\n    text = '' + text;\n  }\n\n  return text.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexports.REGEXEXTRACT = function (text, regular_expression) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return match ? (match[match.length > 1 ? match.length - 1 : 0]) : null;\n};\n\nexports.REGEXMATCH = function (text, regular_expression, full) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return full ? match : !!match;\n};\n\nexports.REGEXREPLACE = function (text, regular_expression, replacement) {\n  if (arguments.length < 3) {\n    return error.na;\n  }\n  return text.replace(new RegExp(regular_expression), replacement);\n};\n\nexports.REPLACE = function(text, position, length, new_text) {\n  position = utils.parseNumber(position);\n  length = utils.parseNumber(length);\n  if (utils.anyIsError(position, length) ||\n    typeof text !== 'string' ||\n    typeof new_text !== 'string') {\n    return error.value;\n  }\n  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);\n};\n\nexports.REPT = function(text, number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return new Array(number + 1).join(text);\n};\n\nexports.RIGHT = function(text, number) {\n  number = (number === undefined) ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return text ? text.substring(text.length - number) : error.na;\n};\n\nexports.SEARCH = function(find_text, within_text, position) {\n  var foundAt;\n  if (typeof find_text !== 'string' || typeof within_text !== 'string') {\n    return error.value;\n  }\n  position = (position === undefined) ? 0 : position;\n  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1)+1;\n  return (foundAt === 0)?error.value:foundAt;\n};\n\nexports.SPLIT = function (text, separator) {\n  return text.split(separator);\n};\n\nexports.SUBSTITUTE = function(text, old_text, new_text, occurrence) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  if (!text || !old_text || !new_text) {\n    return text;\n  } else if (occurrence === undefined) {\n    return text.replace(new RegExp(old_text, 'g'), new_text);\n  } else {\n    var index = 0;\n    var i = 0;\n    while (text.indexOf(old_text, index) > 0) {\n      index = text.indexOf(old_text, index + 1);\n      i++;\n      if (i === occurrence) {\n        return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n      }\n    }\n  }\n};\n\nexports.T = function(value) {\n  return (typeof value === \"string\") ? value : '';\n};\n\n// TODO incomplete implementation\nexports.TEXT = function() {\n  throw new Error('TEXT is not implemented');\n};\n\nexports.TRIM = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.replace(/ +/g, ' ').trim();\n};\n\nexports.UNICHAR = exports.CHAR;\n\nexports.UNICODE = exports.CODE;\n\nexports.UPPER = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.toUpperCase();\n};\n\n//TODO\nexports.VALUE = function() {\n  throw new Error('VALUE is not implemented');\n};\n", "(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  var logs = arr.map(Math.log)\n  var meanOfLogs = jStat.mean(logs)\n  return Math.exp(meanOfLogs)\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    if (a.length === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n\n    var determinant = 0;\n    for (var i = 0; i < a.length; i++) {\n      // build a sub matrix without column `i`\n      var submatrix = [];\n      for (var row = 1; row < a.length; row++) {\n        submatrix[row - 1] = [];\n        for (var col = 0; col < a.length; col++) {\n          if (col < i) {\n            submatrix[row - 1][col] = a[row][col];\n          } else if (col > i) {\n            submatrix[row - 1][col - 1] = a[row][col];\n          }\n        }\n      }\n\n      // alternate between + and - between determinants\n      var sign = i % 2 ? -1 : 1;\n      determinant += det(submatrix) * a[0][i] * sign;\n    }\n\n    return determinant\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n", "var defaultOperator = '=';\nvar validSymbols = ['>', '>=', '<', '<=', '=', '<>'];\nvar TOKEN_TYPE_OPERATOR = 'operator';\nvar TOKEN_TYPE_LITERAL = 'literal';\nvar SUPPORTED_TOKENS = [TOKEN_TYPE_OPERATOR, TOKEN_TYPE_LITERAL];\n\nexports.TOKEN_TYPE_OPERATOR = TOKEN_TYPE_OPERATOR;\nexports.TOKEN_TYPE_LITERAL = TOKEN_TYPE_LITERAL;\n\n/**\n * Create token which describe passed symbol/value.\n *\n * @param {String} value Value/Symbol to describe.\n * @param {String} type Type of the token 'operator' or 'literal'.\n * @return {Object}\n */\nfunction createToken(value, type) {\n  if (SUPPORTED_TOKENS.indexOf(type) === -1) {\n    throw new Error('Unsupported token type: ' + type);\n  }\n\n  return {\n    value: value,\n    type: type,\n  };\n}\n\n/**\n * Tries to cast numeric values to their type passed as a string.\n *\n * @param {*} value\n * @return {*}\n */\nfunction castValueToCorrectType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(value)) {\n    value = value.indexOf('.') === -1 ? parseInt(value, 10) : parseFloat(value);\n  }\n\n  return value;\n}\n\n/**\n * Generate stream of tokens from passed expression.\n *\n * @param {String} expression\n * @return {String[]}\n */\nfunction tokenizeExpression(expression) {\n  var expressionLength = expression.length;\n  var tokens = [];\n  var cursorIndex = 0;\n  var processedValue = '';\n  var processedSymbol = '';\n\n  while (cursorIndex < expressionLength) {\n    var char = expression.charAt(cursorIndex);\n\n    switch (char) {\n      case '>':\n      case '<':\n      case '=':\n        processedSymbol = processedSymbol + char;\n\n        if (processedValue.length > 0) {\n          tokens.push(processedValue);\n          processedValue = '';\n        }\n      break;\n      default:\n        if (processedSymbol.length > 0) {\n          tokens.push(processedSymbol);\n          processedSymbol = '';\n        }\n\n        processedValue = processedValue + char;\n      break;\n    }\n    cursorIndex++;\n  }\n\n  if (processedValue.length > 0) {\n    tokens.push(processedValue);\n  }\n  if (processedSymbol.length > 0) {\n    tokens.push(processedSymbol);\n  }\n\n  return tokens;\n};\n\n/**\n * Analyze and convert tokens to an object which describes their meaning.\n *\n * @param {String[]} tokens\n * @return {Object[]}\n */\nfunction analyzeTokens(tokens) {\n  var literalValue = '';\n  var analyzedTokens = [];\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (i === 0 && validSymbols.indexOf(token) >= 0) {\n      analyzedTokens.push(createToken(token, TOKEN_TYPE_OPERATOR));\n    } else {\n      literalValue += token;\n    }\n  }\n\n  if (literalValue.length > 0) {\n    analyzedTokens.push(createToken(castValueToCorrectType(literalValue), TOKEN_TYPE_LITERAL));\n  }\n\n  if (analyzedTokens.length > 0 && analyzedTokens[0].type !== TOKEN_TYPE_OPERATOR) {\n    analyzedTokens.unshift(createToken(defaultOperator, TOKEN_TYPE_OPERATOR));\n  }\n\n  return analyzedTokens;\n};\n\n/**\n * Compute/Evaluate an expression passed as an array of tokens.\n *\n * @param {Object[]} tokens\n * @return {Boolean}\n */\nfunction computeExpression(tokens) {\n  var values = [];\n  var operator;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    switch (token.type) {\n      case TOKEN_TYPE_OPERATOR:\n        operator = token.value;\n      break;\n      case TOKEN_TYPE_LITERAL:\n        values.push(token.value);\n      break;\n    }\n  }\n\n  return evaluate(values, operator);\n};\n\n/**\n * Evaluate values based on passed math operator.\n *\n * @param {*} values\n * @param {String} operator\n * @return {Boolean}\n */\nfunction evaluate(values, operator) {\n  var result = false;\n\n  switch (operator) {\n    case '>':\n      result = values[0] > values[1];\n      break;\n    case '>=':\n      result = values[0] >= values[1];\n      break;\n    case '<':\n      result = values[0] < values[1];\n      break;\n    case '<=':\n      result = values[0] <= values[1];\n      break;\n    case '=':\n      result = values[0] == values[1];\n      break;\n    case '<>':\n      result = values[0] != values[1];\n      break;\n  }\n\n  return result;\n}\n\nexports.parse = function(expression) {\n  return analyzeTokens(tokenizeExpression(expression));\n};\nexports.createToken = createToken;\nexports.compute = computeExpression;\n", "var utils = require('./utils/common');\nvar error = require('./utils/error');\n\nexports.UNIQUE = function () {\n  var result = [];\n  for (var i = 0; i < arguments.length; ++i) {\n    var hasElement = false;\n    var element    = arguments[i];\n\n    // Check if we've already seen this element.\n    for (var j = 0; j < result.length; ++j) {\n      hasElement = result[j] === element;\n      if (hasElement) { break; }\n    }\n\n    // If we did not find it, add it to the result.\n    if (!hasElement) {\n      result.push(element);\n    }\n  }\n  return result;\n};\n\nexports.FLATTEN = utils.flatten;\n\nexports.ARGS2ARRAY = function () {\n  return Array.prototype.slice.call(arguments, 0);\n};\n\nexports.REFERENCE = function (context, reference) {\n  if (!arguments.length) {\n    return error.error;\n  }\n  try {\n    var path = reference.split('.');\n    var result = context;\n    for (var i = 0; i < path.length; ++i) {\n      var step = path[i];\n      if (step[step.length - 1] === ']') {\n        var opening = step.indexOf('[');\n        var index = step.substring(opening + 1, step.length - 1);\n        result = result[step.substring(0, opening)][index];\n      } else {\n        result = result[step];\n      }\n    }\n    return result;\n  } catch (error) {}\n};\n\nexports.JOIN = function (array, separator) {\n  return array.join(separator);\n};\n\nexports.NUMBERS = function () {\n  var possibleNumbers = utils.flatten(arguments);\n  return possibleNumbers.filter(function (el) {\n    return typeof el === 'number';\n  });\n};\n", "var mathTrig = require('./math-trig');\nvar text = require('./text');\nvar jStat = require('jstat');\nvar utils = require('./utils/common');\nvar evalExpression = require('./utils/criteria-eval');\nvar error = require('./utils/error');\nvar misc = require('./miscellaneous');\n\nvar SQRT2PI = 2.5066282746310002;\n\nexports.AVEDEV = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;\n};\n\nexports.AVERAGE = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n\n  for (var i = 0; i < n; i++) {\n    sum += range[i];\n    count += 1;\n  }\n  result = sum / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.AVERAGEA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sum += el;\n    }\n    if (el === true) {\n      sum++;\n    }\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sum / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.AVERAGEIF = function(range, criteria, average_range) {\n  if (arguments.length <= 1) {\n    return error.na;\n  }\n  average_range = average_range || range;\n  range = utils.flatten(range);\n  average_range = utils.parseNumberArray(utils.flatten(average_range));\n\n  if (average_range instanceof Error) {\n    return average_range;\n  }\n  var average_count = 0;\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n\n    if (isWildcard) {\n      result += average_range[i];\n      average_count++;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n      if (evalExpression.compute(tokens)) {\n        result += average_range[i];\n        average_count++;\n      }\n    }\n  }\n\n  return result / average_count;\n};\n\nexports.AVERAGEIFS = function() {\n  // Does not work with multi dimensional ranges yet!\n  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx\n  var args = utils.argsToArray(arguments);\n  var criteriaLength = (args.length - 1) / 2;\n  var range = utils.flatten(args[0]);\n  var count = 0;\n  var result = 0;\n\n  for (var i = 0; i < range.length; i++) {\n    var isMeetCondition = false;\n\n    for (var j = 0; j < criteriaLength; j++) {\n      var value = args[2 * j + 1][i];\n      var criteria = args[2 * j + 2];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n\n      isMeetCondition = true;\n    }\n\n    if (isMeetCondition) {\n      result += range[i];\n      count++;\n    }\n  }\n\n  var average = result / count;\n\n  if (isNaN(average)) {\n    return 0;\n  } else {\n    return average;\n  }\n};\n\nexports.BETA = {};\n\nexports.BETA.DIST = function(x, alpha, beta, cumulative, A, B) {\n  if (arguments.length < 4) {\n    return error.value;\n  }\n\n  A = (A === undefined) ? 0 : A;\n  B = (B === undefined) ? 1 : B;\n\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(x, alpha, beta, A, B)) {\n    return error.value;\n  }\n\n  x = (x - A) / (B - A);\n  return (cumulative) ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);\n};\n\nexports.BETA.INV = function(probability, alpha, beta, A, B) {\n  A = (A === undefined) ? 0 : A;\n  B = (B === undefined) ? 1 : B;\n\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(probability, alpha, beta, A, B)) {\n    return error.value;\n  }\n\n  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;\n};\n\nexports.BINOM = {};\n\nexports.BINOM.DIST = function(successes, trials, probability, cumulative) {\n  successes = utils.parseNumber(successes);\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  cumulative = utils.parseNumber(cumulative);\n  if (utils.anyIsError(successes, trials, probability, cumulative)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);\n};\n\nexports.BINOM.DIST.RANGE = function(trials, probability, successes, successes2) {\n  successes2 = (successes2 === undefined) ? successes : successes2;\n\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  successes = utils.parseNumber(successes);\n  successes2 = utils.parseNumber(successes2);\n  if (utils.anyIsError(trials, probability, successes, successes2)) {\n    return error.value;\n  }\n\n  var result = 0;\n  for (var i = successes; i <= successes2; i++) {\n    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);\n  }\n  return result;\n};\n\nexports.BINOM.INV = function(trials, probability, alpha) {\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  if (utils.anyIsError(trials, probability, alpha)) {\n    return error.value;\n  }\n\n  var x = 0;\n  while (x <= trials) {\n    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {\n      return x;\n    }\n    x++;\n  }\n};\n\nexports.CHISQ = {};\n\nexports.CHISQ.DIST = function(x, k, cumulative) {\n  x = utils.parseNumber(x);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(x, k)) {\n    return error.value;\n  }\n\n  return (cumulative) ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);\n};\n\nexports.CHISQ.DIST.RT = function(x, k) {\n  if (!x | !k) {\n    return error.na;\n  }\n\n  if (x < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof k !== 'number')) {\n    return error.value;\n  }\n\n  return 1 -  jStat.chisquare.cdf(x, k);\n};\n\nexports.CHISQ.INV = function(probability, k) {\n  probability = utils.parseNumber(probability);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(probability, k)) {\n    return error.value;\n  }\n  return jStat.chisquare.inv(probability, k);\n};\n\nexports.CHISQ.INV.RT = function(p, k) {\n  if (!p | !k) {\n    return error.na;\n  }\n\n  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof p !== 'number') || (typeof k !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.chisquare.inv(1.0 - p, k);\n};\n\nexports.CHISQ.TEST = function(observed, expected) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if ((!(observed instanceof Array)) || (!(expected instanceof Array))) {\n    return error.value;\n  }\n\n  if (observed.length !== expected.length) {\n    return error.value;\n  }\n\n  if (observed[0] && expected[0] &&\n    observed[0].length !== expected[0].length) {\n    return error.value;\n  }\n\n  var row = observed.length;\n  var tmp, i, j;\n\n  // Convert single-dimension array into two-dimension array\n  for (i = 0; i < row; i ++) {\n    if (!(observed[i] instanceof Array)) {\n      tmp = observed[i];\n      observed[i] = [];\n      observed[i].push(tmp);\n    }\n    if (!(expected[i] instanceof Array)) {\n      tmp = expected[i];\n      expected[i] = [];\n      expected[i].push(tmp);\n    }\n  }\n\n  var col = observed[0].length;\n  var dof = (col === 1) ? row-1 : (row-1)*(col-1);\n  var xsqr = 0;\n  var Pi =Math.PI;\n\n  for (i = 0; i < row; i ++) {\n    for (j = 0; j < col; j ++) {\n      xsqr += Math.pow((observed[i][j] - expected[i][j]), 2) / expected[i][j];\n    }\n  }\n\n  // Get independency by X square and its degree of freedom\n  function ChiSq(xsqr, dof) {\n    var p = Math.exp(-0.5 * xsqr);\n    if((dof%2) === 1) {\n      p = p * Math.sqrt(2 * xsqr/Pi);\n    }\n    var k = dof;\n    while(k >= 2) {\n      p = p * xsqr/k;\n      k = k - 2;\n    }\n    var t = p;\n    var a = dof;\n    while (t > 0.0000000001*p) {\n      a = a + 2;\n      t = t * xsqr/a;\n      p = p + t;\n    }\n    return 1-p;\n  }\n\n  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;\n};\n\nexports.COLUMN = function(matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (index < 0) {\n    return error.num;\n  }\n\n  if (!(matrix instanceof Array) || (typeof index !== 'number')) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return undefined;\n  }\n\n  return jStat.col(matrix, index);\n};\n\nexports.COLUMNS = function(matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return 0;\n  }\n\n  return jStat.cols(matrix);\n};\n\nexports.CONFIDENCE = {};\n\nexports.CONFIDENCE.NORM = function(alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.normalci(1, alpha, sd, n)[1] - 1;\n};\n\nexports.CONFIDENCE.T = function(alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.tci(1, alpha, sd, n)[1] - 1;\n};\n\nexports.CORREL = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.corrcoeff(array1, array2);\n};\n\nexports.COUNT = function() {\n  return utils.numbers(utils.flatten(arguments)).length;\n};\n\nexports.COUNTA = function() {\n  var range = utils.flatten(arguments);\n  return range.length - exports.COUNTBLANK(range);\n};\n\nexports.COUNTIN = function (range, value) {\n  var result = 0;\n\n  range = utils.flatten(range);\n\n  for (var i = 0; i < range.length; i++) {\n    if (range[i] === value) {\n      result++;\n    }\n  }\n  return result;\n};\n\n\nexports.COUNTBLANK = function() {\n  var range = utils.flatten(arguments);\n  var blanks = 0;\n  var element;\n  for (var i = 0; i < range.length; i++) {\n    element = range[i];\n    if (element === null || element === '') {\n      blanks++;\n    }\n  }\n  return blanks;\n};\n\nexports.COUNTIF = function(range, criteria) {\n  range = utils.flatten(range);\n\n  var isWildcard = criteria === void 0 || criteria === '*';\n\n  if (isWildcard) {\n    return range.length;\n  }\n\n  var matches = 0;\n  var tokenizedCriteria = evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n    var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n    if (evalExpression.compute(tokens)) {\n      matches++;\n    }\n  }\n\n  return matches;\n};\n\nexports.COUNTIFS = function() {\n  var args = utils.argsToArray(arguments);\n  var results = new Array(utils.flatten(args[0]).length);\n\n  for (var i = 0; i < results.length; i++) {\n    results[i] = true;\n  }\n  for (i = 0; i < args.length; i += 2) {\n    var range = utils.flatten(args[i]);\n    var criteria = args[i + 1];\n    var isWildcard = criteria === void 0 || criteria === '*';\n\n    if (!isWildcard) {\n      var tokenizedCriteria = evalExpression.parse(criteria + '');\n\n      for (var j = 0; j < range.length; j++) {\n        var value = range[j];\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        results[j] = results[j] && evalExpression.compute(tokens);\n      }\n    }\n  }\n  var result = 0;\n  for (i = 0; i < results.length; i++) {\n    if (results[i]) {\n      result++;\n    }\n  }\n\n  return result;\n};\n\nexports.COUNTUNIQUE = function () {\n  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;\n};\n\nexports.COVARIANCE = {};\n\nexports.COVARIANCE.P = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  var mean1 = jStat.mean(array1);\n  var mean2 = jStat.mean(array2);\n  var result = 0;\n  var n = array1.length;\n  for (var i = 0; i < n; i++) {\n    result += (array1[i] - mean1) * (array2[i] - mean2);\n  }\n  return result / n;\n};\n\nexports.COVARIANCE.S = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.covariance(array1, array2);\n};\n\nexports.DEVSQ = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var result = 0;\n  for (var i = 0; i < range.length; i++) {\n    result += Math.pow((range[i] - mean), 2);\n  }\n  return result;\n};\n\nexports.EXPON = {};\n\nexports.EXPON.DIST = function(x, lambda, cumulative) {\n  x = utils.parseNumber(x);\n  lambda = utils.parseNumber(lambda);\n  if (utils.anyIsError(x, lambda)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\n};\n\nexports.F = {};\n\nexports.F.DIST = function(x, d1, d2, cumulative) {\n  x = utils.parseNumber(x);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(x, d1, d2)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);\n};\n\nexports.F.DIST.RT = function(x, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (x < 0 || d1 < 1 || d2 < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {\n    return error.value;\n  }\n\n  return 1 - jStat.centralF.cdf(x, d1, d2);\n};\n\nexports.F.INV = function(probability, d1, d2) {\n  probability = utils.parseNumber(probability);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(probability, d1, d2)) {\n    return error.value;\n  }\n  if (probability <= 0.0 || probability > 1.0) {\n    return error.num;\n  }\n\n  return jStat.centralF.inv(probability, d1, d2);\n};\n\nexports.F.INV.RT = function(p, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof p !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.centralF.inv(1.0 - p, d1, d2);\n};\n\nexports.F.TEST = function(array1, array2) {\n  if (!array1 || !array2) {\n    return error.na;\n  }\n\n  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {\n    return error.na;\n  }\n\n  if (array1.length < 2 || array2.length < 2) {\n    return error.div0;\n  }\n\n  var sumOfSquares = function(values, x1) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n      sum +=Math.pow((values[i] - x1), 2);\n    }\n    return sum;\n  };\n\n  var x1 = mathTrig.SUM(array1) / array1.length;\n  var x2 = mathTrig.SUM(array2) / array2.length;\n  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);\n  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);\n\n  return sum1 / sum2;\n};\n\nexports.FISHER = function(x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return x;\n  }\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n\nexports.FISHERINV = function(y) {\n  y = utils.parseNumber(y);\n  if (y instanceof Error) {\n    return y;\n  }\n  var e2y = Math.exp(2 * y);\n  return (e2y - 1) / (e2y + 1);\n};\n\nexports.FORECAST = function(x, data_y, data_x) {\n  x = utils.parseNumber(x);\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(x, data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var b = num / den;\n  var a = ymean - b * xmean;\n  return a + b * x;\n};\n\nexports.FREQUENCY = function(data, bins) {\n  data = utils.parseNumberArray(utils.flatten(data));\n  bins = utils.parseNumberArray(utils.flatten(bins));\n  if (utils.anyIsError(data, bins)) {\n    return error.value;\n  }\n  var n = data.length;\n  var b = bins.length;\n  var r = [];\n  for (var i = 0; i <= b; i++) {\n    r[i] = 0;\n    for (var j = 0; j < n; j++) {\n      if (i === 0) {\n        if (data[j] <= bins[0]) {\n          r[0] += 1;\n        }\n      } else if (i < b) {\n        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {\n          r[i] += 1;\n        }\n      } else if (i === b) {\n        if (data[j] > bins[b - 1]) {\n          r[b] += 1;\n        }\n      }\n    }\n  }\n  return r;\n};\n\n\nexports.GAMMA = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  if (number === 0) {\n    return error.num;\n  }\n\n  if (parseInt(number, 10) === number && number < 0) {\n    return error.num;\n  }\n\n  return jStat.gammafn(number);\n};\n\nexports.GAMMA.DIST = function(value, alpha, beta, cumulative) {\n  if (arguments.length !== 4) {\n    return error.na;\n  }\n\n  if (value < 0 || alpha <= 0 || beta <= 0) {\n    return error.value;\n  }\n\n  if ((typeof value !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {\n    return error.value;\n  }\n\n  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);\n};\n\nexports.GAMMA.INV = function(probability, alpha, beta) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {\n    return error.num;\n  }\n\n  if ((typeof probability !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.gamma.inv(probability, alpha, beta);\n};\n\nexports.GAMMALN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return jStat.gammaln(number);\n};\n\nexports.GAMMALN.PRECISE = function(x) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (x <= 0) {\n    return error.num;\n  }\n\n  if (typeof x !== 'number') {\n    return error.value;\n  }\n\n  return jStat.gammaln(x);\n};\n\nexports.GAUSS = function(z) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return z;\n  }\n  return jStat.normal.cdf(z, 0, 1) - 0.5;\n};\n\nexports.GEOMEAN = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  return jStat.geomean(args);\n};\n\nexports.GROWTH = function(known_y, known_x, new_x, use_const) {\n  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)\n\n  known_y = utils.parseNumberArray(known_y);\n  if (known_y instanceof Error) {\n    return known_y;\n  }\n\n  // Default values for optional parameters:\n  var i;\n  if (known_x === undefined) {\n    known_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      known_x.push(i);\n    }\n  }\n  if (new_x === undefined) {\n    new_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      new_x.push(i);\n    }\n  }\n\n  known_x = utils.parseNumberArray(known_x);\n  new_x = utils.parseNumberArray(new_x);\n  if (utils.anyIsError(known_x, new_x)) {\n    return error.value;\n  }\n\n\n  if (use_const === undefined) {\n    use_const = true;\n  }\n\n  // Calculate sums over the data:\n  var n = known_y.length;\n  var avg_x = 0;\n  var avg_y = 0;\n  var avg_xy = 0;\n  var avg_xx = 0;\n  for (i = 0; i < n; i++) {\n    var x = known_x[i];\n    var y = Math.log(known_y[i]);\n    avg_x += x;\n    avg_y += y;\n    avg_xy += x * y;\n    avg_xx += x * x;\n  }\n  avg_x /= n;\n  avg_y /= n;\n  avg_xy /= n;\n  avg_xx /= n;\n\n  // Compute linear regression coefficients:\n  var beta;\n  var alpha;\n  if (use_const) {\n    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);\n    alpha = avg_y - beta * avg_x;\n  } else {\n    beta = avg_xy / avg_xx;\n    alpha = 0;\n  }\n\n  // Compute and return result array:\n  var new_y = [];\n  for (i = 0; i < new_x.length; i++) {\n    new_y.push(Math.exp(alpha + beta * new_x[i]));\n  }\n  return new_y;\n};\n\nexports.HARMEAN = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    den += 1 / range[i];\n  }\n  return n / den;\n};\n\nexports.HYPGEOM = {};\n\nexports.HYPGEOM.DIST = function(x, n, M, N, cumulative) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  M = utils.parseNumber(M);\n  N = utils.parseNumber(N);\n  if (utils.anyIsError(x, n, M, N)) {\n    return error.value;\n  }\n\n  function pdf(x, n, M, N) {\n    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);\n  }\n\n  function cdf(x, n, M, N) {\n    var result = 0;\n    for (var i = 0; i <= x; i++) {\n      result += pdf(i, n, M, N);\n    }\n    return result;\n  }\n\n  return (cumulative) ? cdf(x, n, M, N) : pdf(x, n, M, N);\n};\n\nexports.INTERCEPT = function(known_y, known_x) {\n  known_y = utils.parseNumberArray(known_y);\n  known_x = utils.parseNumberArray(known_x);\n  if (utils.anyIsError(known_y, known_x)) {\n    return error.value;\n  }\n  if (known_y.length !== known_x.length) {\n    return error.na;\n  }\n  return exports.FORECAST(0, known_y, known_x);\n};\n\nexports.KURT = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 4);\n  }\n  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);\n  return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\n};\n\nexports.LARGE = function(range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function(a, b) {\n    return b - a;\n  })[k - 1];\n};\n\nexports.LINEST = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var ymean = jStat.mean(data_y);\n  var xmean = jStat.mean(data_x);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var m = num / den;\n  var b = ymean - m * xmean;\n  return [m, b];\n};\n\n// According to Microsoft:\n// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx\n// LOGEST returns are based on the following linear model:\n// ln y = x1 ln m1 + ... + xn ln mn + ln b\nexports.LOGEST = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  for (var i = 0; i < data_y.length; i ++) {\n    data_y[i] = Math.log(data_y[i]);\n  }\n\n  var result = exports.LINEST(data_y, data_x);\n  result[0] = Math.round(Math.exp(result[0])*1000000)/1000000;\n  result[1] = Math.round(Math.exp(result[1])*1000000)/1000000;\n  return result;\n};\n\nexports.LOGNORM = {};\n\nexports.LOGNORM.DIST = function(x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);\n};\n\nexports.LOGNORM.INV = function(probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.lognormal.inv(probability, mean, sd);\n};\n\nexports.MAX = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.max.apply(Math, range);\n};\n\nexports.MAXA = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.max.apply(Math, range);\n};\n\nexports.MEDIAN = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  var result = jStat.median(range);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.MIN = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.min.apply(Math, range);\n};\n\nexports.MINA = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.min.apply(Math, range);\n};\n\nexports.MODE = {};\n\nexports.MODE.MULT = function() {\n  // Credits: Roönaän\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var count = {};\n  var maxItems = [];\n  var max = 0;\n  var currentItem;\n\n  for (var i = 0; i < n; i++) {\n    currentItem = range[i];\n    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;\n    if (count[currentItem] > max) {\n      max = count[currentItem];\n      maxItems = [];\n    }\n    if (count[currentItem] === max) {\n      maxItems[maxItems.length] = currentItem;\n    }\n  }\n  return maxItems;\n};\n\nexports.MODE.SNGL = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return exports.MODE.MULT(range).sort(function(a, b) {\n    return a - b;\n  })[0];\n};\n\nexports.NEGBINOM = {};\n\nexports.NEGBINOM.DIST = function(k, r, p, cumulative) {\n  k = utils.parseNumber(k);\n  r = utils.parseNumber(r);\n  p = utils.parseNumber(p);\n  if (utils.anyIsError(k, r, p)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);\n};\n\nexports.NORM = {};\n\nexports.NORM.DIST = function(x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  if (sd <= 0) {\n    return error.num;\n  }\n\n  // Return normal distribution computed by jStat [http://jstat.org]\n  return (cumulative) ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);\n};\n\nexports.NORM.INV = function(probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, mean, sd);\n};\n\nexports.NORM.S = {};\n\nexports.NORM.S.DIST = function(z, cumulative) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\n};\n\nexports.NORM.S.INV = function(probability) {\n  probability = utils.parseNumber(probability);\n  if (probability instanceof Error) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, 0, 1);\n};\n\nexports.PEARSON = function(data_x, data_y) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den1 = 0;\n  var den2 = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den1 += Math.pow(data_x[i] - xmean, 2);\n    den2 += Math.pow(data_y[i] - ymean, 2);\n  }\n  return num / Math.sqrt(den1 * den2);\n};\n\nexports.PERCENTILE = {};\n\nexports.PERCENTILE.EXC = function(array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    {\n      return a - b;\n    }\n  });\n  var n = array.length;\n  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {\n    return error.num;\n  }\n  var l = k * (n + 1) - 1;\n  var fl = Math.floor(l);\n  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\n\nexports.PERCENTILE.INC = function(array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var n = array.length;\n  var l = k * (n - 1);\n  var fl = Math.floor(l);\n  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\n\nexports.PERCENTRANK = {};\n\nexports.PERCENTRANK.EXC = function(array, x, significance) {\n  significance = (significance === undefined) ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = (array.indexOf(uniques[i]) + 1) / (n + 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\n\nexports.PERCENTRANK.INC = function(array, x, significance) {\n  significance = (significance === undefined) ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = array.indexOf(uniques[i]) / (n - 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\n\nexports.PERMUT = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);\n};\n\nexports.PERMUTATIONA = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return Math.pow(number, number_chosen);\n};\n\nexports.PHI = function(x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return error.value;\n  }\n  return Math.exp(-0.5 * x * x) / SQRT2PI;\n};\n\nexports.POISSON = {};\n\nexports.POISSON.DIST = function(x, mean, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  if (utils.anyIsError(x, mean)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\n};\n\nexports.PROB = function(range, probability, lower, upper) {\n  if (lower === undefined) {\n    return 0;\n  }\n  upper = (upper === undefined) ? lower : upper;\n\n  range = utils.parseNumberArray(utils.flatten(range));\n  probability = utils.parseNumberArray(utils.flatten(probability));\n  lower = utils.parseNumber(lower);\n  upper = utils.parseNumber(upper);\n  if (utils.anyIsError(range, probability, lower, upper)) {\n    return error.value;\n  }\n\n  if (lower === upper) {\n    return (range.indexOf(lower) >= 0) ? probability[range.indexOf(lower)] : 0;\n  }\n\n  var sorted = range.sort(function(a, b) {\n    return a - b;\n  });\n  var n = sorted.length;\n  var result = 0;\n  for (var i = 0; i < n; i++) {\n    if (sorted[i] >= lower && sorted[i] <= upper) {\n      result += probability[range.indexOf(sorted[i])];\n    }\n  }\n  return result;\n};\n\nexports.QUARTILE = {};\n\nexports.QUARTILE.EXC = function(range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.EXC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.EXC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.EXC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\n\nexports.QUARTILE.INC = function(range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.INC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.INC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.INC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\n\nexports.RANK = {};\n\nexports.RANK.AVG = function(number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  range = utils.flatten(range);\n  order = order || false;\n  var sort = (order) ? function(a, b) {\n    return a - b;\n  } : function(a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n\n  var length = range.length;\n  var count = 0;\n  for (var i = 0; i < length; i++) {\n    if (range[i] === number) {\n      count++;\n    }\n  }\n\n  return (count > 1) ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;\n};\n\nexports.RANK.EQ = function(number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  order = order || false;\n  var sort = (order) ? function(a, b) {\n    return a - b;\n  } : function(a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n  return range.indexOf(number) + 1;\n};\n\nexports.ROW = function(matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (index < 0) {\n    return error.num;\n  }\n\n  if (!(matrix instanceof Array) || (typeof index !== 'number')) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return undefined;\n  }\n\n  return jStat.row(matrix, index);\n};\n\nexports.ROWS = function(matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return 0;\n  }\n\n  return jStat.rows(matrix);\n};\n\nexports.RSQ = function(data_x, data_y) { // no need to flatten here, PEARSON will take care of that\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n  return Math.pow(exports.PEARSON(data_x, data_y), 2);\n};\n\nexports.SKEW = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 3);\n  }\n  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));\n};\n\nexports.SKEW.P = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var m2 = 0;\n  var m3 = 0;\n  for (var i = 0; i < n; i++) {\n    m3 += Math.pow(range[i] - mean, 3);\n    m2 += Math.pow(range[i] - mean, 2);\n  }\n  m3 = m3 / n;\n  m2 = m2 / n;\n  return m3 / Math.pow(m2, 3 / 2);\n};\n\nexports.SLOPE = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return num / den;\n};\n\nexports.SMALL = function(range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function(a, b) {\n    return a - b;\n  })[k - 1];\n};\n\nexports.STANDARDIZE = function(x, mean, sd) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return (x - mean) / sd;\n};\n\nexports.STDEV = {};\n\nexports.STDEV.P = function() {\n  var v = exports.VAR.P.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.STDEV.S = function() {\n  var v = exports.VAR.S.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  return result;\n};\n\nexports.STDEVA = function() {\n  var v = exports.VARA.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  return result;\n};\n\nexports.STDEVPA = function() {\n  var v = exports.VARPA.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\n\nexports.STEYX = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var lft = 0;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    lft += Math.pow(data_y[i] - ymean, 2);\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return Math.sqrt((lft - num * num / den) / (n - 2));\n};\n\nexports.TRANSPOSE = function(matrix) {\n  if (!matrix) {\n    return error.na;\n  }\n  return jStat.transpose(matrix);\n};\n\nexports.T = text.T;\n\nexports.T.DIST = function(x, df, cumulative) {\n  x = utils.parseNumber(x);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(x, df)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);\n};\n\nexports.T.DIST['2T'] = function(x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof df !== 'number')) {\n    return error.value;\n  }\n\n  return (1 - jStat.studentt.cdf(x , df)) * 2;\n};\n\nexports.T.DIST.RT = function(x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof df !== 'number')) {\n    return error.value;\n  }\n\n  return 1 - jStat.studentt.cdf(x , df);\n};\n\nexports.T.INV = function(probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return jStat.studentt.inv(probability, df);\n};\n\nexports.T.INV['2T'] = function(probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (probability <= 0 || probability > 1 || df < 1) {\n    return error.num;\n  }\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return Math.abs(jStat.studentt.inv(probability/2, df));\n};\n\n// The algorithm can be found here:\n// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html\nexports.T.TEST = function(data_x, data_y) {\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n\n  var mean_x = jStat.mean(data_x);\n  var mean_y = jStat.mean(data_y);\n  var s_x = 0;\n  var s_y = 0;\n  var i;\n\n  for (i = 0; i < data_x.length; i++) {\n    s_x += Math.pow(data_x[i] - mean_x, 2);\n  }\n  for (i = 0; i < data_y.length; i++) {\n    s_y += Math.pow(data_y[i] - mean_y, 2);\n  }\n\n  s_x = s_x / (data_x.length-1);\n  s_y = s_y / (data_y.length-1);\n\n  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x/data_x.length + s_y/data_y.length);\n\n  return exports.T.DIST['2T'](t, data_x.length+data_y.length-2);\n};\n\nexports.TREND = function(data_y, data_x, new_data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));\n  if (utils.anyIsError(data_y, data_x, new_data_x)) {\n    return error.value;\n  }\n  var linest = exports.LINEST(data_y, data_x);\n  var m = linest[0];\n  var b = linest[1];\n  var result = [];\n\n  new_data_x.forEach(function(x) {\n    result.push(m * x + b);\n  });\n\n  return result;\n};\n\nexports.TRIMMEAN = function(range, percent) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  percent = utils.parseNumber(percent);\n  if (utils.anyIsError(range, percent)) {\n    return error.value;\n  }\n  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;\n  return jStat.mean(utils.initial(utils.rest(range.sort(function(a, b) {\n    return a - b;\n  }), trim), trim));\n};\n\nexports.VAR = {};\n\nexports.VAR.P = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  result = sigma / n;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.VAR.S = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  return sigma / (n - 1);\n};\n\nexports.VARA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n\n    if (el !== null) {\n      count++;\n    }\n  }\n  return sigma / (count - 1);\n};\n\nexports.VARPA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sigma / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.WEIBULL = {};\n\nexports.WEIBULL.DIST = function(x, alpha, beta, cumulative) {\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  if (utils.anyIsError(x, alpha, beta)) {\n    return error.value;\n  }\n  return (cumulative) ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\n};\n\nexports.Z = {};\n\nexports.Z.TEST = function(range, x, sd) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  x = utils.parseNumber(x);\n  if (utils.anyIsError(range, x)) {\n    return error.value;\n  }\n\n  sd = sd || exports.STDEV.S(range);\n  var n = range.length;\n  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);\n};\n", "var error = require('./utils/error');\n\n// TODO\nexports.CELL = function() {\n  throw new Error('CELL is not implemented');\n};\n\nexports.ERROR = {};\nexports.ERROR.TYPE = function(error_val) {\n  switch (error_val) {\n    case error.nil: return 1;\n    case error.div0: return 2;\n    case error.value: return 3;\n    case error.ref: return 4;\n    case error.name: return 5;\n    case error.num: return 6;\n    case error.na: return 7;\n    case error.data: return 8;\n  }\n  return error.na;\n};\n\n// TODO\nexports.INFO = function() {\n  throw new Error('INFO is not implemented');\n};\n\nexports.ISBLANK = function(value) {\n  return value === null;\n};\n\nexports.ISBINARY = function (number) {\n  return (/^[01]{1,10}$/).test(number);\n};\n\nexports.ISERR = function(value) {\n  return ([error.value, error.ref, error.div0, error.num, error.name, error.nil]).indexOf(value) >= 0 ||\n    (typeof value === 'number' && (isNaN(value) || !isFinite(value)));\n};\n\nexports.ISERROR = function(value) {\n  return exports.ISERR(value) || value === error.na;\n};\n\nexports.ISEVEN = function(number) {\n  return (Math.floor(Math.abs(number)) & 1) ? false : true;\n};\n\n// TODO\nexports.ISFORMULA = function() {\n  throw new Error('ISFORMULA is not implemented');\n};\n\nexports.ISLOGICAL = function(value) {\n  return value === true || value === false;\n};\n\nexports.ISNA = function(value) {\n  return value === error.na;\n};\n\nexports.ISNONTEXT = function(value) {\n  return typeof(value) !== 'string';\n};\n\nexports.ISNUMBER = function(value) {\n  return typeof(value) === 'number' && !isNaN(value) && isFinite(value);\n};\n\nexports.ISODD = function(number) {\n  return (Math.floor(Math.abs(number)) & 1) ? true : false;\n};\n\n// TODO\nexports.ISREF = function() {\n  throw new Error('ISREF is not implemented');\n};\n\nexports.ISTEXT = function(value) {\n  return typeof(value) === 'string';\n};\n\nexports.N = function(value) {\n  if (this.ISNUMBER(value)) {\n    return value;\n  }\n  if (value instanceof Date) {\n    return value.getTime();\n  }\n  if (value === true) {\n    return 1;\n  }\n  if (value === false) {\n    return 0;\n  }\n  if (this.ISERROR(value)) {\n    return value;\n  }\n  return 0;\n};\n\nexports.NA = function() {\n  return error.na;\n};\n\n\n// TODO\nexports.SHEET = function() {\n  throw new Error('SHEET is not implemented');\n};\n\n// TODO\nexports.SHEETS = function() {\n  throw new Error('SHEETS is not implemented');\n};\n\nexports.TYPE = function(value) {\n  if (this.ISNUMBER(value)) {\n    return 1;\n  }\n  if (this.ISTEXT(value)) {\n    return 2;\n  }\n  if (this.ISLOGICAL(value)) {\n    return 4;\n  }\n  if (this.ISERROR(value)) {\n    return 16;\n  }\n  if (Array.isArray(value)) {\n    return 64;\n  }\n};\n", "var utils = require('./utils/common');\nvar error = require('./utils/error');\nvar statistical = require('./statistical');\nvar information = require('./information');\nvar evalExpression = require('./utils/criteria-eval');\n\nexports.ABS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.abs(number);\n\n  return result;\n};\n\nexports.ACOS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.acos(number);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ACOSH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log(number + Math.sqrt(number * number - 1));\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ACOT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.atan(1 / number);\n\n  return result;\n};\n\nexports.ACOTH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = 0.5 * Math.log((number + 1) / (number - 1));\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\n//TODO: use options\nexports.AGGREGATE = function(function_num, options, ref1, ref2) {\n  function_num = utils.parseNumber(function_num);\n  options = utils.parseNumber(function_num);\n  if (utils.anyIsError(function_num, options)) {\n    return error.value;\n  }\n  switch (function_num) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    case 12:\n      return statistical.MEDIAN(ref1);\n    case 13:\n      return statistical.MODE.SNGL(ref1);\n    case 14:\n      return statistical.LARGE(ref1, ref2);\n    case 15:\n      return statistical.SMALL(ref1, ref2);\n    case 16:\n      return statistical.PERCENTILE.INC(ref1, ref2);\n    case 17:\n      return statistical.QUARTILE.INC(ref1, ref2);\n    case 18:\n      return statistical.PERCENTILE.EXC(ref1, ref2);\n    case 19:\n      return statistical.QUARTILE.EXC(ref1, ref2);\n  }\n};\n\nexports.ARABIC = function(text) {\n  // Credits: Rafa? Kukawski\n  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\n    return error.value;\n  }\n  var r = 0;\n  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function(i) {\n    r += {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1\n    }[i];\n  });\n  return r;\n};\n\nexports.ASIN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.asin(number);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ASINH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number + Math.sqrt(number * number + 1));\n};\n\nexports.ATAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.atan(number);\n};\n\nexports.ATAN2 = function(number_x, number_y) {\n  number_x = utils.parseNumber(number_x);\n  number_y = utils.parseNumber(number_y);\n  if (utils.anyIsError(number_x, number_y)) {\n    return error.value;\n  }\n  return Math.atan2(number_x, number_y);\n};\n\nexports.ATANH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log((1 + number) / (1 - number)) / 2;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.BASE = function(number, radix, min_length) {\n  min_length = min_length || 0;\n\n  number = utils.parseNumber(number);\n  radix = utils.parseNumber(radix);\n  min_length = utils.parseNumber(min_length);\n  if (utils.anyIsError(number, radix, min_length)) {\n    return error.value;\n  }\n  min_length = (min_length === undefined) ? 0 : min_length;\n  var result = number.toString(radix);\n  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;\n};\n\nexports.CEILING = function(number, significance, mode) {\n  significance = (significance === undefined) ? 1 : Math.abs(significance);\n  mode = mode || 0;\n\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.ceil(number / significance) * significance, precision);\n  } else {\n    if (mode === 0) {\n      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n    } else {\n      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n    }\n  }\n};\n\nexports.CEILING.MATH = exports.CEILING;\n\nexports.CEILING.PRECISE = exports.CEILING;\n\nexports.COMBIN = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));\n};\n\nexports.COMBINA = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return (number === 0 && number_chosen === 0) ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);\n};\n\nexports.COS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.cos(number);\n};\n\nexports.COSH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) + Math.exp(-number)) / 2;\n};\n\nexports.COT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.tan(number);\n};\n\nexports.COTH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 + 1) / (e2 - 1);\n};\n\nexports.CSC = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.sin(number);\n};\n\nexports.CSCH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) - Math.exp(-number));\n};\n\nexports.DECIMAL = function(number, radix) {\n  if (arguments.length < 1) {\n    return error.value;\n  }\n\n  return parseInt(number, radix);\n};\n\nexports.DEGREES = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * 180 / Math.PI;\n};\n\nexports.EVEN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return exports.CEILING(number, -2, -1);\n};\n\nexports.EXP = function(number) {\n  if (arguments.length < 1) {\n    return error.na;\n  }\n  if (typeof number !== 'number' || arguments.length > 1) {\n    return error.error;\n  }\n\n  number = Math.exp(number);\n\n  return number;\n};\n\nvar MEMOIZED_FACT = [];\nexports.FACT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n === 0 || n === 1) {\n    return 1;\n  } else if (MEMOIZED_FACT[n] > 0) {\n    return MEMOIZED_FACT[n];\n  } else {\n    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;\n    return MEMOIZED_FACT[n];\n  }\n};\n\nexports.FACTDOUBLE = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n <= 0) {\n    return 1;\n  } else {\n    return n * exports.FACTDOUBLE(n - 2);\n  }\n};\n\nexports.FLOOR = function(number, significance) {\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(number, significance)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n\n  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {\n    return error.num;\n  }\n\n  significance = Math.abs(significance);\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);\n  }\n};\n\n//TODO: Verify\nexports.FLOOR.MATH = function(number, significance, mode) {\n  significance = (significance === undefined) ? 1 : significance;\n  mode = (mode === undefined) ? 0 : mode;\n\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n\n  significance = significance ? Math.abs(significance) : 1;\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else if (mode === 0 || mode === undefined) {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n  }\n  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n};\n\n// Deprecated\nexports.FLOOR.PRECISE = exports.FLOOR.MATH;\n\n// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\nexports.GCD = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var r0 = range[0];\n  var x = r0 < 0 ? -r0 : r0;\n  for (var i = 1; i < n; i++) {\n    var ri = range[i];\n    var y = ri < 0 ? -ri : ri;\n    while (x && y) {\n      if (x > y) {\n        x %= y;\n      } else {\n        y %= x;\n      }\n    }\n    x += y;\n  }\n  return x;\n};\n\n\nexports.INT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.floor(number);\n};\n\n//TODO: verify\nexports.ISO = {\n  CEILING: exports.CEILING\n};\n\nexports.LCM = function() {\n  // Credits: Jonas Raoni Soares Silva\n  var o = utils.parseNumberArray(utils.flatten(arguments));\n  if (o instanceof Error) {\n    return o;\n  }\n  for (var i, j, n, d, r = 1;\n       (n = o.pop()) !== undefined;) {\n    while (n > 1) {\n      if (n % 2) {\n        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {\n          //empty\n        }\n        d = (i <= j) ? i : n;\n      } else {\n        d = 2;\n      }\n      for (n /= d, r *= d, i = o.length; i;\n           (o[--i] % d) === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {\n        //empty\n      }\n    }\n  }\n  return r;\n};\n\nexports.LN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number);\n};\n\nexports.LN10 = function() {\n  return Math.log(10);\n};\n\nexports.LN2 = function() {\n  return Math.log(2);\n};\n\nexports.LOG10E = function() {\n  return Math.LOG10E;\n};\n\nexports.LOG2E = function() {\n  return Math.LOG2E;\n};\n\nexports.LOG = function(number, base) {\n  number = utils.parseNumber(number);\n  base = utils.parseNumber(base);\n  if (utils.anyIsError(number, base)) {\n    return error.value;\n  }\n  base = (base === undefined) ? 10 : base;\n  return Math.log(number) / Math.log(base);\n};\n\nexports.LOG10 = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number) / Math.log(10);\n};\n\nexports.MOD = function(dividend, divisor) {\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n  if (divisor === 0) {\n    return error.div0;\n  }\n  var modulus = Math.abs(dividend % divisor);\n  return (divisor > 0) ? modulus : -modulus;\n};\n\nexports.MROUND = function(number, multiple) {\n  number = utils.parseNumber(number);\n  multiple = utils.parseNumber(multiple);\n  if (utils.anyIsError(number, multiple)) {\n    return error.value;\n  }\n  if (number * multiple < 0) {\n    return error.num;\n  }\n\n  return Math.round(number / multiple) * multiple;\n};\n\nexports.MULTINOMIAL = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var sum = 0;\n  var divisor = 1;\n  for (var i = 0; i < args.length; i++) {\n    sum += args[i];\n    divisor *= exports.FACT(args[i]);\n  }\n  return exports.FACT(sum) / divisor;\n};\n\nexports.ODD = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var temp = Math.ceil(Math.abs(number));\n  temp = (temp & 1) ? temp : temp + 1;\n  return (number > 0) ? temp : -temp;\n};\n\nexports.PI = function() {\n  return Math.PI;\n};\n\nexports.E = function() {\n  return Math.E;\n};\n\nexports.POWER = function(number, power) {\n  number = utils.parseNumber(number);\n  power = utils.parseNumber(power);\n  if (utils.anyIsError(number, power)) {\n    return error.value;\n  }\n  var result = Math.pow(number, power);\n  if (isNaN(result)) {\n    return error.num;\n  }\n\n  return result;\n};\n\nexports.PRODUCT = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var result = 1;\n  for (var i = 0; i < args.length; i++) {\n    result *= args[i];\n  }\n  return result;\n};\n\nexports.QUOTIENT = function(numerator, denominator) {\n  numerator = utils.parseNumber(numerator);\n  denominator = utils.parseNumber(denominator);\n  if (utils.anyIsError(numerator, denominator)) {\n    return error.value;\n  }\n  return parseInt(numerator / denominator, 10);\n};\n\nexports.RADIANS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * Math.PI / 180;\n};\n\nexports.RAND = function() {\n  return Math.random();\n};\n\nexports.RANDBETWEEN = function(bottom, top) {\n  bottom = utils.parseNumber(bottom);\n  top = utils.parseNumber(top);\n  if (utils.anyIsError(bottom, top)) {\n    return error.value;\n  }\n  // Creative Commons Attribution 3.0 License\n  // Copyright (c) 2012 eqcode\n  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;\n};\n\n// TODO\nexports.ROMAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  // The MIT License\n  // Copyright (c) 2008 Steven Levithan\n  var digits = String(number).split('');\n  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  var roman = '';\n  var i = 3;\n  while (i--) {\n    roman = (key[+digits.pop() + (i * 10)] || '') + roman;\n  }\n  return new Array(+digits.join('') + 1).join('M') + roman;\n};\n\nexports.ROUND = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);\n};\n\nexports.ROUNDDOWN = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n\nexports.ROUNDUP = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.ceil(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n\nexports.SEC = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.cos(number);\n};\n\nexports.SECH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) + Math.exp(-number));\n};\n\nexports.SERIESSUM = function(x, n, m, coefficients) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  m = utils.parseNumber(m);\n  coefficients = utils.parseNumberArray(coefficients);\n  if (utils.anyIsError(x, n, m, coefficients)) {\n    return error.value;\n  }\n  var result = coefficients[0] * Math.pow(x, n);\n  for (var i = 1; i < coefficients.length; i++) {\n    result += coefficients[i] * Math.pow(x, n + i * m);\n  }\n  return result;\n};\n\nexports.SIGN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return -1;\n  } else if (number === 0) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\nexports.SIN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sin(number);\n};\n\nexports.SINH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) - Math.exp(-number)) / 2;\n};\n\nexports.SQRT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return error.num;\n  }\n  return Math.sqrt(number);\n};\n\nexports.SQRTPI = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sqrt(number * Math.PI);\n};\n\nexports.SQRT1_2 = function() {\n  return 1 / Math.sqrt(2);\n};\n\nexports.SQRT2 = function() {\n  return Math.sqrt(2);\n};\n\nexports.SUBTOTAL = function(function_code, ref1) {\n  function_code = utils.parseNumber(function_code);\n  if (function_code instanceof Error) {\n    return function_code;\n  }\n  switch (function_code) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    // no hidden values for us\n    case 101:\n      return statistical.AVERAGE(ref1);\n    case 102:\n      return statistical.COUNT(ref1);\n    case 103:\n      return statistical.COUNTA(ref1);\n    case 104:\n      return statistical.MAX(ref1);\n    case 105:\n      return statistical.MIN(ref1);\n    case 106:\n      return exports.PRODUCT(ref1);\n    case 107:\n      return statistical.STDEV.S(ref1);\n    case 108:\n      return statistical.STDEV.P(ref1);\n    case 109:\n      return exports.SUM(ref1);\n    case 110:\n      return statistical.VAR.S(ref1);\n    case 111:\n      return statistical.VAR.P(ref1);\n\n  }\n};\n\nexports.ADD = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n\n  return num1 + num2;\n};\n\nexports.MINUS = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n\n  return num1 - num2;\n};\n\nexports.DIVIDE = function (dividend, divisor) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n\n  if (divisor === 0) {\n    return error.div0;\n  }\n\n  return dividend / divisor;\n};\n\nexports.MULTIPLY = function (factor1, factor2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  factor1 = utils.parseNumber(factor1);\n  factor2 = utils.parseNumber(factor2);\n  if (utils.anyIsError(factor1, factor2)) {\n    return error.value;\n  }\n\n  return factor1 * factor2;\n};\n\nexports.GTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 >= num2;\n};\n\nexports.LT = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 < num2;\n};\n\n\nexports.LTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 <= num2;\n};\n\nexports.EQ = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  return value1 === value2;\n};\n\nexports.NE = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  return value1 !== value2;\n};\n\nexports.POW = function (base, exponent) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  base = utils.parseNumber(base);\n  exponent = utils.parseNumber(exponent);\n  if (utils.anyIsError(base, exponent)) {\n    return error.error;\n  }\n\n  return exports.POWER(base, exponent);\n};\n\nexports.SUM = function() {\n  var result = 0;\n\n  utils.arrayEach(utils.argsToArray(arguments), function(value) {\n    if (typeof value === 'number') {\n      result += value;\n\n    } else if (typeof value === 'string') {\n      var parsed = parseFloat(value);\n\n      !isNaN(parsed) && (result += parsed);\n\n    } else if (Array.isArray(value)) {\n      result += exports.SUM.apply(null, value);\n    }\n  });\n\n  return result;\n};\n\nexports.SUMIF = function(range, criteria) {\n  range = utils.parseNumberArray(utils.flatten(range));\n\n  if (range instanceof Error) {\n    return range;\n  }\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n\n    if (isWildcard) {\n      result += value;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n      result += (evalExpression.compute(tokens) ? value : 0);\n    }\n  }\n\n  return result;\n};\n\nexports.SUMIFS = function() {\n  var args = utils.argsToArray(arguments);\n  var range = utils.parseNumberArray(utils.flatten(args.shift()));\n\n  if (range instanceof Error) {\n    return range;\n  }\n  var criterias = args;\n  var n_range_elements = range.length;\n  var criteriaLength = criterias.length;\n  var result = 0;\n\n  for (var i = 0; i < n_range_elements; i++) {\n    var value = range[i];\n    var isMeetCondition = false;\n\n    for (var j = 0; j < criteriaLength; j++) {\n      var criteria = criterias[j];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n\n      isMeetCondition = true;\n    }\n\n    if (isMeetCondition) {\n      result += value;\n    }\n  }\n\n  return result;\n};\n\nexports.SUMPRODUCT = function() {\n  if (!arguments || arguments.length === 0) {\n    return error.value;\n  }\n  var arrays = arguments.length + 1;\n  var result = 0;\n  var product;\n  var k;\n  var _i;\n  var _ij;\n  for (var i = 0; i < arguments[0].length; i++) {\n    if (!(arguments[0][i] instanceof Array)) {\n      product = 1;\n      for (k = 1; k < arrays; k++) {\n        _i = utils.parseNumber(arguments[k - 1][i]);\n        if (_i instanceof Error) {\n          return _i;\n        }\n        product *= _i;\n      }\n      result += product;\n    } else {\n      for (var j = 0; j < arguments[0][i].length; j++) {\n        product = 1;\n        for (k = 1; k < arrays; k++) {\n          _ij = utils.parseNumber(arguments[k - 1][i][j]);\n          if (_ij instanceof Error) {\n            return _ij;\n          }\n          product *= _ij;\n        }\n        result += product;\n      }\n    }\n  }\n  return result;\n};\n\nexports.SUMSQ = function() {\n  var numbers = utils.parseNumberArray(utils.flatten(arguments));\n  if (numbers instanceof Error) {\n    return numbers;\n  }\n  var result = 0;\n  var length = numbers.length;\n  for (var i = 0; i < length; i++) {\n    result += (information.ISNUMBER(numbers[i])) ? numbers[i] * numbers[i] : 0;\n  }\n  return result;\n};\n\nexports.SUMX2MY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];\n  }\n  return result;\n};\n\nexports.SUMX2PY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];\n  }\n  return result;\n};\n\nexports.SUMXMY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.flatten(array_x);\n  array_y = utils.flatten(array_y);\n  for (var i = 0; i < array_x.length; i++) {\n    result += Math.pow(array_x[i] - array_y[i], 2);\n  }\n  return result;\n};\n\nexports.TAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.tan(number);\n};\n\nexports.TANH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 - 1) / (e2 + 1);\n};\n\nexports.TRUNC = function(number, digits) {\n  digits = (digits === undefined) ? 0 : digits;\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n", "/* bessel.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported BESSEL */\nvar BESSEL;\n(function (factory) {\n  /*jshint ignore:start */\n  if(typeof DO_NOT_EXPORT_BESSEL === 'undefined') {\n    if('object' === typeof exports) {\n      factory(exports);\n    } else if ('function' === typeof define && define.amd) {\n      define(function () {\n        var module = {};\n        factory(module);\n        return module;\n      });\n    } else {\n      factory(BESSEL = {});\n    }\n  } else {\n    factory(BESSEL = {});\n  }\n  /*jshint ignore:end */\n}(function(BESSEL) {\nBESSEL.version = '1.0.2';\nvar M = Math;\n\nfunction _horner(arr, v) { for(var i = 0, z = 0; i < arr.length; ++i) z = v * z + arr[i]; return z; }\nfunction _bessel_iter(x, n, f0, f1, sign) {\n  if(n === 0) return f0;\n  if(n === 1) return f1;\n  var tdx = 2 / x, f2 = f1;\n  for(var o = 1; o < n; ++o) {\n    f2 = f1 * o * tdx + sign * f0;\n    f0 = f1; f1 = f2;\n  }\n  return f2;\n}\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\n  return function bessel(x,n) {\n    if(nonzero) {\n      if(x === 0) return (nonzero == 1 ? -Infinity : Infinity);\n      else if(x < 0) return NaN;\n    }\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(n < 0) return NaN;\n    n|=0;\n    var b0 = bessel0(x), b1 = bessel1(x);\n    return _bessel_iter(x, n, b0, b1, sign);\n  };\n}\nvar besselj = (function() {\n  var W = 0.636619772; // 2 / Math.PI\n\n  var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\n  var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\n  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\n\n  function bessel0(x) {\n    var a=0, a1=0, a2=0, y = x * x;\n    if(x < 8) {\n      a1 = _horner(b0_a1a, y);\n      a2 = _horner(b0_a2a, y);\n      a = a1 / a2;\n    } else {\n      var xx = x - 0.785398164;\n      y = 64 / y;\n      a1 = _horner(b0_a1b, y);\n      a2 = _horner(b0_a2b, y);\n      a = M.sqrt(W/x)*(M.cos(xx)*a1-M.sin(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\n  var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\n  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n\n  function bessel1(x) {\n    var a=0, a1=0, a2=0, y = x*x, xx = M.abs(x) - 2.356194491;\n    if(Math.abs(x)< 8) {\n      a1 = x*_horner(b1_a1a, y);\n      a2 = _horner(b1_a2a, y);\n      a = a1 / a2;\n    } else {\n      y = 64 / y;\n      a1=_horner(b1_a1b, y);\n      a2=_horner(b1_a2b, y);\n      a=M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));\n      if(x < 0) a = -a;\n    }\n    return a;\n  }\n\n  return function besselj(x, n) {\n    n = Math.round(n);\n    if(!isFinite(x)) return isNaN(x) ? x : 0;\n    if(n < 0) return ((n%2)?-1:1)*besselj(x, -n);\n    if(x < 0) return ((n%2)?-1:1)*besselj(-x, n);\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(x === 0) return 0;\n\n    var ret=0.0;\n    if(x > n) {\n      ret = _bessel_iter(x, n, bessel0(x), bessel1(x),-1);\n    } else {\n      var m=2*M.floor((n+M.floor(M.sqrt(40*n)))/2);\n      var jsum=false;\n      var bjp=0.0, sum=0.0;\n      var bj=1.0, bjm = 0.0;\n      var tox = 2 / x;\n      for (var j=m;j>0;j--) {\n        bjm=j*tox*bj-bjp;\n        bjp=bj;\n        bj=bjm;\n        if (M.abs(bj) > 1E10) {\n          bj *= 1E-10;\n          bjp *= 1E-10;\n          ret *= 1E-10;\n          sum *= 1E-10;\n        }\n        if (jsum) sum += bj;\n        jsum=!jsum;\n        if (j == n) ret=bjp;\n      }\n      sum=2.0*sum-bj;\n      ret /= sum;\n    }\n    return ret;\n  };\n})();\nvar bessely = (function() {\n  var W = 0.636619772;\n\n  var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\n  var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\n  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\n\n  function bessel0(x) {\n    var a=0, a1=0, a2=0, y = x * x, xx = x - 0.785398164;\n    if(x < 8) {\n      a1 = _horner(b0_a1a, y);\n      a2 = _horner(b0_a2a, y);\n      a = a1/a2 + W * besselj(x,0) * M.log(x);\n    } else {\n      y = 64 / y;\n      a1 = _horner(b0_a1b, y);\n      a2 = _horner(b0_a2b, y);\n      a = M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\n  var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\n  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n\n  function bessel1(x) {\n    var a=0, a1=0, a2=0, y = x*x, xx = x - 2.356194491;\n    if(x < 8) {\n      a1 = x*_horner(b1_a1a, y);\n      a2 = _horner(b1_a2a, y);\n      a = a1/a2 + W * (besselj(x,1) * M.log(x) - 1 / x);\n    } else {\n      y = 64 / y;\n      a1=_horner(b1_a1b, y);\n      a2=_horner(b1_a2b, y);\n      a=M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\n})();\nvar besseli = (function() {\n  var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\n  var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\n\n  function bessel0(x) {\n    if(x <= 3.75) return _horner(b0_a, x*x/(3.75*3.75));\n    return M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b0_b, 3.75/M.abs(x));\n  }\n\n  var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\n  var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\n\n  function bessel1(x) {\n    if(x < 3.75) return x * _horner(b1_a, x*x/(3.75*3.75));\n    return (x < 0 ? -1 : 1) * M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b1_b, 3.75/M.abs(x));\n  }\n\n  return function besseli(x, n) {\n    n = Math.round(n);\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(n < 0) return NaN;\n    if(M.abs(x) === 0) return 0;\n    if(x == Infinity) return Infinity;\n\n    var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi=1.0, bim=0.0;\n    var m=2*M.round((n+M.round(M.sqrt(40*n)))/2);\n    for (j=m;j>0;j--) {\n      bim=j*tox*bi + bip;\n      bip=bi; bi=bim;\n      if (M.abs(bi) > 1E10) {\n        bi *= 1E-10;\n        bip *= 1E-10;\n        ret *= 1E-10;\n      }\n      if(j == n) ret = bip;\n    }\n    ret *= besseli(x, 0) / bi;\n    return x < 0 && (n%2) ? -ret : ret;\n  };\n\n})();\n\nvar besselk = (function() {\n  var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\n  var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\n\n  function bessel0(x) {\n    if(x <= 2) return -M.log(x/2) * besseli(x,0) + _horner(b0_a, x*x/4);\n    return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2/x);\n  }\n\n  var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\n  var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\n\n  function bessel1(x) {\n    if(x <= 2) return M.log(x/2) * besseli(x,1) + (1/x) * _horner(b1_a, x*x/4);\n    return M.exp(-x)/M.sqrt(x)*_horner(b1_b, 2/x);\n  }\n\n  return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\n})();\nBESSEL.besselj = besselj;\nBESSEL.bessely = bessely;\nBESSEL.besseli = besseli;\nBESSEL.besselk = besselk;\n}));\n", "var error = require('./utils/error');\nvar jStat = require('jstat');\nvar text = require('./text');\nvar utils = require('./utils/common');\nvar bessel = require('bessel');\n\nfunction isValidBinaryNumber(number) {\n  return (/^[01]{1,10}$/).test(number);\n}\n\nexports.BESSELI = function(x, n) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(x, n)) {\n    return error.value;\n  }\n\n  return bessel.besseli(x, n);\n};\n\nexports.BESSELJ = function(x, n) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(x, n)) {\n    return error.value;\n  }\n\n  return bessel.besselj(x, n);\n};\n\nexports.BESSELK = function(x, n) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(x, n)) {\n    return error.value;\n  }\n\n  return bessel.besselk(x, n);\n};\n\nexports.BESSELY = function(x, n) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(x, n)) {\n    return error.value;\n  }\n\n  return bessel.bessely(x, n);\n};\n\nexports.BIN2DEC = function(number) {\n  // Return error if number is not binary or contains more than 10 characters (10 digits)\n  if (!isValidBinaryNumber(number)) {\n    return error.num;\n  }\n\n  // Convert binary number to decimal\n  var result = parseInt(number, 2);\n\n  // Handle negative numbers\n  var stringified = number.toString();\n  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n    return parseInt(stringified.substring(1), 2) - 512;\n  } else {\n    return result;\n  }\n};\n\n\nexports.BIN2HEX = function(number, places) {\n  // Return error if number is not binary or contains more than 10 characters (10 digits)\n  if (!isValidBinaryNumber(number)) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character hexadecimal number if number is negative\n  var stringified = number.toString();\n  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n    return (1099511627264 + parseInt(stringified.substring(1), 2)).toString(16);\n  }\n\n  // Convert binary number to hexadecimal\n  var result = parseInt(number, 2).toString(16);\n\n  // Return hexadecimal number using the minimum number of characters necessary if places is undefined\n  if (places === undefined) {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.BIN2OCT = function(number, places) {\n  // Return error if number is not binary or contains more than 10 characters (10 digits)\n  if (!isValidBinaryNumber(number)) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character octal number if number is negative\n  var stringified = number.toString();\n  if (stringified.length === 10 && stringified.substring(0, 1) === '1') {\n    return (1073741312 + parseInt(stringified.substring(1), 2)).toString(8);\n  }\n\n  // Convert binary number to octal\n  var result = parseInt(number, 2).toString(8);\n\n  // Return octal number using the minimum number of characters necessary if places is undefined\n  if (places === undefined) {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.BITAND = function(number1, number2) {\n  // Return error if either number is a non-numeric value\n  number1 = utils.parseNumber(number1);\n  number2 = utils.parseNumber(number2);\n  if (utils.anyIsError(number1, number2)) {\n    return error.value;\n  }\n\n  // Return error if either number is less than 0\n  if (number1 < 0 || number2 < 0) {\n    return error.num;\n  }\n\n  // Return error if either number is a non-integer\n  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {\n    return error.num;\n  }\n\n  // Return error if either number is greater than (2^48)-1\n  if (number1 > 281474976710655 || number2 > 281474976710655) {\n    return error.num;\n  }\n\n  // Return bitwise AND of two numbers\n  return number1 & number2;\n};\n\nexports.BITLSHIFT = function(number, shift) {\n  number = utils.parseNumber(number);\n  shift = utils.parseNumber(shift);\n  if (utils.anyIsError(number, shift)) {\n    return error.value;\n  }\n\n  // Return error if number is less than 0\n  if (number < 0) {\n    return error.num;\n  }\n\n  // Return error if number is a non-integer\n  if (Math.floor(number) !== number) {\n    return error.num;\n  }\n\n  // Return error if number is greater than (2^48)-1\n  if (number > 281474976710655) {\n    return error.num;\n  }\n\n  // Return error if the absolute value of shift is greater than 53\n  if (Math.abs(shift) > 53) {\n    return error.num;\n  }\n\n  // Return number shifted by shift bits to the left or to the right if shift is negative\n  return (shift >= 0) ? number << shift : number >> -shift;\n};\n\nexports.BITOR = function(number1, number2) {\n  number1 = utils.parseNumber(number1);\n  number2 = utils.parseNumber(number2);\n  if (utils.anyIsError(number1, number2)) {\n    return error.value;\n  }\n\n  // Return error if either number is less than 0\n  if (number1 < 0 || number2 < 0) {\n    return error.num;\n  }\n\n  // Return error if either number is a non-integer\n  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {\n    return error.num;\n  }\n\n  // Return error if either number is greater than (2^48)-1\n  if (number1 > 281474976710655 || number2 > 281474976710655) {\n    return error.num;\n  }\n\n  // Return bitwise OR of two numbers\n  return number1 | number2;\n};\n\nexports.BITRSHIFT = function(number, shift) {\n  number = utils.parseNumber(number);\n  shift = utils.parseNumber(shift);\n  if (utils.anyIsError(number, shift)) {\n    return error.value;\n  }\n\n  // Return error if number is less than 0\n  if (number < 0) {\n    return error.num;\n  }\n\n  // Return error if number is a non-integer\n  if (Math.floor(number) !== number) {\n    return error.num;\n  }\n\n  // Return error if number is greater than (2^48)-1\n  if (number > 281474976710655) {\n    return error.num;\n  }\n\n  // Return error if the absolute value of shift is greater than 53\n  if (Math.abs(shift) > 53) {\n    return error.num;\n  }\n\n  // Return number shifted by shift bits to the right or to the left if shift is negative\n  return (shift >= 0) ? number >> shift : number << -shift;\n};\n\nexports.BITXOR = function(number1, number2) {\n  number1 = utils.parseNumber(number1);\n  number2 = utils.parseNumber(number2);\n  if (utils.anyIsError(number1, number2)) {\n    return error.value;\n  }\n\n  // Return error if either number is less than 0\n  if (number1 < 0 || number2 < 0) {\n    return error.num;\n  }\n\n  // Return error if either number is a non-integer\n  if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {\n    return error.num;\n  }\n\n  // Return error if either number is greater than (2^48)-1\n  if (number1 > 281474976710655 || number2 > 281474976710655) {\n    return error.num;\n  }\n\n  // Return bitwise XOR of two numbers\n  return number1 ^ number2;\n};\n\nexports.COMPLEX = function(real, imaginary, suffix) {\n  real = utils.parseNumber(real);\n  imaginary = utils.parseNumber(imaginary);\n  if (utils.anyIsError(real, imaginary)) {\n    return real;\n  }\n\n  // Set suffix\n  suffix = (suffix === undefined) ? 'i' : suffix;\n\n  // Return error if suffix is neither \"i\" nor \"j\"\n  if (suffix !== 'i' && suffix !== 'j') {\n    return error.value;\n  }\n\n  // Return complex number\n  if (real === 0 && imaginary === 0) {\n    return 0;\n  } else if (real === 0) {\n    return (imaginary === 1) ? suffix : imaginary.toString() + suffix;\n  } else if (imaginary === 0) {\n    return real.toString();\n  } else {\n    var sign = (imaginary > 0) ? '+' : '';\n    return real.toString() + sign + ((imaginary === 1) ? suffix : imaginary.toString() + suffix);\n  }\n};\n\nexports.CONVERT = function(number, from_unit, to_unit) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  // List of units supported by CONVERT and units defined by the International System of Units\n  // [Name, Symbol, Alternate symbols, Quantity, ISU, CONVERT, Conversion ratio]\n  var units = [\n    [\"a.u. of action\", \"?\", null, \"action\", false, false, 1.05457168181818e-34],\n    [\"a.u. of charge\", \"e\", null, \"electric_charge\", false, false, 1.60217653141414e-19],\n    [\"a.u. of energy\", \"Eh\", null, \"energy\", false, false, 4.35974417757576e-18],\n    [\"a.u. of length\", \"a?\", null, \"length\", false, false, 5.29177210818182e-11],\n    [\"a.u. of mass\", \"m?\", null, \"mass\", false, false, 9.10938261616162e-31],\n    [\"a.u. of time\", \"?/Eh\", null, \"time\", false, false, 2.41888432650516e-17],\n    [\"admiralty knot\", \"admkn\", null, \"speed\", false, true, 0.514773333],\n    [\"ampere\", \"A\", null, \"electric_current\", true, false, 1],\n    [\"ampere per meter\", \"A/m\", null, \"magnetic_field_intensity\", true, false, 1],\n    [\"ångström\", \"Å\", [\"ang\"], \"length\", false, true, 1e-10],\n    [\"are\", \"ar\", null, \"area\", false, true, 100],\n    [\"astronomical unit\", \"ua\", null, \"length\", false, false, 1.49597870691667e-11],\n    [\"bar\", \"bar\", null, \"pressure\", false, false, 100000],\n    [\"barn\", \"b\", null, \"area\", false, false, 1e-28],\n    [\"becquerel\", \"Bq\", null, \"radioactivity\", true, false, 1],\n    [\"bit\", \"bit\", [\"b\"], \"information\", false, true, 1],\n    [\"btu\", \"BTU\", [\"btu\"], \"energy\", false, true, 1055.05585262],\n    [\"byte\", \"byte\", null, \"information\", false, true, 8],\n    [\"candela\", \"cd\", null, \"luminous_intensity\", true, false, 1],\n    [\"candela per square metre\", \"cd/m?\", null, \"luminance\", true, false, 1],\n    [\"coulomb\", \"C\", null, \"electric_charge\", true, false, 1],\n    [\"cubic ångström\", \"ang3\", [\"ang^3\"], \"volume\", false, true, 1e-30],\n    [\"cubic foot\", \"ft3\", [\"ft^3\"], \"volume\", false, true, 0.028316846592],\n    [\"cubic inch\", \"in3\", [\"in^3\"], \"volume\", false, true, 0.000016387064],\n    [\"cubic light-year\", \"ly3\", [\"ly^3\"], \"volume\", false, true, 8.46786664623715e-47],\n    [\"cubic metre\", \"m?\", null, \"volume\", true, true, 1],\n    [\"cubic mile\", \"mi3\", [\"mi^3\"], \"volume\", false, true, 4168181825.44058],\n    [\"cubic nautical mile\", \"Nmi3\", [\"Nmi^3\"], \"volume\", false, true, 6352182208],\n    [\"cubic Pica\", \"Pica3\", [\"Picapt3\", \"Pica^3\", \"Picapt^3\"], \"volume\", false, true, 7.58660370370369e-8],\n    [\"cubic yard\", \"yd3\", [\"yd^3\"], \"volume\", false, true, 0.764554857984],\n    [\"cup\", \"cup\", null, \"volume\", false, true, 0.0002365882365],\n    [\"dalton\", \"Da\", [\"u\"], \"mass\", false, false, 1.66053886282828e-27],\n    [\"day\", \"d\", [\"day\"], \"time\", false, true, 86400],\n    [\"degree\", \"°\", null, \"angle\", false, false, 0.0174532925199433],\n    [\"degrees Rankine\", \"Rank\", null, \"temperature\", false, true, 0.555555555555556],\n    [\"dyne\", \"dyn\", [\"dy\"], \"force\", false, true, 0.00001],\n    [\"electronvolt\", \"eV\", [\"ev\"], \"energy\", false, true, 1.60217656514141],\n    [\"ell\", \"ell\", null, \"length\", false, true, 1.143],\n    [\"erg\", \"erg\", [\"e\"], \"energy\", false, true, 1e-7],\n    [\"farad\", \"F\", null, \"electric_capacitance\", true, false, 1],\n    [\"fluid ounce\", \"oz\", null, \"volume\", false, true, 0.0000295735295625],\n    [\"foot\", \"ft\", null, \"length\", false, true, 0.3048],\n    [\"foot-pound\", \"flb\", null, \"energy\", false, true, 1.3558179483314],\n    [\"gal\", \"Gal\", null, \"acceleration\", false, false, 0.01],\n    [\"gallon\", \"gal\", null, \"volume\", false, true, 0.003785411784],\n    [\"gauss\", \"G\", [\"ga\"], \"magnetic_flux_density\", false, true, 1],\n    [\"grain\", \"grain\", null, \"mass\", false, true, 0.0000647989],\n    [\"gram\", \"g\", null, \"mass\", false, true, 0.001],\n    [\"gray\", \"Gy\", null, \"absorbed_dose\", true, false, 1],\n    [\"gross registered ton\", \"GRT\", [\"regton\"], \"volume\", false, true, 2.8316846592],\n    [\"hectare\", \"ha\", null, \"area\", false, true, 10000],\n    [\"henry\", \"H\", null, \"inductance\", true, false, 1],\n    [\"hertz\", \"Hz\", null, \"frequency\", true, false, 1],\n    [\"horsepower\", \"HP\", [\"h\"], \"power\", false, true, 745.69987158227],\n    [\"horsepower-hour\", \"HPh\", [\"hh\", \"hph\"], \"energy\", false, true, 2684519.538],\n    [\"hour\", \"h\", [\"hr\"], \"time\", false, true, 3600],\n    [\"imperial gallon (U.K.)\", \"uk_gal\", null, \"volume\", false, true, 0.00454609],\n    [\"imperial hundredweight\", \"lcwt\", [\"uk_cwt\", \"hweight\"], \"mass\", false, true, 50.802345],\n    [\"imperial quart (U.K)\", \"uk_qt\", null, \"volume\", false, true, 0.0011365225],\n    [\"imperial ton\", \"brton\", [\"uk_ton\", \"LTON\"], \"mass\", false, true, 1016.046909],\n    [\"inch\", \"in\", null, \"length\", false, true, 0.0254],\n    [\"international acre\", \"uk_acre\", null, \"area\", false, true, 4046.8564224],\n    [\"IT calorie\", \"cal\", null, \"energy\", false, true, 4.1868],\n    [\"joule\", \"J\", null, \"energy\", true, true, 1],\n    [\"katal\", \"kat\", null, \"catalytic_activity\", true, false, 1],\n    [\"kelvin\", \"K\", [\"kel\"], \"temperature\", true, true, 1],\n    [\"kilogram\", \"kg\", null, \"mass\", true, true, 1],\n    [\"knot\", \"kn\", null, \"speed\", false, true, 0.514444444444444],\n    [\"light-year\", \"ly\", null, \"length\", false, true, 9460730472580800],\n    [\"litre\", \"L\", [\"l\", \"lt\"], \"volume\", false, true, 0.001],\n    [\"lumen\", \"lm\", null, \"luminous_flux\", true, false, 1],\n    [\"lux\", \"lx\", null, \"illuminance\", true, false, 1],\n    [\"maxwell\", \"Mx\", null, \"magnetic_flux\", false, false, 1e-18],\n    [\"measurement ton\", \"MTON\", null, \"volume\", false, true, 1.13267386368],\n    [\"meter per hour\", \"m/h\", [\"m/hr\"], \"speed\", false, true, 0.00027777777777778],\n    [\"meter per second\", \"m/s\", [\"m/sec\"], \"speed\", true, true, 1],\n    [\"meter per second squared\", \"m?s??\", null, \"acceleration\", true, false, 1],\n    [\"parsec\", \"pc\", [\"parsec\"], \"length\", false, true, 30856775814671900],\n    [\"meter squared per second\", \"m?/s\", null, \"kinematic_viscosity\", true, false, 1],\n    [\"metre\", \"m\", null, \"length\", true, true, 1],\n    [\"miles per hour\", \"mph\", null, \"speed\", false, true, 0.44704],\n    [\"millimetre of mercury\", \"mmHg\", null, \"pressure\", false, false, 133.322],\n    [\"minute\", \"?\", null, \"angle\", false, false, 0.000290888208665722],\n    [\"minute\", \"min\", [\"mn\"], \"time\", false, true, 60],\n    [\"modern teaspoon\", \"tspm\", null, \"volume\", false, true, 0.000005],\n    [\"mole\", \"mol\", null, \"amount_of_substance\", true, false, 1],\n    [\"morgen\", \"Morgen\", null, \"area\", false, true, 2500],\n    [\"n.u. of action\", \"?\", null, \"action\", false, false, 1.05457168181818e-34],\n    [\"n.u. of mass\", \"m?\", null, \"mass\", false, false, 9.10938261616162e-31],\n    [\"n.u. of speed\", \"c?\", null, \"speed\", false, false, 299792458],\n    [\"n.u. of time\", \"?/(me?c??)\", null, \"time\", false, false, 1.28808866778687e-21],\n    [\"nautical mile\", \"M\", [\"Nmi\"], \"length\", false, true, 1852],\n    [\"newton\", \"N\", null, \"force\", true, true, 1],\n    [\"œrsted\", \"Oe \", null, \"magnetic_field_intensity\", false, false, 79.5774715459477],\n    [\"ohm\", \"Ω\", null, \"electric_resistance\", true, false, 1],\n    [\"ounce mass\", \"ozm\", null, \"mass\", false, true, 0.028349523125],\n    [\"pascal\", \"Pa\", null, \"pressure\", true, false, 1],\n    [\"pascal second\", \"Pa?s\", null, \"dynamic_viscosity\", true, false, 1],\n    [\"pferdestärke\", \"PS\", null, \"power\", false, true, 735.49875],\n    [\"phot\", \"ph\", null, \"illuminance\", false, false, 0.0001],\n    [\"pica (1/6 inch)\", \"pica\", null, \"length\", false, true, 0.00035277777777778],\n    [\"pica (1/72 inch)\", \"Pica\", [\"Picapt\"], \"length\", false, true, 0.00423333333333333],\n    [\"poise\", \"P\", null, \"dynamic_viscosity\", false, false, 0.1],\n    [\"pond\", \"pond\", null, \"force\", false, true, 0.00980665],\n    [\"pound force\", \"lbf\", null, \"force\", false, true, 4.4482216152605],\n    [\"pound mass\", \"lbm\", null, \"mass\", false, true, 0.45359237],\n    [\"quart\", \"qt\", null, \"volume\", false, true, 0.000946352946],\n    [\"radian\", \"rad\", null, \"angle\", true, false, 1],\n    [\"second\", \"?\", null, \"angle\", false, false, 0.00000484813681109536],\n    [\"second\", \"s\", [\"sec\"], \"time\", true, true, 1],\n    [\"short hundredweight\", \"cwt\", [\"shweight\"], \"mass\", false, true, 45.359237],\n    [\"siemens\", \"S\", null, \"electrical_conductance\", true, false, 1],\n    [\"sievert\", \"Sv\", null, \"equivalent_dose\", true, false, 1],\n    [\"slug\", \"sg\", null, \"mass\", false, true, 14.59390294],\n    [\"square ångström\", \"ang2\", [\"ang^2\"], \"area\", false, true, 1e-20],\n    [\"square foot\", \"ft2\", [\"ft^2\"], \"area\", false, true, 0.09290304],\n    [\"square inch\", \"in2\", [\"in^2\"], \"area\", false, true, 0.00064516],\n    [\"square light-year\", \"ly2\", [\"ly^2\"], \"area\", false, true, 8.95054210748189e+31],\n    [\"square meter\", \"m?\", null, \"area\", true, true, 1],\n    [\"square mile\", \"mi2\", [\"mi^2\"], \"area\", false, true, 2589988.110336],\n    [\"square nautical mile\", \"Nmi2\", [\"Nmi^2\"], \"area\", false, true, 3429904],\n    [\"square Pica\", \"Pica2\", [\"Picapt2\", \"Pica^2\", \"Picapt^2\"], \"area\", false, true, 0.00001792111111111],\n    [\"square yard\", \"yd2\", [\"yd^2\"], \"area\", false, true, 0.83612736],\n    [\"statute mile\", \"mi\", null, \"length\", false, true, 1609.344],\n    [\"steradian\", \"sr\", null, \"solid_angle\", true, false, 1],\n    [\"stilb\", \"sb\", null, \"luminance\", false, false, 0.0001],\n    [\"stokes\", \"St\", null, \"kinematic_viscosity\", false, false, 0.0001],\n    [\"stone\", \"stone\", null, \"mass\", false, true, 6.35029318],\n    [\"tablespoon\", \"tbs\", null, \"volume\", false, true, 0.0000147868],\n    [\"teaspoon\", \"tsp\", null, \"volume\", false, true, 0.00000492892],\n    [\"tesla\", \"T\", null, \"magnetic_flux_density\", true, true, 1],\n    [\"thermodynamic calorie\", \"c\", null, \"energy\", false, true, 4.184],\n    [\"ton\", \"ton\", null, \"mass\", false, true, 907.18474],\n    [\"tonne\", \"t\", null, \"mass\", false, false, 1000],\n    [\"U.K. pint\", \"uk_pt\", null, \"volume\", false, true, 0.00056826125],\n    [\"U.S. bushel\", \"bushel\", null, \"volume\", false, true, 0.03523907],\n    [\"U.S. oil barrel\", \"barrel\", null, \"volume\", false, true, 0.158987295],\n    [\"U.S. pint\", \"pt\", [\"us_pt\"], \"volume\", false, true, 0.000473176473],\n    [\"U.S. survey mile\", \"survey_mi\", null, \"length\", false, true, 1609.347219],\n    [\"U.S. survey/statute acre\", \"us_acre\", null, \"area\", false, true, 4046.87261],\n    [\"volt\", \"V\", null, \"voltage\", true, false, 1],\n    [\"watt\", \"W\", null, \"power\", true, true, 1],\n    [\"watt-hour\", \"Wh\", [\"wh\"], \"energy\", false, true, 3600],\n    [\"weber\", \"Wb\", null, \"magnetic_flux\", true, false, 1],\n    [\"yard\", \"yd\", null, \"length\", false, true, 0.9144],\n    [\"year\", \"yr\", null, \"time\", false, true, 31557600]\n  ];\n\n  // Binary prefixes\n  // [Name, Prefix power of 2 value, Previx value, Abbreviation, Derived from]\n  var binary_prefixes = {\n    Yi: [\"yobi\", 80, 1208925819614629174706176, \"Yi\", \"yotta\"],\n    Zi: [\"zebi\", 70, 1180591620717411303424, \"Zi\", \"zetta\"],\n    Ei: [\"exbi\", 60, 1152921504606846976, \"Ei\", \"exa\"],\n    Pi: [\"pebi\", 50, 1125899906842624, \"Pi\", \"peta\"],\n    Ti: [\"tebi\", 40, 1099511627776, \"Ti\", \"tera\"],\n    Gi: [\"gibi\", 30, 1073741824, \"Gi\", \"giga\"],\n    Mi: [\"mebi\", 20, 1048576, \"Mi\", \"mega\"],\n    ki: [\"kibi\", 10, 1024, \"ki\", \"kilo\"]\n  };\n\n  // Unit prefixes\n  // [Name, Multiplier, Abbreviation]\n  var unit_prefixes = {\n    Y: [\"yotta\", 1e+24, \"Y\"],\n    Z: [\"zetta\", 1e+21, \"Z\"],\n    E: [\"exa\", 1e+18, \"E\"],\n    P: [\"peta\", 1e+15, \"P\"],\n    T: [\"tera\", 1e+12, \"T\"],\n    G: [\"giga\", 1e+09, \"G\"],\n    M: [\"mega\", 1e+06, \"M\"],\n    k: [\"kilo\", 1e+03, \"k\"],\n    h: [\"hecto\", 1e+02, \"h\"],\n    e: [\"dekao\", 1e+01, \"e\"],\n    d: [\"deci\", 1e-01, \"d\"],\n    c: [\"centi\", 1e-02, \"c\"],\n    m: [\"milli\", 1e-03, \"m\"],\n    u: [\"micro\", 1e-06, \"u\"],\n    n: [\"nano\", 1e-09, \"n\"],\n    p: [\"pico\", 1e-12, \"p\"],\n    f: [\"femto\", 1e-15, \"f\"],\n    a: [\"atto\", 1e-18, \"a\"],\n    z: [\"zepto\", 1e-21, \"z\"],\n    y: [\"yocto\", 1e-24, \"y\"]\n  };\n\n  // Initialize units and multipliers\n  var from = null;\n  var to = null;\n  var base_from_unit = from_unit;\n  var base_to_unit = to_unit;\n  var from_multiplier = 1;\n  var to_multiplier = 1;\n  var alt;\n\n  // Lookup from and to units\n  for (var i = 0; i < units.length; i++) {\n    alt = (units[i][2] === null) ? [] : units[i][2];\n    if (units[i][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n      from = units[i];\n    }\n    if (units[i][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n      to = units[i];\n    }\n  }\n\n  // Lookup from prefix\n  if (from === null) {\n    var from_binary_prefix = binary_prefixes[from_unit.substring(0, 2)];\n    var from_unit_prefix = unit_prefixes[from_unit.substring(0, 1)];\n\n    // Handle dekao unit prefix (only unit prefix with two characters)\n    if (from_unit.substring(0, 2) === 'da') {\n      from_unit_prefix = [\"dekao\", 1e+01, \"da\"];\n    }\n\n    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')\n    if (from_binary_prefix) {\n      from_multiplier = from_binary_prefix[2];\n      base_from_unit = from_unit.substring(2);\n    } else if (from_unit_prefix) {\n      from_multiplier = from_unit_prefix[1];\n      base_from_unit = from_unit.substring(from_unit_prefix[2].length);\n    }\n\n    // Lookup from unit\n    for (var j = 0; j < units.length; j++) {\n      alt = (units[j][2] === null) ? [] : units[j][2];\n      if (units[j][1] === base_from_unit || alt.indexOf(base_from_unit) >= 0) {\n        from = units[j];\n      }\n    }\n  }\n\n  // Lookup to prefix\n  if (to === null) {\n    var to_binary_prefix = binary_prefixes[to_unit.substring(0, 2)];\n    var to_unit_prefix = unit_prefixes[to_unit.substring(0, 1)];\n\n    // Handle dekao unit prefix (only unit prefix with two characters)\n    if (to_unit.substring(0, 2) === 'da') {\n      to_unit_prefix = [\"dekao\", 1e+01, \"da\"];\n    }\n\n    // Handle binary prefixes first (so that 'Yi' is processed before 'Y')\n    if (to_binary_prefix) {\n      to_multiplier = to_binary_prefix[2];\n      base_to_unit = to_unit.substring(2);\n    } else if (to_unit_prefix) {\n      to_multiplier = to_unit_prefix[1];\n      base_to_unit = to_unit.substring(to_unit_prefix[2].length);\n    }\n\n    // Lookup to unit\n    for (var k = 0; k < units.length; k++) {\n      alt = (units[k][2] === null) ? [] : units[k][2];\n      if (units[k][1] === base_to_unit || alt.indexOf(base_to_unit) >= 0) {\n        to = units[k];\n      }\n    }\n  }\n\n  // Return error if a unit does not exist\n  if (from === null || to === null) {\n    return error.na;\n  }\n\n  // Return error if units represent different quantities\n  if (from[3] !== to[3]) {\n    return error.na;\n  }\n\n  // Return converted number\n  return number * from[6] * from_multiplier / (to[6] * to_multiplier);\n};\n\nexports.DEC2BIN = function(number, places) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  // Return error if number is not decimal, is lower than -512, or is greater than 511\n  if (!/^-?[0-9]{1,3}$/.test(number) || number < -512 || number > 511) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character binary number if number is negative\n  if (number < 0) {\n    return '1' + text.REPT('0', 9 - (512 + number).toString(2).length) + (512 + number).toString(2);\n  }\n\n  // Convert decimal number to binary\n  var result = parseInt(number, 10).toString(2);\n\n  // Return binary number using the minimum number of characters necessary if places is undefined\n  if (typeof places === 'undefined') {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.DEC2HEX = function(number, places) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887\n  if (!/^-?[0-9]{1,12}$/.test(number) || number < -549755813888 || number > 549755813887) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character hexadecimal number if number is negative\n  if (number < 0) {\n    return (1099511627776 + number).toString(16);\n  }\n\n  // Convert decimal number to hexadecimal\n  var result = parseInt(number, 10).toString(16);\n\n  // Return hexadecimal number using the minimum number of characters necessary if places is undefined\n  if (typeof places === 'undefined') {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.DEC2OCT = function(number, places) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  // Return error if number is not decimal, is lower than -549755813888, or is greater than 549755813887\n  if (!/^-?[0-9]{1,9}$/.test(number) || number < -536870912 || number > 536870911) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character octal number if number is negative\n  if (number < 0) {\n    return (1073741824 + number).toString(8);\n  }\n\n  // Convert decimal number to octal\n  var result = parseInt(number, 10).toString(8);\n\n  // Return octal number using the minimum number of characters necessary if places is undefined\n  if (typeof places === 'undefined') {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.DELTA = function(number1, number2) {\n  // Set number2 to zero if undefined\n  number2 = (number2 === undefined) ? 0 : number2;\n  number1 = utils.parseNumber(number1);\n  number2 = utils.parseNumber(number2);\n  if (utils.anyIsError(number1, number2)) {\n    return error.value;\n  }\n\n  // Return delta\n  return (number1 === number2) ? 1 : 0;\n};\n\n// TODO: why is upper_bound not used ? The excel documentation has no examples with upper_bound\nexports.ERF = function(lower_bound, upper_bound) {\n  // Set number2 to zero if undefined\n  upper_bound = (upper_bound === undefined) ? 0 : upper_bound;\n\n  lower_bound = utils.parseNumber(lower_bound);\n  upper_bound = utils.parseNumber(upper_bound);\n  if (utils.anyIsError(lower_bound, upper_bound)) {\n    return error.value;\n  }\n\n  return jStat.erf(lower_bound);\n};\n\n// TODO\nexports.ERF.PRECISE = function() {\n  throw new Error('ERF.PRECISE is not implemented');\n};\n\nexports.ERFC = function(x) {\n  // Return error if x is not a number\n  if (isNaN(x)) {\n    return error.value;\n  }\n\n  return jStat.erfc(x);\n};\n\n// TODO\nexports.ERFC.PRECISE = function() {\n  throw new Error('ERFC.PRECISE is not implemented');\n};\n\nexports.GESTEP = function(number, step) {\n  step = step || 0;\n  number = utils.parseNumber(number);\n  if (utils.anyIsError(step, number)) {\n    return number;\n  }\n\n  // Return delta\n  return (number >= step) ? 1 : 0;\n};\n\nexports.HEX2BIN = function(number, places) {\n  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)\n  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Check if number is negative\n  var negative = (number.length === 10 && number.substring(0, 1).toLowerCase() === 'f') ? true : false;\n\n  // Convert hexadecimal number to decimal\n  var decimal = (negative) ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);\n\n  // Return error if number is lower than -512 or greater than 511\n  if (decimal < -512 || decimal > 511) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character binary number if number is negative\n  if (negative) {\n    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);\n  }\n\n  // Convert decimal number to binary\n  var result = decimal.toString(2);\n\n  // Return binary number using the minimum number of characters necessary if places is undefined\n  if (places === undefined) {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.HEX2DEC = function(number) {\n  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)\n  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Convert hexadecimal number to decimal\n  var decimal = parseInt(number, 16);\n\n  // Return decimal number\n  return (decimal >= 549755813888) ? decimal - 1099511627776 : decimal;\n};\n\nexports.HEX2OCT = function(number, places) {\n  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)\n  if (!/^[0-9A-Fa-f]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Convert hexadecimal number to decimal\n  var decimal = parseInt(number, 16);\n\n  // Return error if number is positive and greater than 0x1fffffff (536870911)\n  if (decimal > 536870911 && decimal < 1098974756864) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character octal number if number is negative\n  if (decimal >= 1098974756864) {\n    return (decimal - 1098437885952).toString(8);\n  }\n\n  // Convert decimal number to octal\n  var result = decimal.toString(8);\n\n  // Return octal number using the minimum number of characters necessary if places is undefined\n  if (places === undefined) {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.IMABS = function(inumber) {\n  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  // Return error if either coefficient is not a number\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return absolute value of complex number\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n};\n\nexports.IMAGINARY = function(inumber) {\n  if (inumber === undefined || inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Return 0 if inumber is equal to 0\n  if (inumber === 0 || inumber === '0') {\n    return 0;\n  }\n\n  // Handle special cases\n  if (['i', 'j'].indexOf(inumber) >= 0) {\n    return 1;\n  }\n\n  // Normalize imaginary coefficient\n  inumber = inumber.replace('+i', '+1i').replace('-i', '-1i').replace('+j', '+1j').replace('-j', '-1j');\n\n  // Lookup sign\n  var plus = inumber.indexOf('+');\n  var minus = inumber.indexOf('-');\n  if (plus === 0) {\n    plus = inumber.indexOf('+', 1);\n  }\n\n  if (minus === 0) {\n    minus = inumber.indexOf('-', 1);\n  }\n\n  // Lookup imaginary unit\n  var last = inumber.substring(inumber.length - 1, inumber.length);\n  var unit = (last === 'i' || last === 'j');\n\n  if (plus >= 0 || minus >= 0) {\n    // Return error if imaginary unit is neither i nor j\n    if (!unit) {\n      return error.num;\n    }\n\n    // Return imaginary coefficient of complex number\n    if (plus >= 0) {\n      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?\n        error.num :\n        Number(inumber.substring(plus + 1, inumber.length - 1));\n    } else {\n      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?\n        error.num :\n        -Number(inumber.substring(minus + 1, inumber.length - 1));\n    }\n  } else {\n    if (unit) {\n      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : inumber.substring(0, inumber.length - 1);\n    } else {\n      return (isNaN(inumber)) ? error.num : 0;\n    }\n  }\n};\n\nexports.IMARGUMENT = function(inumber) {\n  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  // Return error if either coefficient is not a number\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return error if inumber is equal to zero\n  if (x === 0 && y === 0) {\n    return error.div0;\n  }\n\n  // Return PI/2 if x is equal to zero and y is positive\n  if (x === 0 && y > 0) {\n    return Math.PI / 2;\n  }\n\n  // Return -PI/2 if x is equal to zero and y is negative\n  if (x === 0 && y < 0) {\n    return -Math.PI / 2;\n  }\n\n  // Return zero if x is negative and y is equal to zero\n  if (y === 0 && x > 0) {\n    return 0;\n  }\n\n  // Return zero if x is negative and y is equal to zero\n  if (y === 0 && x < 0) {\n    return -Math.PI;\n  }\n\n  // Return argument of complex number\n  if (x > 0) {\n    return Math.atan(y / x);\n  } else if (x < 0 && y >= 0) {\n    return Math.atan(y / x) + Math.PI;\n  } else {\n    return Math.atan(y / x) - Math.PI;\n  }\n};\n\nexports.IMCONJUGATE = function(inumber) {\n  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return conjugate of complex number\n  return (y !== 0) ? exports.COMPLEX(x, -y, unit) : inumber;\n};\n\nexports.IMCOS = function(inumber) {\n  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return cosine of complex number\n  return exports.COMPLEX(Math.cos(x) * (Math.exp(y) + Math.exp(-y)) / 2, -Math.sin(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);\n};\n\nexports.IMCOSH = function(inumber) {\n  // Lookup real and imaginary coefficients using exports.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return hyperbolic cosine of complex number\n  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) + Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) - Math.exp(-x)) / 2, unit);\n};\n\nexports.IMCOT = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return cotangent of complex number\n  return exports.IMDIV(exports.IMCOS(inumber), exports.IMSIN(inumber));\n};\n\nexports.IMDIV = function(inumber1, inumber2) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var a = exports.IMREAL(inumber1);\n  var b = exports.IMAGINARY(inumber1);\n  var c = exports.IMREAL(inumber2);\n  var d = exports.IMAGINARY(inumber2);\n\n  if (utils.anyIsError(a, b, c, d)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit1 = inumber1.substring(inumber1.length - 1);\n  var unit2 = inumber2.substring(inumber2.length - 1);\n  var unit = 'i';\n  if (unit1 === 'j') {\n    unit = 'j';\n  } else if (unit2 === 'j') {\n    unit = 'j';\n  }\n\n  // Return error if inumber2 is null\n  if (c === 0 && d === 0) {\n    return error.num;\n  }\n\n  // Return exponential of complex number\n  var den = c * c + d * d;\n  return exports.COMPLEX((a * c + b * d) / den, (b * c - a * d) / den, unit);\n};\n\nexports.IMEXP = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return exponential of complex number\n  var e = Math.exp(x);\n  return exports.COMPLEX(e * Math.cos(y), e * Math.sin(y), unit);\n};\n\nexports.IMLN = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return exponential of complex number\n  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)), Math.atan(y / x), unit);\n};\n\nexports.IMLOG10 = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return exponential of complex number\n  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(10), Math.atan(y / x) / Math.log(10), unit);\n};\n\nexports.IMLOG2 = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return exponential of complex number\n  return exports.COMPLEX(Math.log(Math.sqrt(x * x + y * y)) / Math.log(2), Math.atan(y / x) / Math.log(2), unit);\n};\n\nexports.IMPOWER = function(inumber, number) {\n  number = utils.parseNumber(number);\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n  if (utils.anyIsError(number, x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Calculate power of modulus\n  var p = Math.pow(exports.IMABS(inumber), number);\n\n  // Calculate argument\n  var t = exports.IMARGUMENT(inumber);\n\n  // Return exponential of complex number\n  return exports.COMPLEX(p * Math.cos(number * t), p * Math.sin(number * t), unit);\n};\n\nexports.IMPRODUCT = function() {\n  // Initialize result\n  var result = arguments[0];\n\n  if (!arguments.length) {\n    return error.value;\n  }\n\n  // Loop on all numbers\n  for (var i = 1; i < arguments.length; i++) {\n    // Lookup coefficients of two complex numbers\n    var a = exports.IMREAL(result);\n    var b = exports.IMAGINARY(result);\n    var c = exports.IMREAL(arguments[i]);\n    var d = exports.IMAGINARY(arguments[i]);\n\n    if (utils.anyIsError(a, b, c, d)) {\n      return error.value;\n    }\n\n    // Complute product of two complex numbers\n    result = exports.COMPLEX(a * c - b * d, a * d + b * c);\n  }\n\n  // Return product of complex numbers\n  return result;\n};\n\nexports.IMREAL = function(inumber) {\n  if (inumber === undefined || inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Return 0 if inumber is equal to 0\n  if (inumber === 0 || inumber === '0') {\n    return 0;\n  }\n\n  // Handle special cases\n  if (['i', '+i', '1i', '+1i', '-i', '-1i', 'j', '+j', '1j', '+1j', '-j', '-1j'].indexOf(inumber) >= 0) {\n    return 0;\n  }\n\n  // Lookup sign\n  var plus = inumber.indexOf('+');\n  var minus = inumber.indexOf('-');\n  if (plus === 0) {\n    plus = inumber.indexOf('+', 1);\n  }\n  if (minus === 0) {\n    minus = inumber.indexOf('-', 1);\n  }\n\n  // Lookup imaginary unit\n  var last = inumber.substring(inumber.length - 1, inumber.length);\n  var unit = (last === 'i' || last === 'j');\n\n  if (plus >= 0 || minus >= 0) {\n    // Return error if imaginary unit is neither i nor j\n    if (!unit) {\n      return error.num;\n    }\n\n    // Return real coefficient of complex number\n    if (plus >= 0) {\n      return (isNaN(inumber.substring(0, plus)) || isNaN(inumber.substring(plus + 1, inumber.length - 1))) ?\n        error.num :\n        Number(inumber.substring(0, plus));\n    } else {\n      return (isNaN(inumber.substring(0, minus)) || isNaN(inumber.substring(minus + 1, inumber.length - 1))) ?\n        error.num :\n        Number(inumber.substring(0, minus));\n    }\n  } else {\n    if (unit) {\n      return (isNaN(inumber.substring(0, inumber.length - 1))) ? error.num : 0;\n    } else {\n      return (isNaN(inumber)) ? error.num : inumber;\n    }\n  }\n};\n\nexports.IMSEC = function(inumber) {\n  // Return error if inumber is a logical value\n  if (inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return secant of complex number\n  return exports.IMDIV('1', exports.IMCOS(inumber));\n};\n\nexports.IMSECH = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return hyperbolic secant of complex number\n  return exports.IMDIV('1', exports.IMCOSH(inumber));\n};\n\nexports.IMSIN = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return sine of complex number\n  return exports.COMPLEX(Math.sin(x) * (Math.exp(y) + Math.exp(-y)) / 2, Math.cos(x) * (Math.exp(y) - Math.exp(-y)) / 2, unit);\n};\n\nexports.IMSINH = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Return hyperbolic sine of complex number\n  return exports.COMPLEX(Math.cos(y) * (Math.exp(x) - Math.exp(-x)) / 2, Math.sin(y) * (Math.exp(x) + Math.exp(-x)) / 2, unit);\n};\n\nexports.IMSQRT = function(inumber) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit = inumber.substring(inumber.length - 1);\n  unit = (unit === 'i' || unit === 'j') ? unit : 'i';\n\n  // Calculate power of modulus\n  var s = Math.sqrt(exports.IMABS(inumber));\n\n  // Calculate argument\n  var t = exports.IMARGUMENT(inumber);\n\n  // Return exponential of complex number\n  return exports.COMPLEX(s * Math.cos(t / 2), s * Math.sin(t / 2), unit);\n};\n\nexports.IMCSC = function (inumber) {\n  // Return error if inumber is a logical value\n  if (inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  // Return error if either coefficient is not a number\n  if (utils.anyIsError(x, y)) {\n    return error.num;\n  }\n\n  // Return cosecant of complex number\n  return exports.IMDIV('1', exports.IMSIN(inumber));\n};\n\nexports.IMCSCH = function (inumber) {\n  // Return error if inumber is a logical value\n  if (inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  // Return error if either coefficient is not a number\n  if (utils.anyIsError(x, y)) {\n    return error.num;\n  }\n\n  // Return hyperbolic cosecant of complex number\n  return exports.IMDIV('1', exports.IMSINH(inumber));\n};\n\nexports.IMSUB = function(inumber1, inumber2) {\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var a = this.IMREAL(inumber1);\n  var b = this.IMAGINARY(inumber1);\n  var c = this.IMREAL(inumber2);\n  var d = this.IMAGINARY(inumber2);\n\n  if (utils.anyIsError(a, b, c, d)) {\n    return error.value;\n  }\n\n  // Lookup imaginary unit\n  var unit1 = inumber1.substring(inumber1.length - 1);\n  var unit2 = inumber2.substring(inumber2.length - 1);\n  var unit = 'i';\n  if (unit1 === 'j') {\n    unit = 'j';\n  } else if (unit2 === 'j') {\n    unit = 'j';\n  }\n\n  // Return _ of two complex numbers\n  return this.COMPLEX(a - c, b - d, unit);\n};\n\nexports.IMSUM = function() {\n  if (!arguments.length) {\n    return error.value;\n  }\n  var args = utils.flatten(arguments);\n\n  // Initialize result\n  var result = args[0];\n\n  // Loop on all numbers\n  for (var i = 1; i < args.length; i++) {\n    // Lookup coefficients of two complex numbers\n    var a = this.IMREAL(result);\n    var b = this.IMAGINARY(result);\n    var c = this.IMREAL(args[i]);\n    var d = this.IMAGINARY(args[i]);\n\n    if (utils.anyIsError(a, b, c, d)) {\n      return error.value;\n    }\n\n    // Complute product of two complex numbers\n    result = this.COMPLEX(a + c, b + d);\n  }\n\n  // Return sum of complex numbers\n  return result;\n};\n\nexports.IMTAN = function(inumber) {\n  // Return error if inumber is a logical value\n  if (inumber === true || inumber === false) {\n    return error.value;\n  }\n\n  // Lookup real and imaginary coefficients using Formula.js [http://formulajs.org]\n  var x = exports.IMREAL(inumber);\n  var y = exports.IMAGINARY(inumber);\n\n  if (utils.anyIsError(x, y)) {\n    return error.value;\n  }\n\n  // Return tangent of complex number\n  return this.IMDIV(this.IMSIN(inumber), this.IMCOS(inumber));\n};\n\nexports.OCT2BIN = function(number, places) {\n  // Return error if number is not hexadecimal or contains more than ten characters (10 digits)\n  if (!/^[0-7]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Check if number is negative\n  var negative = (number.length === 10 && number.substring(0, 1) === '7') ? true : false;\n\n  // Convert octal number to decimal\n  var decimal = (negative) ? parseInt(number, 8) - 1073741824 : parseInt(number, 8);\n\n  // Return error if number is lower than -512 or greater than 511\n  if (decimal < -512 || decimal > 511) {\n    return error.num;\n  }\n\n  // Ignore places and return a 10-character binary number if number is negative\n  if (negative) {\n    return '1' + text.REPT('0', 9 - (512 + decimal).toString(2).length) + (512 + decimal).toString(2);\n  }\n\n  // Convert decimal number to binary\n  var result = decimal.toString(2);\n\n  // Return binary number using the minimum number of characters necessary if places is undefined\n  if (typeof places === 'undefined') {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n\nexports.OCT2DEC = function(number) {\n  // Return error if number is not octal or contains more than ten characters (10 digits)\n  if (!/^[0-7]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Convert octal number to decimal\n  var decimal = parseInt(number, 8);\n\n  // Return decimal number\n  return (decimal >= 536870912) ? decimal - 1073741824 : decimal;\n};\n\nexports.OCT2HEX = function(number, places) {\n  // Return error if number is not octal or contains more than ten characters (10 digits)\n  if (!/^[0-7]{1,10}$/.test(number)) {\n    return error.num;\n  }\n\n  // Convert octal number to decimal\n  var decimal = parseInt(number, 8);\n\n  // Ignore places and return a 10-character octal number if number is negative\n  if (decimal >= 536870912) {\n    return 'ff' + (decimal + 3221225472).toString(16);\n  }\n\n  // Convert decimal number to hexadecimal\n  var result = decimal.toString(16);\n\n  // Return hexadecimal number using the minimum number of characters necessary if places is undefined\n  if (places === undefined) {\n    return result;\n  } else {\n    // Return error if places is nonnumeric\n    if (isNaN(places)) {\n      return error.value;\n    }\n\n    // Return error if places is negative\n    if (places < 0) {\n      return error.num;\n    }\n\n    // Truncate places in case it is not an integer\n    places = Math.floor(places);\n\n    // Pad return value with leading 0s (zeros) if necessary (using Underscore.string)\n    return (places >= result.length) ? text.REPT('0', places - result.length) + result : error.num;\n  }\n};\n", "var error = require('./utils/error');\nvar utils = require('./utils/common');\n\nvar d1900 = new Date(Date.UTC(1900, 0, 1));\nvar WEEK_STARTS = [\n  undefined,\n  0,\n  1,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  0\n];\nvar WEEK_TYPES = [\n  [],\n  [1, 2, 3, 4, 5, 6, 7],\n  [7, 1, 2, 3, 4, 5, 6],\n  [6, 0, 1, 2, 3, 4, 5],\n  [],\n  [],\n  [],\n  [],\n  [],\n  [],\n  [],\n  [7, 1, 2, 3, 4, 5, 6],\n  [6, 7, 1, 2, 3, 4, 5],\n  [5, 6, 7, 1, 2, 3, 4],\n  [4, 5, 6, 7, 1, 2, 3],\n  [3, 4, 5, 6, 7, 1, 2],\n  [2, 3, 4, 5, 6, 7, 1],\n  [1, 2, 3, 4, 5, 6, 7]\n];\nvar WEEKEND_TYPES = [\n  [],\n  [6, 0],\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 4],\n  [4, 5],\n  [5, 6],\n  undefined,\n  undefined,\n  undefined, [0, 0],\n  [1, 1],\n  [2, 2],\n  [3, 3],\n  [4, 4],\n  [5, 5],\n  [6, 6]\n];\n\nexports.DATE = function(year, month, day) {\n  var result;\n\n  year = utils.parseNumber(year);\n  month = utils.parseNumber(month);\n  day = utils.parseNumber(day);\n\n  if (utils.anyIsError(year, month, day)) {\n    result = error.value;\n\n  } else if (year < 0 || month < 0 || day < 0) {\n    result = error.num;\n\n  } else {\n    result = new Date(year, month - 1, day);\n  }\n\n  return result;\n};\n\nexports.DATEVALUE = function(date_text) {\n  var modifier = 2;\n  var date;\n\n  if (typeof date_text !== 'string') {\n    return error.value;\n  }\n\n  date = Date.parse(date_text);\n\n  if (isNaN(date)) {\n    return error.value;\n  }\n\n  if (date <= -2203891200000) {\n    modifier = 1;\n  }\n\n  return Math.ceil((date - d1900) / 86400000) + modifier;\n};\n\nexports.DAY = function(serial_number) {\n  var date = utils.parseDate(serial_number);\n  if (date instanceof Error) {\n    return date;\n  }\n\n  return date.getDate();\n};\n\nexports.DAYS = function(end_date, start_date) {\n  end_date = utils.parseDate(end_date);\n  start_date = utils.parseDate(start_date);\n\n  if (end_date instanceof Error) {\n    return end_date;\n  }\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n\n  return serial(end_date) - serial(start_date);\n};\n\nexports.DAYS360 = function(start_date, end_date, method) {\n  method = utils.parseBool(method);\n  start_date = utils.parseDate(start_date);\n  end_date = utils.parseDate(end_date);\n\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  if (end_date instanceof Error) {\n    return end_date;\n  }\n  if (method instanceof Error) {\n    return method;\n  }\n  var sm = start_date.getMonth();\n  var em = end_date.getMonth();\n  var sd, ed;\n\n  if (method) {\n    sd = start_date.getDate() === 31 ? 30 : start_date.getDate();\n    ed = end_date.getDate() === 31 ? 30 : end_date.getDate();\n  } else {\n    var smd = new Date(start_date.getFullYear(), sm + 1, 0).getDate();\n    var emd = new Date(end_date.getFullYear(), em + 1, 0).getDate();\n    sd = start_date.getDate() === smd ? 30 : start_date.getDate();\n    if (end_date.getDate() === emd) {\n      if (sd < 30) {\n        em++;\n        ed = 1;\n      } else {\n        ed = 30;\n      }\n    } else {\n      ed = end_date.getDate();\n    }\n  }\n\n  return 360 * (end_date.getFullYear() - start_date.getFullYear()) +\n    30 * (em - sm) + (ed - sd);\n};\n\nexports.EDATE = function(start_date, months) {\n  start_date = utils.parseDate(start_date);\n\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  if (isNaN(months)) {\n    return error.value;\n  }\n  months = parseInt(months, 10);\n  start_date.setMonth(start_date.getMonth() + months);\n\n  return serial(start_date);\n};\n\nexports.EOMONTH = function(start_date, months) {\n  start_date = utils.parseDate(start_date);\n\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  if (isNaN(months)) {\n    return error.value;\n  }\n  months = parseInt(months, 10);\n\n  return serial(new Date(start_date.getFullYear(), start_date.getMonth() + months + 1, 0));\n};\n\nexports.HOUR = function(serial_number) {\n  serial_number = utils.parseDate(serial_number);\n\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n\n  return serial_number.getHours();\n};\n\nexports.INTERVAL = function (second) {\n  if (typeof second !== 'number' && typeof second !== 'string') {\n    return error.value;\n  } else {\n    second = parseInt(second, 10);\n  }\n\n  var year  = Math.floor(second/946080000);\n  second    = second%946080000;\n  var month = Math.floor(second/2592000);\n  second    = second%2592000;\n  var day   = Math.floor(second/86400);\n  second    = second%86400;\n\n  var hour  = Math.floor(second/3600);\n  second    = second%3600;\n  var min   = Math.floor(second/60);\n  second    = second%60;\n  var sec   = second;\n\n  year  = (year  > 0) ? year  + 'Y' : '';\n  month = (month > 0) ? month + 'M' : '';\n  day   = (day   > 0) ? day   + 'D' : '';\n  hour  = (hour  > 0) ? hour  + 'H' : '';\n  min   = (min   > 0) ? min   + 'M' : '';\n  sec   = (sec   > 0) ? sec   + 'S' : '';\n\n  return 'P' + year + month + day + 'T' + hour + min + sec;\n};\n\nexports.ISOWEEKNUM = function(date) {\n  date = utils.parseDate(date);\n\n  if (date instanceof Error) {\n    return date;\n  }\n\n  date.setHours(0, 0, 0);\n  date.setDate(date.getDate() + 4 - (date.getDay() || 7));\n  var yearStart = new Date(date.getFullYear(), 0, 1);\n\n  return Math.ceil((((date - yearStart) / 86400000) + 1) / 7);\n};\n\nexports.MINUTE = function(serial_number) {\n  serial_number = utils.parseDate(serial_number);\n\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n\n  return serial_number.getMinutes();\n};\n\nexports.MONTH = function(serial_number) {\n  serial_number = utils.parseDate(serial_number);\n\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n\n  return serial_number.getMonth() + 1;\n};\n\nexports.NETWORKDAYS = function(start_date, end_date, holidays) {\n  return this.NETWORKDAYS.INTL(start_date, end_date, 1, holidays);\n};\n\nexports.NETWORKDAYS.INTL = function(start_date, end_date, weekend, holidays) {\n  start_date = utils.parseDate(start_date);\n\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  end_date = utils.parseDate(end_date);\n\n  if (end_date instanceof Error) {\n    return end_date;\n  }\n  if (weekend === undefined) {\n    weekend = WEEKEND_TYPES[1];\n  } else {\n    weekend = WEEKEND_TYPES[weekend];\n  }\n  if (!(weekend instanceof Array)) {\n    return error.value;\n  }\n  if (holidays === undefined) {\n    holidays = [];\n  } else if (!(holidays instanceof Array)) {\n    holidays = [holidays];\n  }\n\n  for (var i = 0; i < holidays.length; i++) {\n    var h = utils.parseDate(holidays[i]);\n    if (h instanceof Error) {\n      return h;\n    }\n    holidays[i] = h;\n  }\n  var days = (end_date - start_date) / (1000 * 60 * 60 * 24) + 1;\n  var total = days;\n  var day = start_date;\n  for (i = 0; i < days; i++) {\n    var d = (new Date().getTimezoneOffset() > 0) ? day.getUTCDay() : day.getDay();\n    var dec = false;\n    if (d === weekend[0] || d === weekend[1]) {\n      dec = true;\n    }\n    for (var j = 0; j < holidays.length; j++) {\n      var holiday = holidays[j];\n      if (holiday.getDate() === day.getDate() &&\n        holiday.getMonth() === day.getMonth() &&\n        holiday.getFullYear() === day.getFullYear()) {\n        dec = true;\n        break;\n      }\n    }\n    if (dec) {\n      total--;\n    }\n    day.setDate(day.getDate() + 1);\n  }\n\n  return total;\n};\n\nexports.NOW = function() {\n  return new Date();\n};\n\nexports.SECOND = function(serial_number) {\n  serial_number = utils.parseDate(serial_number);\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n\n  return serial_number.getSeconds();\n};\n\nexports.TIME = function(hour, minute, second) {\n  hour = utils.parseNumber(hour);\n  minute = utils.parseNumber(minute);\n  second = utils.parseNumber(second);\n  if (utils.anyIsError(hour, minute, second)) {\n    return error.value;\n  }\n  if (hour < 0 || minute < 0 || second < 0) {\n    return error.num;\n  }\n\n  return (3600 * hour + 60 * minute + second) / 86400;\n};\n\nexports.TIMEVALUE = function(time_text) {\n  time_text = utils.parseDate(time_text);\n\n  if (time_text instanceof Error) {\n    return time_text;\n  }\n\n  return (3600 * time_text.getHours() + 60 * time_text.getMinutes() + time_text.getSeconds()) / 86400;\n};\n\nexports.TODAY = function() {\n  return new Date();\n};\n\nexports.WEEKDAY = function(serial_number, return_type) {\n  serial_number = utils.parseDate(serial_number);\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n  if (return_type === undefined) {\n    return_type = 1;\n  }\n  var day = serial_number.getDay();\n\n  return WEEK_TYPES[return_type][day];\n};\n\nexports.WEEKNUM = function(serial_number, return_type) {\n  serial_number = utils.parseDate(serial_number);\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n  if (return_type === undefined) {\n    return_type = 1;\n  }\n  if (return_type === 21) {\n    return this.ISOWEEKNUM(serial_number);\n  }\n  var week_start = WEEK_STARTS[return_type];\n  var jan = new Date(serial_number.getFullYear(), 0, 1);\n  var inc = jan.getDay() < week_start ? 1 : 0;\n  jan -= Math.abs(jan.getDay() - week_start) * 24 * 60 * 60 * 1000;\n\n  return Math.floor(((serial_number - jan) / (1000 * 60 * 60 * 24)) / 7 + 1) + inc;\n};\n\nexports.WORKDAY = function(start_date, days, holidays) {\n  return this.WORKDAY.INTL(start_date, days, 1, holidays);\n};\n\nexports.WORKDAY.INTL = function(start_date, days, weekend, holidays) {\n  start_date = utils.parseDate(start_date);\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  days = utils.parseNumber(days);\n  if (days instanceof Error) {\n    return days;\n  }\n  if (days < 0) {\n    return error.num;\n  }\n  if (weekend === undefined) {\n    weekend = WEEKEND_TYPES[1];\n  } else {\n    weekend = WEEKEND_TYPES[weekend];\n  }\n  if (!(weekend instanceof Array)) {\n    return error.value;\n  }\n  if (holidays === undefined) {\n    holidays = [];\n  } else if (!(holidays instanceof Array)) {\n    holidays = [holidays];\n  }\n  for (var i = 0; i < holidays.length; i++) {\n    var h = utils.parseDate(holidays[i]);\n    if (h instanceof Error) {\n      return h;\n    }\n    holidays[i] = h;\n  }\n  var d = 0;\n  while (d < days) {\n    start_date.setDate(start_date.getDate() + 1);\n    var day = start_date.getDay();\n    if (day === weekend[0] || day === weekend[1]) {\n      continue;\n    }\n    for (var j = 0; j < holidays.length; j++) {\n      var holiday = holidays[j];\n      if (holiday.getDate() === start_date.getDate() &&\n        holiday.getMonth() === start_date.getMonth() &&\n        holiday.getFullYear() === start_date.getFullYear()) {\n        d--;\n        break;\n      }\n    }\n    d++;\n  }\n\n  return start_date;\n};\n\nexports.YEAR = function(serial_number) {\n  serial_number = utils.parseDate(serial_number);\n\n  if (serial_number instanceof Error) {\n    return serial_number;\n  }\n\n  return serial_number.getFullYear();\n};\n\nfunction isLeapYear(year) {\n  return new Date(year, 1, 29).getMonth() === 1;\n}\n\n// TODO : Use DAYS ?\nfunction daysBetween(start_date, end_date) {\n  return Math.ceil((end_date - start_date) / 1000 / 60 / 60 / 24);\n}\n\nexports.YEARFRAC = function(start_date, end_date, basis) {\n  start_date = utils.parseDate(start_date);\n  if (start_date instanceof Error) {\n    return start_date;\n  }\n  end_date = utils.parseDate(end_date);\n  if (end_date instanceof Error) {\n    return end_date;\n  }\n\n  basis = basis || 0;\n  var sd = start_date.getDate();\n  var sm = start_date.getMonth() + 1;\n  var sy = start_date.getFullYear();\n  var ed = end_date.getDate();\n  var em = end_date.getMonth() + 1;\n  var ey = end_date.getFullYear();\n\n  switch (basis) {\n    case 0:\n      // US (NASD) 30/360\n      if (sd === 31 && ed === 31) {\n        sd = 30;\n        ed = 30;\n      } else if (sd === 31) {\n        sd = 30;\n      } else if (sd === 30 && ed === 31) {\n        ed = 30;\n      }\n      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;\n    case 1:\n      // Actual/actual\n      var feb29Between = function(date1, date2) {\n        var year1 = date1.getFullYear();\n        var mar1year1 = new Date(year1, 2, 1);\n        if (isLeapYear(year1) && date1 < mar1year1 && date2 >= mar1year1) {\n          return true;\n        }\n        var year2 = date2.getFullYear();\n        var mar1year2 = new Date(year2, 2, 1);\n        return (isLeapYear(year2) && date2 >= mar1year2 && date1 < mar1year2);\n      };\n      var ylength = 365;\n      if (sy === ey || ((sy + 1) === ey) && ((sm > em) || ((sm === em) && (sd >= ed)))) {\n        if ((sy === ey && isLeapYear(sy)) ||\n          feb29Between(start_date, end_date) ||\n          (em === 1 && ed === 29)) {\n          ylength = 366;\n        }\n        return daysBetween(start_date, end_date) / ylength;\n      }\n      var years = (ey - sy) + 1;\n      var days = (new Date(ey + 1, 0, 1) - new Date(sy, 0, 1)) / 1000 / 60 / 60 / 24;\n      var average = days / years;\n      return daysBetween(start_date, end_date) / average;\n    case 2:\n      // Actual/360\n      return daysBetween(start_date, end_date) / 360;\n    case 3:\n      // Actual/365\n      return daysBetween(start_date, end_date) / 365;\n    case 4:\n      // European 30/360\n      return ((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;\n  }\n};\n\nfunction serial(date) {\n  var addOn = (date > -2203891200000) ? 2 : 1;\n\n  return Math.ceil((date - d1900) / 86400000) + addOn;\n}\n", "var mathTrig = require('./math-trig');\nvar statistical = require('./statistical');\nvar engineering = require('./engineering');\nvar dateTime = require('./date-time');\n\nfunction set(fn, root) {\n  if (root) {\n    for (var i in root) {\n      fn[i] = root[i];\n    }\n  }\n\n  return fn;\n}\n\nexports.BETADIST = statistical.BETA.DIST;\nexports.BETAINV = statistical.BETA.INV;\nexports.BINOMDIST = statistical.BINOM.DIST;\nexports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);\nexports.CEILINGMATH = mathTrig.CEILING.MATH;\nexports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;\nexports.CHIDIST = statistical.CHISQ.DIST;\nexports.CHIDISTRT = statistical.CHISQ.DIST.RT;\nexports.CHIINV = statistical.CHISQ.INV;\nexports.CHIINVRT = statistical.CHISQ.INV.RT;\nexports.CHITEST = statistical.CHISQ.TEST;\nexports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);\nexports.COVAR = statistical.COVARIANCE.P;\nexports.COVARIANCEP = statistical.COVARIANCE.P;\nexports.COVARIANCES = statistical.COVARIANCE.S;\nexports.CRITBINOM = statistical.BINOM.INV;\nexports.EXPONDIST = statistical.EXPON.DIST;\nexports.ERFCPRECISE = engineering.ERFC.PRECISE;\nexports.ERFPRECISE = engineering.ERF.PRECISE;\nexports.FDIST = statistical.F.DIST;\nexports.FDISTRT = statistical.F.DIST.RT;\nexports.FINVRT = statistical.F.INV.RT;\nexports.FINV = statistical.F.INV;\nexports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);\nexports.FLOORMATH = mathTrig.FLOOR.MATH;\nexports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;\nexports.FTEST = statistical.F.TEST;\nexports.GAMMADIST = statistical.GAMMA.DIST;\nexports.GAMMAINV = statistical.GAMMA.INV;\nexports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;\nexports.HYPGEOMDIST = statistical.HYPGEOM.DIST;\nexports.LOGINV = statistical.LOGNORM.INV;\nexports.LOGNORMINV = statistical.LOGNORM.INV;\nexports.LOGNORMDIST = statistical.LOGNORM.DIST;\nexports.MODE = set(statistical.MODE.SNGL, statistical.MODE);\nexports.MODEMULT = statistical.MODE.MULT;\nexports.MODESNGL = statistical.MODE.SNGL;\nexports.NEGBINOMDIST = statistical.NEGBINOM.DIST;\nexports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;\nexports.NORMDIST = statistical.NORM.DIST;\nexports.NORMINV = statistical.NORM.INV;\nexports.NORMSDIST = statistical.NORM.S.DIST;\nexports.NORMSINV = statistical.NORM.S.INV;\nexports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);\nexports.PERCENTILEEXC = statistical.PERCENTILE.EXC;\nexports.PERCENTILEINC = statistical.PERCENTILE.INC;\nexports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);\nexports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;\nexports.PERCENTRANKINC = statistical.PERCENTRANK.INC;\nexports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);\nexports.POISSONDIST = statistical.POISSON.DIST;\nexports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);\nexports.QUARTILEEXC = statistical.QUARTILE.EXC;\nexports.QUARTILEINC = statistical.QUARTILE.INC;\nexports.RANK = set(statistical.RANK.EQ, statistical.RANK);\nexports.RANKAVG = statistical.RANK.AVG;\nexports.RANKEQ = statistical.RANK.EQ;\nexports.SKEWP = statistical.SKEW.P;\nexports.STDEV = set(statistical.STDEV.S, statistical.STDEV);\nexports.STDEVP = statistical.STDEV.P;\nexports.STDEVS = statistical.STDEV.S;\nexports.TDIST = statistical.T.DIST;\nexports.TDISTRT = statistical.T.DIST.RT;\nexports.TINV = statistical.T.INV;\nexports.TTEST = statistical.T.TEST;\nexports.VAR = set(statistical.VAR.S, statistical.VAR);\nexports.VARP = statistical.VAR.P;\nexports.VARS = statistical.VAR.S;\nexports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);\nexports.WEIBULLDIST = statistical.WEIBULL.DIST;\nexports.WORKDAYINTL = dateTime.WORKDAY.INTL;\nexports.ZTEST = statistical.Z.TEST;\n", "var error = require('./utils/error');\nvar stats = require('./statistical');\nvar maths = require('./math-trig');\nvar utils = require('./utils/common');\nvar evalExpression = require('./utils/criteria-eval');\n\nfunction compact(array) {\n  var result = [];\n\n  utils.arrayEach(array, function(value) {\n    if (value) {\n      result.push(value);\n    }\n  });\n\n  return result;\n}\n\nexports.FINDFIELD = function(database, title) {\n  var index = null;\n\n  utils.arrayEach(database, function(value, i) {\n    if (value[0] === title) {\n      index = i;\n      return false;\n    }\n  });\n\n  // Return error if the input field title is incorrect\n  if (index == null) {\n    return error.value;\n  }\n\n  return index;\n};\n\nfunction findResultIndex(database, criterias) {\n  var matches = {};\n  for (var i = 1; i < database[0].length; ++i) {\n    matches[i] = true;\n  }\n  var maxCriteriaLength = criterias[0].length;\n  for (i = 1; i < criterias.length; ++i) {\n    if (criterias[i].length > maxCriteriaLength) {\n      maxCriteriaLength = criterias[i].length;\n    }\n  }\n\n  for (var k = 1; k < database.length; ++k) {\n    for (var l = 1; l < database[k].length; ++l) {\n      var currentCriteriaResult = false;\n      var hasMatchingCriteria   = false;\n      for (var j = 0; j < criterias.length; ++j) {\n        var criteria = criterias[j];\n        if (criteria.length < maxCriteriaLength) {\n          continue;\n        }\n\n        var criteriaField = criteria[0];\n        if (database[k][0] !== criteriaField) {\n          continue;\n        }\n        hasMatchingCriteria = true;\n        for (var p = 1; p < criteria.length; ++p) {\n          if (!currentCriteriaResult) {\n            var isWildcard = criteria[p] === void 0 || criteria[p] === '*';\n\n            if (isWildcard) {\n              currentCriteriaResult = true;\n            } else {\n              var tokenizedCriteria = evalExpression.parse(criteria[p] + '');\n              var tokens = [evalExpression.createToken(database[k][l], evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n              currentCriteriaResult = evalExpression.compute(tokens);\n            }\n          }\n        }\n      }\n      if (hasMatchingCriteria) {\n        matches[l] = matches[l] && currentCriteriaResult;\n      }\n    }\n  }\n\n  var result = [];\n  for (var n = 0; n < database[0].length; ++n) {\n    if (matches[n]) {\n      result.push(n - 1);\n    }\n  }\n\n  return result;\n}\n\n// Database functions\nexports.DAVERAGE = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n  var sum = 0;\n\n  utils.arrayEach(resultIndexes, function(value) {\n    sum += targetFields[value];\n  });\n\n  return resultIndexes.length === 0 ? error.div0 : sum / resultIndexes.length;\n};\n\nexports.DCOUNT = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n\n  return stats.COUNT(targetValues);\n};\n\nexports.DCOUNTA = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n\n  return stats.COUNTA(targetValues);\n};\n\nexports.DGET = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  // Return error if no record meets the criteria\n  if (resultIndexes.length === 0) {\n    return error.value;\n  }\n  // Returns the #NUM! error value because more than one record meets the\n  // criteria\n  if (resultIndexes.length > 1) {\n    return error.num;\n  }\n\n  return targetFields[resultIndexes[0]];\n};\n\nexports.DMAX = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var maxValue = targetFields[resultIndexes[0]];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    if (maxValue < targetFields[value]) {\n      maxValue = targetFields[value];\n    }\n  });\n\n  return maxValue;\n};\n\nexports.DMIN = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var minValue = targetFields[resultIndexes[0]];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    if (minValue > targetFields[value]) {\n      minValue = targetFields[value];\n    }\n  });\n\n  return minValue;\n};\n\nexports.DPRODUCT = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n  targetValues = compact(targetValues);\n\n  var result = 1;\n\n  utils.arrayEach(targetValues, function(value) {\n    result *= value;\n  });\n\n  return result;\n};\n\nexports.DSTDEV = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n  targetValues = compact(targetValues);\n\n  return stats.STDEV.S(targetValues);\n};\n\nexports.DSTDEVP = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n  targetValues = compact(targetValues);\n\n  return stats.STDEV.P(targetValues);\n};\n\nexports.DSUM = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n\n  return maths.SUM(targetValues);\n};\n\nexports.DVAR = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n\n  return stats.VAR.S(targetValues);\n};\n\nexports.DVARP = function(database, field, criteria) {\n  // Return error if field is not a number and not a string\n  if (isNaN(field) && (typeof field !== \"string\")) {\n    return error.value;\n  }\n  var resultIndexes = findResultIndex(database, criteria);\n  var targetFields = [];\n\n  if (typeof field === \"string\") {\n    var index = exports.FINDFIELD(database, field);\n    targetFields = utils.rest(database[index]);\n  } else {\n    targetFields = utils.rest(database[field]);\n  }\n  var targetValues = [];\n\n  utils.arrayEach(resultIndexes, function(value) {\n    targetValues.push(targetFields[value]);\n  });\n\n  return stats.VAR.P(targetValues);\n};\n", "var error = require('./utils/error');\nvar utils = require('./utils/common');\nvar information = require('./information');\n\nexports.AND = function() {\n  var args = utils.flatten(arguments);\n  var result = true;\n  for (var i = 0; i < args.length; i++) {\n    if (!args[i]) {\n      result = false;\n    }\n  }\n  return result;\n};\n\nexports.CHOOSE = function() {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n\n  var index = arguments[0];\n  if (index < 1 || index > 254) {\n    return error.value;\n  }\n\n  if (arguments.length < index + 1) {\n    return error.value;\n  }\n\n  return arguments[index];\n};\n\nexports.FALSE = function() {\n  return false;\n};\n\nexports.IF = function(test, then_value, otherwise_value) {\n  return test ? then_value : otherwise_value;\n};\n\nexports.IFERROR = function(value, valueIfError) {\n  if (information.ISERROR(value)) {\n    return valueIfError;\n  }\n  return value;\n};\n\nexports.IFNA = function(value, value_if_na) {\n  return value === error.na ? value_if_na : value;\n};\n\nexports.NOT = function(logical) {\n  return !logical;\n};\n\nexports.OR = function() {\n  var args = utils.flatten(arguments);\n  var result = false;\n  for (var i = 0; i < args.length; i++) {\n    if (args[i]) {\n      result = true;\n    }\n  }\n  return result;\n};\n\nexports.TRUE = function() {\n  return true;\n};\n\nexports.XOR = function() {\n  var args = utils.flatten(arguments);\n  var result = 0;\n  for (var i = 0; i < args.length; i++) {\n    if (args[i]) {\n      result++;\n    }\n  }\n  return (Math.floor(Math.abs(result)) & 1) ? true : false;\n};\n\nexports.SWITCH = function () {\n  var result;\n\n  if (arguments.length > 0)  {\n    var targetValue = arguments[0];\n    var argc = arguments.length - 1;\n    var switchCount = Math.floor(argc / 2);\n    var switchSatisfied = false;\n    var hasDefaultClause = argc % 2 !== 0;\n    var defaultClause = argc % 2 === 0 ? null : arguments[arguments.length - 1];\n\n    if (switchCount) {\n      for (var index = 0; index < switchCount; index++) {\n        if (targetValue === arguments[index * 2 + 1]) {\n          result = arguments[index * 2 + 2];\n          switchSatisfied = true;\n          break;\n        }\n      }\n    }\n\n    if (!switchSatisfied) {\n      result = hasDefaultClause ? defaultClause : error.na;\n    }\n  } else {\n    result = error.value;\n  }\n\n  return result;\n};\n", "var error = require('./utils/error');\nvar dateTime = require('./date-time');\nvar utils = require('./utils/common');\n\nfunction validDate(d) {\n  return d && d.getTime && !isNaN(d.getTime());\n}\n\nfunction ensureDate(d) {\n  return (d instanceof Date)?d:new Date(d);\n}\n\nexports.ACCRINT = function(issue, first, settlement, rate, par, frequency, basis) {\n  // Return error if either date is invalid\n  issue      = ensureDate(issue);\n  first      = ensureDate(first);\n  settlement = ensureDate(settlement);\n  if (!validDate(issue) || !validDate(first) || !validDate(settlement)) {\n    return error.value;\n  }\n\n  // Return error if either rate or par are lower than or equal to zero\n  if (rate <= 0 || par <= 0) {\n    return error.num;\n  }\n\n  // Return error if frequency is neither 1, 2, or 4\n  if ([1, 2, 4].indexOf(frequency) === -1) {\n    return error.num;\n  }\n\n  // Return error if basis is neither 0, 1, 2, 3, or 4\n  if ([0, 1, 2, 3, 4].indexOf(basis) === -1) {\n    return error.num;\n  }\n\n  // Return error if settlement is before or equal to issue\n  if (settlement <= issue) {\n    return error.num;\n  }\n\n  // Set default values\n  par   = par   || 0;\n  basis = basis || 0;\n\n  // Compute accrued interest\n  return par * rate * dateTime.YEARFRAC(issue, settlement, basis);\n};\n\n// TODO\nexports.ACCRINTM = function() {\n  throw new Error('ACCRINTM is not implemented');\n};\n\n// TODO\nexports.AMORDEGRC = function() {\n  throw new Error('AMORDEGRC is not implemented');\n};\n\n// TODO\nexports.AMORLINC = function() {\n  throw new Error('AMORLINC is not implemented');\n};\n\n// TODO\nexports.COUPDAYBS = function() {\n  throw new Error('COUPDAYBS is not implemented');\n};\n\n// TODO\nexports.COUPDAYS = function() {\n  throw new Error('COUPDAYS is not implemented');\n};\n\n// TODO\nexports.COUPDAYSNC = function() {\n  throw new Error('COUPDAYSNC is not implemented');\n};\n\n// TODO\nexports.COUPNCD = function() {\n  throw new Error('COUPNCD is not implemented');\n};\n\n// TODO\nexports.COUPNUM = function() {\n  throw new Error('COUPNUM is not implemented');\n};\n\n// TODO\nexports.COUPPCD = function() {\n  throw new Error('COUPPCD is not implemented');\n};\n\nexports.CUMIPMT = function(rate, periods, value, start, end, type) {\n  // Credits: algorithm inspired by Apache OpenOffice\n  // Credits: Hannes Stiebitzhofer for the translations of function and variable names\n  // Requires exports.FV() and exports.PMT() from exports.js [http://stoic.com/exports/]\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  value = utils.parseNumber(value);\n  if (utils.anyIsError(rate, periods, value)) {\n    return error.value;\n  }\n\n  // Return error if either rate, periods, or value are lower than or equal to zero\n  if (rate <= 0 || periods <= 0 || value <= 0) {\n    return error.num;\n  }\n\n  // Return error if start < 1, end < 1, or start > end\n  if (start < 1 || end < 1 || start > end) {\n    return error.num;\n  }\n\n  // Return error if type is neither 0 nor 1\n  if (type !== 0 && type !== 1) {\n    return error.num;\n  }\n\n  // Compute cumulative interest\n  var payment = exports.PMT(rate, periods, value, 0, type);\n  var interest = 0;\n\n  if (start === 1) {\n    if (type === 0) {\n      interest = -value;\n      start++;\n    }\n  }\n\n  for (var i = start; i <= end; i++) {\n    if (type === 1) {\n      interest += exports.FV(rate, i - 2, payment, value, 1) - payment;\n    } else {\n      interest += exports.FV(rate, i - 1, payment, value, 0);\n    }\n  }\n  interest *= rate;\n\n  // Return cumulative interest\n  return interest;\n};\n\nexports.CUMPRINC = function(rate, periods, value, start, end, type) {\n  // Credits: algorithm inspired by Apache OpenOffice\n  // Credits: Hannes Stiebitzhofer for the translations of function and variable names\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  value = utils.parseNumber(value);\n  if (utils.anyIsError(rate, periods, value)) {\n    return error.value;\n  }\n\n  // Return error if either rate, periods, or value are lower than or equal to zero\n  if (rate <= 0 || periods <= 0 || value <= 0) {\n    return error.num;\n  }\n\n  // Return error if start < 1, end < 1, or start > end\n  if (start < 1 || end < 1 || start > end) {\n    return error.num;\n  }\n\n  // Return error if type is neither 0 nor 1\n  if (type !== 0 && type !== 1) {\n    return error.num;\n  }\n\n  // Compute cumulative principal\n  var payment = exports.PMT(rate, periods, value, 0, type);\n  var principal = 0;\n  if (start === 1) {\n    if (type === 0) {\n      principal = payment + value * rate;\n    } else {\n      principal = payment;\n    }\n    start++;\n  }\n  for (var i = start; i <= end; i++) {\n    if (type > 0) {\n      principal += payment - (exports.FV(rate, i - 2, payment, value, 1) - payment) * rate;\n    } else {\n      principal += payment - exports.FV(rate, i - 1, payment, value, 0) * rate;\n    }\n  }\n\n  // Return cumulative principal\n  return principal;\n};\n\nexports.DB = function(cost, salvage, life, period, month) {\n  // Initialize month\n  month = (month === undefined) ? 12 : month;\n\n  cost = utils.parseNumber(cost);\n  salvage = utils.parseNumber(salvage);\n  life = utils.parseNumber(life);\n  period = utils.parseNumber(period);\n  month = utils.parseNumber(month);\n  if (utils.anyIsError(cost, salvage, life, period, month)) {\n    return error.value;\n  }\n\n  // Return error if any of the parameters is negative\n  if (cost < 0 || salvage < 0 || life < 0 || period < 0) {\n    return error.num;\n  }\n\n  // Return error if month is not an integer between 1 and 12\n  if ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].indexOf(month) === -1) {\n    return error.num;\n  }\n\n  // Return error if period is greater than life\n  if (period > life) {\n    return error.num;\n  }\n\n  // Return 0 (zero) if salvage is greater than or equal to cost\n  if (salvage >= cost) {\n    return 0;\n  }\n\n  // Rate is rounded to three decimals places\n  var rate = (1 - Math.pow(salvage / cost, 1 / life)).toFixed(3);\n\n  // Compute initial depreciation\n  var initial = cost * rate * month / 12;\n\n  // Compute total depreciation\n  var total = initial;\n  var current = 0;\n  var ceiling = (period === life) ? life - 1 : period;\n  for (var i = 2; i <= ceiling; i++) {\n    current = (cost - total) * rate;\n    total += current;\n  }\n\n  // Depreciation for the first and last periods are special cases\n  if (period === 1) {\n    // First period\n    return initial;\n  } else if (period === life) {\n    // Last period\n    return (cost - total) * rate;\n  } else {\n    return current;\n  }\n};\n\nexports.DDB = function(cost, salvage, life, period, factor) {\n  // Initialize factor\n  factor = (factor === undefined) ? 2 : factor;\n\n  cost = utils.parseNumber(cost);\n  salvage = utils.parseNumber(salvage);\n  life = utils.parseNumber(life);\n  period = utils.parseNumber(period);\n  factor = utils.parseNumber(factor);\n  if (utils.anyIsError(cost, salvage, life, period, factor)) {\n    return error.value;\n  }\n\n  // Return error if any of the parameters is negative or if factor is null\n  if (cost < 0 || salvage < 0 || life < 0 || period < 0 || factor <= 0) {\n    return error.num;\n  }\n\n  // Return error if period is greater than life\n  if (period > life) {\n    return error.num;\n  }\n\n  // Return 0 (zero) if salvage is greater than or equal to cost\n  if (salvage >= cost) {\n    return 0;\n  }\n\n  // Compute depreciation\n  var total = 0;\n  var current = 0;\n  for (var i = 1; i <= period; i++) {\n    current = Math.min((cost - total) * (factor / life), (cost - salvage - total));\n    total += current;\n  }\n\n  // Return depreciation\n  return current;\n};\n\n// TODO\nexports.DISC = function() {\n  throw new Error('DISC is not implemented');\n};\n\nexports.DOLLARDE = function(dollar, fraction) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  dollar = utils.parseNumber(dollar);\n  fraction = utils.parseNumber(fraction);\n  if (utils.anyIsError(dollar, fraction)) {\n    return error.value;\n  }\n\n  // Return error if fraction is negative\n  if (fraction < 0) {\n    return error.num;\n  }\n\n  // Return error if fraction is greater than or equal to 0 and less than 1\n  if (fraction >= 0 && fraction < 1) {\n    return error.div0;\n  }\n\n  // Truncate fraction if it is not an integer\n  fraction = parseInt(fraction, 10);\n\n  // Compute integer part\n  var result = parseInt(dollar, 10);\n\n  // Add decimal part\n  result += (dollar % 1) * Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN10)) / fraction;\n\n  // Round result\n  var power = Math.pow(10, Math.ceil(Math.log(fraction) / Math.LN2) + 1);\n  result = Math.round(result * power) / power;\n\n  // Return converted dollar price\n  return result;\n};\n\nexports.DOLLARFR = function(dollar, fraction) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  dollar = utils.parseNumber(dollar);\n  fraction = utils.parseNumber(fraction);\n  if (utils.anyIsError(dollar, fraction)) {\n    return error.value;\n  }\n\n  // Return error if fraction is negative\n  if (fraction < 0) {\n    return error.num;\n  }\n\n  // Return error if fraction is greater than or equal to 0 and less than 1\n  if (fraction >= 0 && fraction < 1) {\n    return error.div0;\n  }\n\n  // Truncate fraction if it is not an integer\n  fraction = parseInt(fraction, 10);\n\n  // Compute integer part\n  var result = parseInt(dollar, 10);\n\n  // Add decimal part\n  result += (dollar % 1) * Math.pow(10, -Math.ceil(Math.log(fraction) / Math.LN10)) * fraction;\n\n  // Return converted dollar price\n  return result;\n};\n\n// TODO\nexports.DURATION = function() {\n  throw new Error('DURATION is not implemented');\n};\n\nexports.EFFECT = function(rate, periods) {\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  if (utils.anyIsError(rate, periods)) {\n    return error.value;\n  }\n\n  // Return error if rate <=0 or periods < 1\n  if (rate <= 0 || periods < 1) {\n    return error.num;\n  }\n\n  // Truncate periods if it is not an integer\n  periods = parseInt(periods, 10);\n\n  // Return effective annual interest rate\n  return Math.pow(1 + rate / periods, periods) - 1;\n};\n\nexports.FV = function(rate, periods, payment, value, type) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  value = value || 0;\n  type = type || 0;\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  payment = utils.parseNumber(payment);\n  value = utils.parseNumber(value);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, periods, payment, value, type)) {\n    return error.value;\n  }\n\n  // Return future value\n  var result;\n  if (rate === 0) {\n    result = value + payment * periods;\n  } else {\n    var term = Math.pow(1 + rate, periods);\n    if (type === 1) {\n      result = value * term + payment * (1 + rate) * (term - 1) / rate;\n    } else {\n      result = value * term + payment * (term - 1) / rate;\n    }\n  }\n  return -result;\n};\n\nexports.FVSCHEDULE = function(principal, schedule) {\n  principal = utils.parseNumber(principal);\n  schedule = utils.parseNumberArray(utils.flatten(schedule));\n  if (utils.anyIsError(principal, schedule)) {\n    return error.value;\n  }\n\n  var n = schedule.length;\n  var future = principal;\n\n  // Apply all interests in schedule\n  for (var i = 0; i < n; i++) {\n    // Apply scheduled interest\n    future *= 1 + schedule[i];\n  }\n\n  // Return future value\n  return future;\n};\n\n// TODO\nexports.INTRATE = function() {\n  throw new Error('INTRATE is not implemented');\n};\n\nexports.IPMT = function(rate, period, periods, present, future, type) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  future = future || 0;\n  type = type || 0;\n\n  rate = utils.parseNumber(rate);\n  period = utils.parseNumber(period);\n  periods = utils.parseNumber(periods);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, period, periods, present, future, type)) {\n    return error.value;\n  }\n\n  // Compute payment\n  var payment = exports.PMT(rate, periods, present, future, type);\n\n  // Compute interest\n  var interest;\n  if (period === 1) {\n    if (type === 1) {\n      interest = 0;\n    } else {\n      interest = -present;\n    }\n  } else {\n    if (type === 1) {\n      interest = exports.FV(rate, period - 2, payment, present, 1) - payment;\n    } else {\n      interest = exports.FV(rate, period - 1, payment, present, 0);\n    }\n  }\n\n  // Return interest\n  return interest * rate;\n};\n\nexports.IRR = function(values, guess) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  guess = guess || 0;\n\n  values = utils.parseNumberArray(utils.flatten(values));\n  guess = utils.parseNumber(guess);\n  if (utils.anyIsError(values, guess)) {\n    return error.value;\n  }\n\n  // Calculates the resulting amount\n  var irrResult = function(values, dates, rate) {\n    var r = rate + 1;\n    var result = values[0];\n    for (var i = 1; i < values.length; i++) {\n      result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);\n    }\n    return result;\n  };\n\n  // Calculates the first derivation\n  var irrResultDeriv = function(values, dates, rate) {\n    var r = rate + 1;\n    var result = 0;\n    for (var i = 1; i < values.length; i++) {\n      var frac = (dates[i] - dates[0]) / 365;\n      result -= frac * values[i] / Math.pow(r, frac + 1);\n    }\n    return result;\n  };\n\n  // Initialize dates and check that values contains at least one positive value and one negative value\n  var dates = [];\n  var positive = false;\n  var negative = false;\n  for (var i = 0; i < values.length; i++) {\n    dates[i] = (i === 0) ? 0 : dates[i - 1] + 365;\n    if (values[i] > 0) {\n      positive = true;\n    }\n    if (values[i] < 0) {\n      negative = true;\n    }\n  }\n\n  // Return error if values does not contain at least one positive value and one negative value\n  if (!positive || !negative) {\n    return error.num;\n  }\n\n  // Initialize guess and resultRate\n  guess = (guess === undefined) ? 0.1 : guess;\n  var resultRate = guess;\n\n  // Set maximum epsilon for end of iteration\n  var epsMax = 1e-10;\n\n  // Implement Newton's method\n  var newRate, epsRate, resultValue;\n  var contLoop = true;\n  do {\n    resultValue = irrResult(values, dates, resultRate);\n    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);\n    epsRate = Math.abs(newRate - resultRate);\n    resultRate = newRate;\n    contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);\n  } while (contLoop);\n\n  // Return internal rate of return\n  return resultRate;\n};\n\nexports.ISPMT = function(rate, period, periods, value) {\n  rate = utils.parseNumber(rate);\n  period = utils.parseNumber(period);\n  periods = utils.parseNumber(periods);\n  value = utils.parseNumber(value);\n  if (utils.anyIsError(rate, period, periods, value)) {\n    return error.value;\n  }\n\n  // Return interest\n  return value * rate * (period / periods - 1);\n};\n\n// TODO\nexports.MDURATION = function() {\n  throw new Error('MDURATION is not implemented');\n};\n\nexports.MIRR = function(values, finance_rate, reinvest_rate) {\n  values = utils.parseNumberArray(utils.flatten(values));\n  finance_rate = utils.parseNumber(finance_rate);\n  reinvest_rate = utils.parseNumber(reinvest_rate);\n  if (utils.anyIsError(values, finance_rate, reinvest_rate)) {\n    return error.value;\n  }\n\n  // Initialize number of values\n  var n = values.length;\n\n  // Lookup payments (negative values) and incomes (positive values)\n  var payments = [];\n  var incomes = [];\n  for (var i = 0; i < n; i++) {\n    if (values[i] < 0) {\n      payments.push(values[i]);\n    } else {\n      incomes.push(values[i]);\n    }\n  }\n\n  // Return modified internal rate of return\n  var num = -exports.NPV(reinvest_rate, incomes) * Math.pow(1 + reinvest_rate, n - 1);\n  var den = exports.NPV(finance_rate, payments) * (1 + finance_rate);\n  return Math.pow(num / den, 1 / (n - 1)) - 1;\n};\n\nexports.NOMINAL = function(rate, periods) {\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  if (utils.anyIsError(rate, periods)) {\n    return error.value;\n  }\n\n  // Return error if rate <=0 or periods < 1\n  if (rate <= 0 || periods < 1) {\n    return error.num;\n  }\n\n  // Truncate periods if it is not an integer\n  periods = parseInt(periods, 10);\n\n  // Return nominal annual interest rate\n  return (Math.pow(rate + 1, 1 / periods) - 1) * periods;\n};\n\nexports.NPER = function(rate, payment, present, future, type) {\n  type = (type === undefined) ? 0 : type;\n  future = (future === undefined) ? 0 : future;\n\n  rate = utils.parseNumber(rate);\n  payment = utils.parseNumber(payment);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, payment, present, future, type)) {\n    return error.value;\n  }\n\n  // Return number of periods\n  var num = payment * (1 + rate * type) - future * rate;\n  var den = (present * rate + payment * (1 + rate * type));\n  return Math.log(num / den) / Math.log(1 + rate);\n};\n\nexports.NPV = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n\n  // Lookup rate\n  var rate = args[0];\n\n  // Initialize net present value\n  var value = 0;\n\n  // Loop on all values\n  for (var j = 1; j < args.length; j++) {\n    value += args[j] / Math.pow(1 + rate, j);\n  }\n\n  // Return net present value\n  return value;\n};\n\n// TODO\nexports.ODDFPRICE = function() {\n  throw new Error('ODDFPRICE is not implemented');\n};\n\n// TODO\nexports.ODDFYIELD = function() {\n  throw new Error('ODDFYIELD is not implemented');\n};\n\n// TODO\nexports.ODDLPRICE = function() {\n  throw new Error('ODDLPRICE is not implemented');\n};\n\n// TODO\nexports.ODDLYIELD = function() {\n  throw new Error('ODDLYIELD is not implemented');\n};\n\nexports.PDURATION = function(rate, present, future) {\n  rate = utils.parseNumber(rate);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  if (utils.anyIsError(rate, present, future)) {\n    return error.value;\n  }\n\n  // Return error if rate <=0\n  if (rate <= 0) {\n    return error.num;\n  }\n\n  // Return number of periods\n  return (Math.log(future) - Math.log(present)) / Math.log(1 + rate);\n};\n\nexports.PMT = function(rate, periods, present, future, type) {\n  // Credits: algorithm inspired by Apache OpenOffice\n\n  future = future || 0;\n  type = type || 0;\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, periods, present, future, type)) {\n    return error.value;\n  }\n\n  // Return payment\n  var result;\n  if (rate === 0) {\n    result = (present + future) / periods;\n  } else {\n    var term = Math.pow(1 + rate, periods);\n    if (type === 1) {\n      result = (future * rate / (term - 1) + present * rate / (1 - 1 / term)) / (1 + rate);\n    } else {\n      result = future * rate / (term - 1) + present * rate / (1 - 1 / term);\n    }\n  }\n  return -result;\n};\n\nexports.PPMT = function(rate, period, periods, present, future, type) {\n  future = future || 0;\n  type = type || 0;\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, periods, present, future, type)) {\n    return error.value;\n  }\n\n  return exports.PMT(rate, periods, present, future, type) - exports.IPMT(rate, period, periods, present, future, type);\n};\n\n// TODO\nexports.PRICE = function() {\n  throw new Error('PRICE is not implemented');\n};\n\n// TODO\nexports.PRICEDISC = function() {\n  throw new Error('PRICEDISC is not implemented');\n};\n\n// TODO\nexports.PRICEMAT = function() {\n  throw new Error('PRICEMAT is not implemented');\n};\n\nexports.PV = function(rate, periods, payment, future, type) {\n  future = future || 0;\n  type = type || 0;\n\n  rate = utils.parseNumber(rate);\n  periods = utils.parseNumber(periods);\n  payment = utils.parseNumber(payment);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  if (utils.anyIsError(rate, periods, payment, future, type)) {\n    return error.value;\n  }\n\n  // Return present value\n  if (rate === 0) {\n    return -payment * periods - future;\n  } else {\n    return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 + rate * type) - future) / Math.pow(1 + rate, periods);\n  }\n};\n\nexports.RATE = function(periods, payment, present, future, type, guess) {\n  // Credits: rabugento\n\n  guess = (guess === undefined) ? 0.01 : guess;\n  future = (future === undefined) ? 0 : future;\n  type = (type === undefined) ? 0 : type;\n\n  periods = utils.parseNumber(periods);\n  payment = utils.parseNumber(payment);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  type = utils.parseNumber(type);\n  guess = utils.parseNumber(guess);\n  if (utils.anyIsError(periods, payment, present, future, type, guess)) {\n    return error.value;\n  }\n\n  // Set maximum epsilon for end of iteration\n  var epsMax = 1e-10;\n\n  // Set maximum number of iterations\n  var iterMax = 50;\n\n  // Implement Newton's method\n  var y, y0, y1, x0, x1 = 0,\n    f = 0,\n    i = 0;\n  var rate = guess;\n  if (Math.abs(rate) < epsMax) {\n    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\n  } else {\n    f = Math.exp(periods * Math.log(1 + rate));\n    y = present * f + payment * (1 / rate + type) * (f - 1) + future;\n  }\n  y0 = present + payment * periods + future;\n  y1 = present * f + payment * (1 / rate + type) * (f - 1) + future;\n  i = x0 = 0;\n  x1 = rate;\n  while ((Math.abs(y0 - y1) > epsMax) && (i < iterMax)) {\n    rate = (y1 * x0 - y0 * x1) / (y1 - y0);\n    x0 = x1;\n    x1 = rate;\n    if (Math.abs(rate) < epsMax) {\n      y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\n    } else {\n      f = Math.exp(periods * Math.log(1 + rate));\n      y = present * f + payment * (1 / rate + type) * (f - 1) + future;\n    }\n    y0 = y1;\n    y1 = y;\n    ++i;\n  }\n  return rate;\n};\n\n// TODO\nexports.RECEIVED = function() {\n  throw new Error('RECEIVED is not implemented');\n};\n\nexports.RRI = function(periods, present, future) {\n  periods = utils.parseNumber(periods);\n  present = utils.parseNumber(present);\n  future = utils.parseNumber(future);\n  if (utils.anyIsError(periods, present, future)) {\n    return error.value;\n  }\n\n  // Return error if periods or present is equal to 0 (zero)\n  if (periods === 0 || present === 0) {\n    return error.num;\n  }\n\n  // Return equivalent interest rate\n  return Math.pow(future / present, 1 / periods) - 1;\n};\n\nexports.SLN = function(cost, salvage, life) {\n  cost = utils.parseNumber(cost);\n  salvage = utils.parseNumber(salvage);\n  life = utils.parseNumber(life);\n  if (utils.anyIsError(cost, salvage, life)) {\n    return error.value;\n  }\n\n  // Return error if life equal to 0 (zero)\n  if (life === 0) {\n    return error.num;\n  }\n\n  // Return straight-line depreciation\n  return (cost - salvage) / life;\n};\n\nexports.SYD = function(cost, salvage, life, period) {\n  // Return error if any of the parameters is not a number\n  cost = utils.parseNumber(cost);\n  salvage = utils.parseNumber(salvage);\n  life = utils.parseNumber(life);\n  period = utils.parseNumber(period);\n  if (utils.anyIsError(cost, salvage, life, period)) {\n    return error.value;\n  }\n\n  // Return error if life equal to 0 (zero)\n  if (life === 0) {\n    return error.num;\n  }\n\n  // Return error if period is lower than 1 or greater than life\n  if (period < 1 || period > life) {\n    return error.num;\n  }\n\n  // Truncate period if it is not an integer\n  period = parseInt(period, 10);\n\n  // Return straight-line depreciation\n  return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));\n};\n\nexports.TBILLEQ = function(settlement, maturity, discount) {\n  settlement = utils.parseDate(settlement);\n  maturity = utils.parseDate(maturity);\n  discount = utils.parseNumber(discount);\n  if (utils.anyIsError(settlement, maturity, discount)) {\n    return error.value;\n  }\n\n  // Return error if discount is lower than or equal to zero\n  if (discount <= 0) {\n    return error.num;\n  }\n\n  // Return error if settlement is greater than maturity\n  if (settlement > maturity) {\n    return error.num;\n  }\n\n  // Return error if maturity is more than one year after settlement\n  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {\n    return error.num;\n  }\n\n  // Return bond-equivalent yield\n  return (365 * discount) / (360 - discount * dateTime.DAYS360(settlement, maturity, false));\n};\n\nexports.TBILLPRICE = function(settlement, maturity, discount) {\n  settlement = utils.parseDate(settlement);\n  maturity = utils.parseDate(maturity);\n  discount = utils.parseNumber(discount);\n  if (utils.anyIsError(settlement, maturity, discount)) {\n    return error.value;\n  }\n\n  // Return error if discount is lower than or equal to zero\n  if (discount <= 0) {\n    return error.num;\n  }\n\n  // Return error if settlement is greater than maturity\n  if (settlement > maturity) {\n    return error.num;\n  }\n\n  // Return error if maturity is more than one year after settlement\n  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {\n    return error.num;\n  }\n\n  // Return bond-equivalent yield\n  return 100 * (1 - discount * dateTime.DAYS360(settlement, maturity, false) / 360);\n};\n\nexports.TBILLYIELD = function(settlement, maturity, price) {\n  settlement = utils.parseDate(settlement);\n  maturity = utils.parseDate(maturity);\n  price = utils.parseNumber(price);\n  if (utils.anyIsError(settlement, maturity, price)) {\n    return error.value;\n  }\n\n  // Return error if price is lower than or equal to zero\n  if (price <= 0) {\n    return error.num;\n  }\n\n  // Return error if settlement is greater than maturity\n  if (settlement > maturity) {\n    return error.num;\n  }\n\n  // Return error if maturity is more than one year after settlement\n  if (maturity - settlement > 365 * 24 * 60 * 60 * 1000) {\n    return error.num;\n  }\n\n  // Return bond-equivalent yield\n  return (100 - price) * 360 / (price * dateTime.DAYS360(settlement, maturity, false));\n};\n\n// TODO\nexports.VDB = function() {\n  throw new Error('VDB is not implemented');\n};\n\n// TODO needs better support for date\n// exports.XIRR = function(values, dates, guess) {\n//   // Credits: algorithm inspired by Apache OpenOffice\n//\n//   values = utils.parseNumberArray(utils.flatten(values));\n//   dates = utils.parseDateArray(utils.flatten(dates));\n//   guess = utils.parseNumber(guess);\n//\n//   if (utils.anyIsError(values, dates, guess)) {\n//     return error.value;\n//   }\n//\n//   // Calculates the resulting amount\n//   var irrResult = function(values, dates, rate) {\n//     var r = rate + 1;\n//     var result = values[0];\n//     for (var i = 1; i < values.length; i++) {\n//       result += values[i] / Math.pow(r, dateTime.DAYS(dates[i], dates[0]) / 365);\n//     }\n//     return result;\n//   };\n//\n//   // Calculates the first derivation\n//   var irrResultDeriv = function(values, dates, rate) {\n//     var r = rate + 1;\n//     var result = 0;\n//     for (var i = 1; i < values.length; i++) {\n//       var frac = dateTime.DAYS(dates[i], dates[0]) / 365;\n//       result -= frac * values[i] / Math.pow(r, frac + 1);\n//     }\n//     return result;\n//   };\n//\n//   // Check that values contains at least one positive value and one negative value\n//   var positive = false;\n//   var negative = false;\n//   for (var i = 0; i < values.length; i++) {\n//     if (values[i] > 0) {\n//       positive = true;\n//     }\n//     if (values[i] < 0) {\n//       negative = true;\n//     }\n//   }\n//\n//   // Return error if values does not contain at least one positive value and one negative value\n//   if (!positive || !negative) {\n//     return error.num;\n//   }\n//\n//   // Initialize guess and resultRate\n//   guess = guess || 0.1;\n//   var resultRate = guess;\n//\n//   // Set maximum epsilon for end of iteration\n//   var epsMax = 1e-10;\n//\n//   // Implement Newton's method\n//   var newRate, epsRate, resultValue;\n//   var contLoop = true;\n//   do {\n//     resultValue = irrResult(values, dates, resultRate);\n//     newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);\n//     epsRate = Math.abs(newRate - resultRate);\n//     resultRate = newRate;\n//     contLoop = (epsRate > epsMax) && (Math.abs(resultValue) > epsMax);\n//   } while (contLoop);\n//\n//   // Return internal rate of return\n//   return resultRate;\n// };\n\nexports.XNPV = function(rate, values, dates) {\n  rate = utils.parseNumber(rate);\n  values = utils.parseNumberArray(utils.flatten(values));\n  dates = utils.parseDateArray(utils.flatten(dates));\n  if (utils.anyIsError(rate, values, dates)) {\n    return error.value;\n  }\n\n  var result = 0;\n  for (var i = 0; i < values.length; i++) {\n    result += values[i] / Math.pow(1 + rate, dateTime.DAYS(dates[i], dates[0]) / 365);\n  }\n  return result;\n};\n\n// TODO\nexports.YIELD = function() {\n  throw new Error('YIELD is not implemented');\n};\n\n// TODO\nexports.YIELDDISC = function() {\n  throw new Error('YIELDDISC is not implemented');\n};\n\n// TODO\nexports.YIELDMAT = function() {\n  throw new Error('YIELDMAT is not implemented');\n};\n", "var error = require('./utils/error');\nvar utils = require('./utils/common');\n\nexports.MATCH = function(lookupValue, lookupArray, matchType) {\n  if (!lookupValue && !lookupArray) {\n    return error.na;\n  }\n\n  if (arguments.length === 2) {\n    matchType = 1;\n  }\n  if (!(lookupArray instanceof Array)) {\n    return error.na;\n  }\n\n  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {\n    return error.na;\n  }\n  var index;\n  var indexValue;\n  for (var idx = 0; idx < lookupArray.length; idx++) {\n    if (matchType === 1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] < lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] > indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    } else if (matchType === 0) {\n      if (typeof lookupValue === 'string') {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {\n          return idx + 1;\n        }\n      } else {\n        if (lookupArray[idx] === lookupValue) {\n          return idx + 1;\n        }\n      }\n    } else if (matchType === -1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] > lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] < indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    }\n  }\n\n  return index ? index : error.na;\n};\n\nexports.VLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n\n  rangeLookup = rangeLookup || false;\n  for (var i = 0; i < table.length; i++) {\n    var row = table[i];\n    if ((!rangeLookup && row[0] === needle) ||\n      ((row[0] === needle) ||\n        (rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {\n      return (index < (row.length + 1) ? row[index - 1] : error.ref);\n    }\n  }\n\n  return error.na;\n};\n\nexports.HLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n\n  rangeLookup = rangeLookup || false;\n\n  var transposedTable = utils.transpose(table);\n\n  for (var i = 0; i < transposedTable.length; i++) {\n    var row = transposedTable[i];\n    if ((!rangeLookup && row[0] === needle) ||\n      ((row[0] === needle) ||\n        (rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {\n      return (index < (row.length + 1) ? row[index - 1] : error.ref);\n    }\n  }\n\n  return error.na;\n};\n", "var categories = [\n  require('./lib/compatibility'),\n  require('./lib/database'),\n  require('./lib/engineering'),\n  require('./lib/logical'),\n  require('./lib/math-trig'),\n  require('./lib/text'),\n  require('./lib/date-time'),\n  require('./lib/financial'),\n  require('./lib/information'),\n  require('./lib/lookup-reference'),\n  require('./lib/statistical'),\n  require('./lib/miscellaneous')\n];\n\nfor (var c in categories) {\n  var category = categories[c];\n  for (var f in category) {\n    exports[f] = exports[f] || category[f];\n  }\n}\n", "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport Emitter from 'tiny-emitter';\nimport evaluateByOperator from \"./evaluate-by-operator/evaluate-by-operator.mjs\";\nimport { Parser as GrammarParser } from \"./grammar-parser/grammar-parser.mjs\";\nimport { trimEdges } from \"./helper/string.mjs\";\nimport { toNumber, invertNumber } from \"./helper/number.mjs\";\nimport errorParser, { isValidStrict as isErrorValid, ERROR, ERROR_NAME } from \"./error.mjs\";\nimport { extractLabel, toLabel } from \"./helper/cell.mjs\";\n/**\n * @class Parser\n */\n\nvar Parser = /*#__PURE__*/function (_Emitter) {\n  _inherits(Parser, _Emitter);\n\n  var _super = _createSuper(Parser);\n\n  function Parser() {\n    var _this;\n\n    _classCallCheck(this, Parser);\n\n    _this = _super.call(this);\n    _this.parser = new GrammarParser();\n    _this.parser.yy = {\n      toNumber: toNumber,\n      trimEdges: trimEdges,\n      invertNumber: invertNumber,\n      throwError: function throwError(errorName) {\n        return _this._throwError(errorName);\n      },\n      callVariable: function callVariable(variable) {\n        return _this._callVariable(variable);\n      },\n      evaluateByOperator: evaluateByOperator,\n      callFunction: function callFunction(name, params) {\n        return _this._callFunction(name, params);\n      },\n      cellValue: function cellValue(value) {\n        return _this._callCellValue(value);\n      },\n      rangeValue: function rangeValue(start, end) {\n        return _this._callRangeValue(start, end);\n      }\n    };\n    _this.variables = Object.create(null);\n    _this.functions = Object.create(null);\n\n    _this.setVariable('TRUE', true).setVariable('FALSE', false).setVariable('NULL', null);\n\n    return _this;\n  }\n  /**\n   * Parse formula expression.\n   *\n   * @param {String} expression to parse.\n   * @return {*} Returns an object with tow properties `error` and `result`.\n   */\n\n\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: function parse(expression) {\n      var result = null;\n      var error = null;\n\n      try {\n        if (expression === '') {\n          result = '';\n        } else {\n          result = this.parser.parse(expression);\n        }\n      } catch (ex) {\n        var message = errorParser(ex.message);\n\n        if (message) {\n          error = message;\n        } else {\n          error = errorParser(ERROR);\n        }\n      }\n\n      if (result instanceof Error) {\n        error = errorParser(result.message) || errorParser(ERROR);\n        result = null;\n      }\n\n      return {\n        error: error,\n        result: result\n      };\n    }\n    /**\n     * Set predefined variable name which can be visible while parsing formula expression.\n     *\n     * @param {String} name Variable name.\n     * @param {*} value Variable value.\n     * @returns {Parser}\n     */\n\n  }, {\n    key: \"setVariable\",\n    value: function setVariable(name, value) {\n      this.variables[name] = value;\n      return this;\n    }\n    /**\n     * Get variable name.\n     *\n     * @param {String} name Variable name.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getVariable\",\n    value: function getVariable(name) {\n      return this.variables[name];\n    }\n    /**\n     * Retrieve variable value by its name.\n     *\n     * @param name Variable name.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callVariable\",\n    value: function _callVariable(name) {\n      var value = this.getVariable(name);\n      this.emit('callVariable', name, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n\n      if (value === void 0) {\n        throw Error(ERROR_NAME);\n      }\n\n      return value;\n    }\n    /**\n     * Set custom function which can be visible while parsing formula expression.\n     *\n     * @param {String} name Custom function name.\n     * @param {Function} fn Custom function.\n     * @returns {Parser}\n     */\n\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(name, fn) {\n      this.functions[name] = fn;\n      return this;\n    }\n    /**\n     * Get custom function.\n     *\n     * @param {String} name Custom function name.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(name) {\n      return this.functions[name];\n    }\n    /**\n     * Call function with provided params.\n     *\n     * @param name Function name.\n     * @param params Function params.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callFunction\",\n    value: function _callFunction(name) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var fn = this.getFunction(name);\n      var value;\n\n      if (fn) {\n        value = fn(params);\n      }\n\n      this.emit('callFunction', name, params, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n      return value === void 0 ? evaluateByOperator(name, params) : value;\n    }\n    /**\n     * Retrieve value by its label (`B3`, `B$3`, `B$3`, `$B$3`).\n     *\n     * @param {String} label Coordinates.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callCellValue\",\n    value: function _callCellValue(label) {\n      label = label.toUpperCase();\n\n      var _extractLabel = extractLabel(label),\n          _extractLabel2 = _slicedToArray(_extractLabel, 2),\n          row = _extractLabel2[0],\n          column = _extractLabel2[1];\n\n      var value = void 0;\n      this.emit('callCellValue', {\n        label: label,\n        row: row,\n        column: column\n      }, function (_value) {\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Retrieve value by its label (`B3:A1`, `B$3:A1`, `B$3:$A1`, `$B$3:A$1`).\n     *\n     * @param {String} startLabel Coordinates of the first cell.\n     * @param {String} endLabel Coordinates of the last cell.\n     * @returns {Array} Returns an array of mixed values.\n     * @private\n     */\n\n  }, {\n    key: \"_callRangeValue\",\n    value: function _callRangeValue(startLabel, endLabel) {\n      startLabel = startLabel.toUpperCase();\n      endLabel = endLabel.toUpperCase();\n\n      var _extractLabel3 = extractLabel(startLabel),\n          _extractLabel4 = _slicedToArray(_extractLabel3, 2),\n          startRow = _extractLabel4[0],\n          startColumn = _extractLabel4[1];\n\n      var _extractLabel5 = extractLabel(endLabel),\n          _extractLabel6 = _slicedToArray(_extractLabel5, 2),\n          endRow = _extractLabel6[0],\n          endColumn = _extractLabel6[1];\n\n      var startCell = {};\n      var endCell = {};\n\n      if (startRow.index <= endRow.index) {\n        startCell.row = startRow;\n        endCell.row = endRow;\n      } else {\n        startCell.row = endRow;\n        endCell.row = startRow;\n      }\n\n      if (startColumn.index <= endColumn.index) {\n        startCell.column = startColumn;\n        endCell.column = endColumn;\n      } else {\n        startCell.column = endColumn;\n        endCell.column = startColumn;\n      }\n\n      startCell.label = toLabel(startCell.row, startCell.column);\n      endCell.label = toLabel(endCell.row, endCell.column);\n      var value = [];\n      this.emit('callRangeValue', startCell, endCell, function () {\n        var _value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Try to throw error by its name.\n     *\n     * @param {String} errorName Error name.\n     * @returns {String}\n     * @private\n     */\n\n  }, {\n    key: \"_throwError\",\n    value: function _throwError(errorName) {\n      if (isErrorValid(errorName)) {\n        throw Error(errorName);\n      }\n\n      throw Error(ERROR);\n    }\n  }]);\n\n  return Parser;\n}(Emitter);\n\nexport default Parser;", "/**\n * Convert value into number.\n *\n * @param {String|Number} number\n * @returns {*}\n */\nexport function toNumber(number) {\n  var result;\n\n  if (typeof number === 'number') {\n    result = number;\n  } else if (typeof number === 'string') {\n    result = number.indexOf('.') > -1 ? parseFloat(number) : parseInt(number, 10);\n  }\n\n  return result;\n}\n/**\n * Invert provided number.\n *\n * @param {Number} number\n * @returns {Number} Returns inverted number.\n */\n\nexport function invertNumber(number) {\n  return -1 * toNumber(number);\n}", "var _errors;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var ERROR = 'ERROR';\nexport var ERROR_DIV_ZERO = 'DIV/0';\nexport var ERROR_NAME = 'NAME';\nexport var ERROR_NOT_AVAILABLE = 'N/A';\nexport var ERROR_NULL = 'NULL';\nexport var ERROR_NUM = 'NUM';\nexport var ERROR_REF = 'REF';\nexport var ERROR_VALUE = 'VALUE';\nvar errors = (_errors = {}, _defineProperty(_errors, ERROR, '#ERROR!'), _defineProperty(_errors, ERROR_DIV_ZERO, '#DIV/0!'), _defineProperty(_errors, ERROR_NAME, '#NAME?'), _defineProperty(_errors, ERROR_NOT_AVAILABLE, '#N/A'), _defineProperty(_errors, ERROR_NULL, '#NULL!'), _defineProperty(_errors, ERROR_NUM, '#NUM!'), _defineProperty(_errors, ERROR_REF, '#REF!'), _defineProperty(_errors, ERROR_VALUE, '#VALUE!'), _errors);\n/**\n * Return error type based on provided error id.\n *\n * @param {String} type Error type.\n * @returns {String|null} Returns error id.\n */\n\nexport default function error(type) {\n  var result;\n  type = (type + '').replace(/#|!|\\?/g, '');\n\n  if (errors[type]) {\n    result = errors[type];\n  }\n\n  return result ? result : null;\n}\n/**\n * Check if error type is strict valid with knows errors.\n *\n * @param {String} Error type.\n * @return {Boolean}\n */\n\nexport function isValidStrict(type) {\n  var valid = false;\n\n  for (var i in errors) {\n    if (Object.prototype.hasOwnProperty.call(errors, i) && errors[i] === type) {\n      valid = true;\n      break;\n    }\n  }\n\n  return valid;\n}", "import { toNumber } from \"./../../helper/number.mjs\";\nimport { ERROR_VALUE } from \"./../../error.mjs\";\nexport var SYMBOL = '+';\nexport default function func(first) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var result = rest.reduce(function (acc, value) {\n    return acc + toNumber(value);\n  }, toNumber(first));\n\n  if (isNaN(result)) {\n    throw Error(ERROR_VALUE);\n  }\n\n  return result;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '&';\nexport default function func() {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n\n  return params.reduce(function (acc, value) {\n    return acc + value.toString();\n  }, '');\n}\nfunc.SYMBOL = SYMBOL;", "import { toNumber } from \"./../../helper/number.mjs\";\nimport { ERROR_DIV_ZERO, ERROR_VALUE } from \"./../../error.mjs\";\nexport var SYMBOL = '/';\nexport default function func(first) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var result = rest.reduce(function (acc, value) {\n    return acc / toNumber(value);\n  }, toNumber(first));\n\n  if (result === Infinity) {\n    throw Error(ERROR_DIV_ZERO);\n  }\n\n  if (isNaN(result)) {\n    throw Error(ERROR_VALUE);\n  }\n\n  return result;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '=';\nexport default function func(exp1, exp2) {\n  return exp1 === exp2;\n}\nfunc.SYMBOL = SYMBOL;", "import formulajs from '@handsontable/formulajs';\nimport SUPPORTED_FORMULAS from \"./../../supported-formulas.mjs\";\nimport { ERROR_NAME } from \"./../../error.mjs\";\nexport var SYMBOL = SUPPORTED_FORMULAS;\nexport default function func(symbol) {\n  return function __formulaFunction() {\n    symbol = symbol.toUpperCase();\n    var symbolParts = symbol.split('.');\n    var foundFormula = false;\n    var result;\n\n    if (symbolParts.length === 1) {\n      if (formulajs[symbolParts[0]]) {\n        foundFormula = true;\n        result = formulajs[symbolParts[0]].apply(formulajs, arguments);\n      }\n    } else {\n      var length = symbolParts.length;\n      var index = 0;\n      var nestedFormula = formulajs;\n\n      while (index < length) {\n        nestedFormula = nestedFormula[symbolParts[index]];\n        index++;\n\n        if (!nestedFormula) {\n          nestedFormula = null;\n          break;\n        }\n      }\n\n      if (nestedFormula) {\n        foundFormula = true;\n        result = nestedFormula.apply(void 0, arguments);\n      }\n    }\n\n    if (!foundFormula) {\n      throw Error(ERROR_NAME);\n    }\n\n    return result;\n  };\n}\nfunc.isFactory = true;\nfunc.SYMBOL = SYMBOL;", "var SUPPORTED_FORMULAS = ['ABS', 'ACCRINT', 'ACOS', 'ACOSH', 'ACOT', 'ACOTH', 'ADD', 'AGGREGATE', 'AND', 'ARABIC', 'ARGS2ARRAY', 'ASIN', 'ASINH', 'ATAN', 'ATAN2', 'ATANH', 'AVEDEV', 'AVERAGE', 'AVERAGEA', 'AVERAGEIF', 'AVERAGEIFS', 'BASE', 'BESSELI', 'BESSELJ', 'BESSELK', 'BESSELY', 'BETA.DIST', 'BETA.INV', 'BETADIST', 'BETAINV', 'BIN2DEC', 'BIN2HEX', 'BIN2OCT', 'BINOM.DIST', 'BINOM.DIST.RANGE', 'BINOM.INV', 'BINOMDIST', 'BITAND', 'BITLSHIFT', 'BITOR', 'BITRSHIFT', 'BITXOR', 'CEILING', 'CEILINGMATH', 'CEILINGPRECISE', 'CHAR', 'CHISQ.DIST', 'CHISQ.DIST.RT', 'CHISQ.INV', 'CHISQ.INV.RT', 'CHOOSE', 'CHOOSE', 'CLEAN', 'CODE', 'COLUMN', 'COLUMNS', 'COMBIN', 'COMBINA', 'COMPLEX', 'CONCATENATE', 'CONFIDENCE', 'CONFIDENCE.NORM', 'CONFIDENCE.T', 'CONVERT', 'CORREL', 'COS', 'COSH', 'COT', 'COTH', 'COUNT', 'COUNTA', 'COUNTBLANK', 'COUNTIF', 'COUNTIFS', 'COUNTIN', 'COUNTUNIQUE', 'COVARIANCE.P', 'COVARIANCE.S', 'CSC', 'CSCH', 'CUMIPMT', 'CUMPRINC', 'DATE', 'DATEVALUE', 'DAY', 'DAYS', 'DAYS360', 'DB', 'DDB', 'DEC2BIN', 'DEC2HEX', 'DEC2OCT', 'DECIMAL', 'DEGREES', 'DELTA', 'DEVSQ', 'DIVIDE', 'DOLLARDE', 'DOLLARFR', 'E', 'EDATE', 'EFFECT', 'EOMONTH', 'EQ', 'ERF', 'ERFC', 'EVEN', 'EXACT', 'EXP', 'EXPON.DIST', 'EXPONDIST', 'F.DIST', 'F.DIST.RT', 'F.INV', 'F.INV.RT', 'FACT', 'FACTDOUBLE', 'FALSE', 'FDIST', 'FDISTRT', 'FIND', 'FINV', 'FINVRT', 'FISHER', 'FISHERINV', 'FLATTEN', 'FLOOR', 'FORECAST', 'FREQUENCY', 'FV', 'FVSCHEDULE', 'GAMMA', 'GAMMA.DIST', 'GAMMA.INV', 'GAMMADIST', 'GAMMAINV', 'GAMMALN', 'GAMMALN.PRECISE', 'GAUSS', 'GCD', 'GEOMEAN', 'GESTEP', 'GROWTH', 'GTE', 'HARMEAN', 'HEX2BIN', 'HEX2DEC', 'HEX2OCT', 'HOUR', 'HTML2TEXT', 'HYPGEOM.DIST', 'HYPGEOMDIST', 'IF', 'IMABS', 'IMAGINARY', 'IMARGUMENT', 'IMCONJUGATE', 'IMCOS', 'IMCOSH', 'IMCOT', 'IMCSC', 'IMCSCH', 'IMDIV', 'IMEXP', 'IMLN', 'IMLOG10', 'IMLOG2', 'IMPOWER', 'IMPRODUCT', 'IMREAL', 'IMSEC', 'IMSECH', 'IMSIN', 'IMSINH', 'IMSQRT', 'IMSUB', 'IMSUM', 'IMTAN', 'INT', 'INTERCEPT', 'INTERVAL', 'IPMT', 'IRR', 'ISBINARY', 'ISBLANK', 'ISEVEN', 'ISLOGICAL', 'ISNONTEXT', 'ISNUMBER', 'ISODD', 'ISODD', 'ISOWEEKNUM', 'ISPMT', 'ISTEXT', 'JOIN', 'KURT', 'LARGE', 'LCM', 'LEFT', 'LEN', 'LINEST', 'LN', 'LOG', 'LOG10', 'LOGEST', 'LOGNORM.DIST', 'LOGNORM.INV', 'LOGNORMDIST', 'LOGNORMINV', 'LOWER', 'LT', 'LTE', 'MATCH', 'MAX', 'MAXA', 'MEDIAN', 'MID', 'MIN', 'MINA', 'MINUS', 'MINUTE', 'MIRR', 'MOD', 'MODE.MULT', 'MODE.SNGL', 'MODEMULT', 'MODESNGL', 'MONTH', 'MROUND', 'MULTINOMIAL', 'MULTIPLY', 'NE', 'NEGBINOM.DIST', 'NEGBINOMDIST', 'NETWORKDAYS', 'NOMINAL', 'NORM.DIST', 'NORM.INV', 'NORM.S.DIST', 'NORM.S.INV', 'NORMDIST', 'NORMINV', 'NORMSDIST', 'NORMSINV', 'NOT', 'NOW', 'NPER', 'NPV', 'NUMBERS', 'OCT2BIN', 'OCT2DEC', 'OCT2HEX', 'ODD', 'OR', 'PDURATION', 'PEARSON', 'PERCENTILEEXC', 'PERCENTILEINC', 'PERCENTRANKEXC', 'PERCENTRANKINC', 'PERMUT', 'PERMUTATIONA', 'PHI', 'PI', 'PMT', 'POISSON.DIST', 'POISSONDIST', 'POW', 'POWER', 'PPMT', 'PROB', 'PRODUCT', 'PROPER', 'PV', 'QUARTILE.EXC', 'QUARTILE.INC', 'QUARTILEEXC', 'QUARTILEINC', 'QUOTIENT', 'RADIANS', 'RAND', 'RANDBETWEEN', 'RANK.AVG', 'RANK.EQ', 'RANKAVG', 'RANKEQ', 'RATE', 'REFERENCE', 'REGEXEXTRACT', 'REGEXMATCH', 'REGEXREPLACE', 'REPLACE', 'REPT', 'RIGHT', 'ROMAN', 'ROUND', 'ROUNDDOWN', 'ROUNDUP', 'ROW', 'ROWS', 'RRI', 'RSQ', 'SEARCH', 'SEC', 'SECH', 'SECOND', 'SERIESSUM', 'SIGN', 'SIN', 'SINH', 'SKEW', 'SKEW.P', 'SKEWP', 'SLN', 'SLOPE', 'SMALL', 'SPLIT', 'SPLIT', 'SQRT', 'SQRTPI', 'STANDARDIZE', 'STDEV.P', 'STDEV.S', 'STDEVA', 'STDEVP', 'STDEVPA', 'STDEVS', 'STEYX', 'SUBSTITUTE', 'SUBTOTAL', 'SUM', 'SUMIF', 'SUMIFS', 'SUMPRODUCT', 'SUMSQ', 'SUMX2MY2', 'SUMX2PY2', 'SUMXMY2', 'SWITCH', 'SYD', 'T', 'T.DIST', 'T.DIST.2T', 'T.DIST.RT', 'T.INV', 'T.INV.2T', 'TAN', 'TANH', 'TBILLEQ', 'TBILLPRICE', 'TBILLYIELD', 'TDIST', 'TDIST2T', 'TDISTRT', 'TIME', 'TIMEVALUE', 'TINV', 'TINV2T', 'TODAY', 'TRANSPOSE', 'TREND', 'TRIM', 'TRIMMEAN', 'TRUE', 'TRUNC', 'UNICHAR', 'UNICODE', 'UNIQUE', 'UPPER', 'VAR.P', 'VAR.S', 'VARA', 'VARP', 'VARPA', 'VARS', 'WEEKDAY', 'WEEKNUM', 'WEIBULL.DIST', 'WEIBULLDIST', 'WORKDAY', 'XIRR', 'XNPV', 'XOR', 'YEAR', 'YEARFRAC'];\nexport default SUPPORTED_FORMULAS;", "export var SYMBOL = '>';\nexport default function func(exp1, exp2) {\n  return exp1 > exp2;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '>=';\nexport default function func(exp1, exp2) {\n  return exp1 >= exp2;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '<';\nexport default function func(exp1, exp2) {\n  return exp1 < exp2;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '<=';\nexport default function func(exp1, exp2) {\n  return exp1 <= exp2;\n}\nfunc.SYMBOL = SYMBOL;", "import { toNumber } from \"./../../helper/number.mjs\";\nimport { ERROR_VALUE } from \"./../../error.mjs\";\nexport var SYMBOL = '-';\nexport default function func(first) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var result = rest.reduce(function (acc, value) {\n    return acc - toNumber(value);\n  }, toNumber(first));\n\n  if (isNaN(result)) {\n    throw Error(ERROR_VALUE);\n  }\n\n  return result;\n}\nfunc.SYMBOL = SYMBOL;", "import { toNumber } from \"./../../helper/number.mjs\";\nimport { ERROR_VALUE } from \"./../../error.mjs\";\nexport var SYMBOL = '*';\nexport default function func(first) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var result = rest.reduce(function (acc, value) {\n    return acc * toNumber(value);\n  }, toNumber(first));\n\n  if (isNaN(result)) {\n    throw Error(ERROR_VALUE);\n  }\n\n  return result;\n}\nfunc.SYMBOL = SYMBOL;", "export var SYMBOL = '<>';\nexport default function func(exp1, exp2) {\n  return exp1 !== exp2;\n}\nfunc.SYMBOL = SYMBOL;", "import { toNumber } from \"./../../helper/number.mjs\";\nimport { ERROR_VALUE } from \"./../../error.mjs\";\nexport var SYMBOL = '^';\nexport default function func(exp1, exp2) {\n  var result = Math.pow(toNumber(exp1), toNumber(exp2));\n\n  if (isNaN(result)) {\n    throw Error(ERROR_VALUE);\n  }\n\n  return result;\n}\nfunc.SYMBOL = SYMBOL;", "function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable import/no-named-as-default-member */\nimport add from \"./operator/add.mjs\";\nimport ampersand from \"./operator/ampersand.mjs\";\nimport divide from \"./operator/divide.mjs\";\nimport equal from \"./operator/equal.mjs\";\nimport formulaFunction from \"./operator/formula-function.mjs\";\nimport greaterThan from \"./operator/greater-than.mjs\";\nimport greaterThanOrEqual from \"./operator/greater-than-or-equal.mjs\";\nimport lessThan from \"./operator/less-than.mjs\";\nimport lessThanOrEqual from \"./operator/less-than-or-equal.mjs\";\nimport minus from \"./operator/minus.mjs\";\nimport multiply from \"./operator/multiply.mjs\";\nimport notEqual from \"./operator/not-equal.mjs\";\nimport power from \"./operator/power.mjs\";\nimport { ERROR_NAME } from \"./../error.mjs\";\nvar availableOperators = Object.create(null);\n/**\n * Evaluate values by operator id.git\n *\n * @param {String} operator Operator id.\n * @param {Array} [params=[]] Arguments to evaluate.\n * @returns {*}\n */\n\nexport default function evaluateByOperator(operator) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  operator = operator.toUpperCase();\n\n  if (!availableOperators[operator]) {\n    throw Error(ERROR_NAME);\n  }\n\n  return availableOperators[operator].apply(availableOperators, _toConsumableArray(params));\n}\n/**\n * Register operator.\n *\n * @param {String|Array} symbol Symbol to register.\n * @param {Function} func Logic to register for this symbol.\n */\n\nexport function registerOperation(symbol, func) {\n  if (!Array.isArray(symbol)) {\n    symbol = [symbol.toUpperCase()];\n  }\n\n  symbol.forEach(function (s) {\n    if (func.isFactory) {\n      availableOperators[s] = func(s);\n    } else {\n      availableOperators[s] = func;\n    }\n  });\n}\nregisterOperation(add.SYMBOL, add);\nregisterOperation(ampersand.SYMBOL, ampersand);\nregisterOperation(divide.SYMBOL, divide);\nregisterOperation(equal.SYMBOL, equal);\nregisterOperation(power.SYMBOL, power);\nregisterOperation(formulaFunction.SYMBOL, formulaFunction);\nregisterOperation(greaterThan.SYMBOL, greaterThan);\nregisterOperation(greaterThanOrEqual.SYMBOL, greaterThanOrEqual);\nregisterOperation(lessThan.SYMBOL, lessThan);\nregisterOperation(lessThanOrEqual.SYMBOL, lessThanOrEqual);\nregisterOperation(multiply.SYMBOL, multiply);\nregisterOperation(notEqual.SYMBOL, notEqual);\nregisterOperation(minus.SYMBOL, minus);", "/* parser generated by jison 0.4.18 */\n\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar o = function o(k, v, _o, l) {\n  for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v) {\n    ;\n  }\n\n  return _o;\n},\n    $V0 = [1, 5],\n    $V1 = [1, 8],\n    $V2 = [1, 6],\n    $V3 = [1, 7],\n    $V4 = [1, 9],\n    $V5 = [1, 14],\n    $V6 = [1, 15],\n    $V7 = [1, 16],\n    $V8 = [1, 12],\n    $V9 = [1, 13],\n    $Va = [1, 17],\n    $Vb = [1, 19],\n    $Vc = [1, 20],\n    $Vd = [1, 21],\n    $Ve = [1, 22],\n    $Vf = [1, 23],\n    $Vg = [1, 24],\n    $Vh = [1, 25],\n    $Vi = [1, 26],\n    $Vj = [1, 27],\n    $Vk = [1, 28],\n    $Vl = [5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30],\n    $Vm = [5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 32],\n    $Vn = [5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 34],\n    $Vo = [5, 10, 11, 13, 14, 15, 16, 17, 29, 30],\n    $Vp = [5, 10, 13, 14, 15, 16, 29, 30],\n    $Vq = [5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30],\n    $Vr = [13, 29, 30];\n\nvar parser = {\n  trace: function trace() {},\n  yy: {},\n  symbols_: {\n    \"error\": 2,\n    \"expressions\": 3,\n    \"expression\": 4,\n    \"EOF\": 5,\n    \"variableSequence\": 6,\n    \"number\": 7,\n    \"STRING\": 8,\n    \"&\": 9,\n    \"=\": 10,\n    \"+\": 11,\n    \"(\": 12,\n    \")\": 13,\n    \"<\": 14,\n    \">\": 15,\n    \"NOT\": 16,\n    \"-\": 17,\n    \"*\": 18,\n    \"/\": 19,\n    \"^\": 20,\n    \"FUNCTION\": 21,\n    \"expseq\": 22,\n    \"cell\": 23,\n    \"ABSOLUTE_CELL\": 24,\n    \"RELATIVE_CELL\": 25,\n    \"MIXED_CELL\": 26,\n    \":\": 27,\n    \"ARRAY\": 28,\n    \";\": 29,\n    \",\": 30,\n    \"VARIABLE\": 31,\n    \"DECIMAL\": 32,\n    \"NUMBER\": 33,\n    \"%\": 34,\n    \"ERROR\": 35,\n    \"$accept\": 0,\n    \"$end\": 1\n  },\n  terminals_: {\n    5: \"EOF\",\n    8: \"STRING\",\n    9: \"&\",\n    10: \"=\",\n    11: \"+\",\n    12: \"(\",\n    13: \")\",\n    14: \"<\",\n    15: \">\",\n    16: \"NOT\",\n    17: \"-\",\n    18: \"*\",\n    19: \"/\",\n    20: \"^\",\n    21: \"FUNCTION\",\n    24: \"ABSOLUTE_CELL\",\n    25: \"RELATIVE_CELL\",\n    26: \"MIXED_CELL\",\n    27: \":\",\n    28: \"ARRAY\",\n    29: \";\",\n    30: \",\",\n    31: \"VARIABLE\",\n    32: \"DECIMAL\",\n    33: \"NUMBER\",\n    34: \"%\",\n    35: \"ERROR\"\n  },\n  productions_: [0, [3, 2], [4, 1], [4, 1], [4, 1], [4, 3], [4, 3], [4, 3], [4, 3], [4, 4], [4, 4], [4, 4], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 2], [4, 2], [4, 3], [4, 4], [4, 1], [4, 1], [4, 2], [23, 1], [23, 1], [23, 1], [23, 3], [23, 3], [23, 3], [23, 3], [23, 3], [23, 3], [23, 3], [23, 3], [23, 3], [22, 1], [22, 1], [22, 3], [22, 3], [6, 1], [6, 3], [7, 1], [7, 3], [7, 2], [2, 1]],\n  performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate\n  /* action[1] */\n  , $$\n  /* vstack */\n  , _$\n  /* lstack */\n  ) {\n    /* this == yyval */\n    var $0 = $$.length - 1;\n\n    switch (yystate) {\n      case 1:\n        return $$[$0 - 1];\n        break;\n\n      case 2:\n        this.$ = yy.callVariable($$[$0][0]);\n        break;\n\n      case 3:\n        this.$ = yy.toNumber($$[$0]);\n        break;\n\n      case 4:\n        this.$ = yy.trimEdges($$[$0]);\n        break;\n\n      case 5:\n        this.$ = yy.evaluateByOperator('&', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 6:\n        this.$ = yy.evaluateByOperator('=', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 7:\n        this.$ = yy.evaluateByOperator('+', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 8:\n        this.$ = $$[$0 - 1];\n        break;\n\n      case 9:\n        this.$ = yy.evaluateByOperator('<=', [$$[$0 - 3], $$[$0]]);\n        break;\n\n      case 10:\n        this.$ = yy.evaluateByOperator('>=', [$$[$0 - 3], $$[$0]]);\n        break;\n\n      case 11:\n        this.$ = yy.evaluateByOperator('<>', [$$[$0 - 3], $$[$0]]);\n        break;\n\n      case 12:\n        this.$ = yy.evaluateByOperator('NOT', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 13:\n        this.$ = yy.evaluateByOperator('>', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 14:\n        this.$ = yy.evaluateByOperator('<', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 15:\n        this.$ = yy.evaluateByOperator('-', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 16:\n        this.$ = yy.evaluateByOperator('*', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 17:\n        this.$ = yy.evaluateByOperator('/', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 18:\n        this.$ = yy.evaluateByOperator('^', [$$[$0 - 2], $$[$0]]);\n        break;\n\n      case 19:\n        var n1 = yy.invertNumber($$[$0]);\n        this.$ = n1;\n\n        if (isNaN(this.$)) {\n          this.$ = 0;\n        }\n\n        break;\n\n      case 20:\n        var n1 = yy.toNumber($$[$0]);\n        this.$ = n1;\n\n        if (isNaN(this.$)) {\n          this.$ = 0;\n        }\n\n        break;\n\n      case 21:\n        this.$ = yy.callFunction($$[$0 - 2]);\n        break;\n\n      case 22:\n        this.$ = yy.callFunction($$[$0 - 3], $$[$0 - 1]);\n        break;\n\n      case 26:\n      case 27:\n      case 28:\n        this.$ = yy.cellValue($$[$0]);\n        break;\n\n      case 29:\n      case 30:\n      case 31:\n      case 32:\n      case 33:\n      case 34:\n      case 35:\n      case 36:\n      case 37:\n        this.$ = yy.rangeValue($$[$0 - 2], $$[$0]);\n        break;\n\n      case 38:\n      case 42:\n        this.$ = [$$[$0]];\n        break;\n\n      case 39:\n        this.$ = yy.trimEdges(yytext).split(',');\n        break;\n\n      case 40:\n      case 41:\n        $$[$0 - 2].push($$[$0]);\n        this.$ = $$[$0 - 2];\n        break;\n\n      case 43:\n        this.$ = Array.isArray($$[$0 - 2]) ? $$[$0 - 2] : [$$[$0 - 2]];\n        this.$.push($$[$0]);\n        break;\n\n      case 44:\n        this.$ = $$[$0];\n        break;\n\n      case 45:\n        this.$ = ($$[$0 - 2] + '.' + $$[$0]) * 1;\n        break;\n\n      case 46:\n        this.$ = $$[$0 - 1] * 0.01;\n        break;\n\n      case 47:\n        this.$ = yy.throwError($$[$0]);\n        break;\n    }\n  },\n  table: [{\n    2: 11,\n    3: 1,\n    4: 2,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    1: [3]\n  }, {\n    5: [1, 18],\n    9: $Vb,\n    10: $Vc,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }, o($Vl, [2, 2], {\n    32: [1, 29]\n  }), o($Vl, [2, 3], {\n    34: [1, 30]\n  }), o($Vl, [2, 4]), {\n    2: 11,\n    4: 31,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 32,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 33,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    12: [1, 34]\n  }, o($Vl, [2, 23]), o($Vl, [2, 24], {\n    2: 35,\n    35: $Va\n  }), o($Vm, [2, 42]), o($Vn, [2, 44], {\n    32: [1, 36]\n  }), o($Vl, [2, 26], {\n    27: [1, 37]\n  }), o($Vl, [2, 27], {\n    27: [1, 38]\n  }), o($Vl, [2, 28], {\n    27: [1, 39]\n  }), o([5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 35], [2, 47]), {\n    1: [2, 1]\n  }, {\n    2: 11,\n    4: 40,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 41,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 42,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 45,\n    6: 3,\n    7: 4,\n    8: $V0,\n    10: [1, 43],\n    11: $V1,\n    12: $V2,\n    15: [1, 44],\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 47,\n    6: 3,\n    7: 4,\n    8: $V0,\n    10: [1, 46],\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 48,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 49,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 50,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 51,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 52,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    31: [1, 53]\n  }, o($Vn, [2, 46]), {\n    9: $Vb,\n    10: $Vc,\n    11: $Vd,\n    13: [1, 54],\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }, o($Vo, [2, 19], {\n    9: $Vb,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vo, [2, 20], {\n    9: $Vb,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), {\n    2: 11,\n    4: 57,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    13: [1, 55],\n    17: $V3,\n    21: $V4,\n    22: 56,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    28: [1, 58],\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, o($Vl, [2, 25]), {\n    33: [1, 59]\n  }, {\n    24: [1, 60],\n    25: [1, 61],\n    26: [1, 62]\n  }, {\n    24: [1, 63],\n    25: [1, 64],\n    26: [1, 65]\n  }, {\n    24: [1, 66],\n    25: [1, 67],\n    26: [1, 68]\n  }, o($Vl, [2, 5]), o([5, 10, 13, 29, 30], [2, 6], {\n    9: $Vb,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vo, [2, 7], {\n    9: $Vb,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), {\n    2: 11,\n    4: 69,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 70,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, o($Vp, [2, 14], {\n    9: $Vb,\n    11: $Vd,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), {\n    2: 11,\n    4: 71,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, o($Vp, [2, 13], {\n    9: $Vb,\n    11: $Vd,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o([5, 10, 13, 16, 29, 30], [2, 12], {\n    9: $Vb,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vo, [2, 15], {\n    9: $Vb,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vq, [2, 16], {\n    9: $Vb,\n    20: $Vk\n  }), o($Vq, [2, 17], {\n    9: $Vb,\n    20: $Vk\n  }), o([5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30], [2, 18], {\n    9: $Vb\n  }), o($Vm, [2, 43]), o($Vl, [2, 8]), o($Vl, [2, 21]), {\n    13: [1, 72],\n    29: [1, 73],\n    30: [1, 74]\n  }, o($Vr, [2, 38], {\n    9: $Vb,\n    10: $Vc,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vr, [2, 39]), o($Vn, [2, 45]), o($Vl, [2, 29]), o($Vl, [2, 30]), o($Vl, [2, 31]), o($Vl, [2, 32]), o($Vl, [2, 33]), o($Vl, [2, 34]), o($Vl, [2, 35]), o($Vl, [2, 36]), o($Vl, [2, 37]), o($Vp, [2, 9], {\n    9: $Vb,\n    11: $Vd,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vp, [2, 11], {\n    9: $Vb,\n    11: $Vd,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vp, [2, 10], {\n    9: $Vb,\n    11: $Vd,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vl, [2, 22]), {\n    2: 11,\n    4: 75,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, {\n    2: 11,\n    4: 76,\n    6: 3,\n    7: 4,\n    8: $V0,\n    11: $V1,\n    12: $V2,\n    17: $V3,\n    21: $V4,\n    23: 10,\n    24: $V5,\n    25: $V6,\n    26: $V7,\n    31: $V8,\n    33: $V9,\n    35: $Va\n  }, o($Vr, [2, 40], {\n    9: $Vb,\n    10: $Vc,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  }), o($Vr, [2, 41], {\n    9: $Vb,\n    10: $Vc,\n    11: $Vd,\n    14: $Ve,\n    15: $Vf,\n    16: $Vg,\n    17: $Vh,\n    18: $Vi,\n    19: $Vj,\n    20: $Vk\n  })],\n  defaultActions: {\n    18: [2, 1]\n  },\n  parseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n      this.trace(str);\n    } else {\n      var error = new Error(str);\n      error.hash = hash;\n      throw error;\n    }\n  },\n  parse: function parse(input) {\n    var self = this,\n        stack = [0],\n        tstack = [],\n        // token stack\n    vstack = [null],\n        // semantic value stack\n    lstack = [],\n        // location stack\n    table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n    var args = lstack.slice.call(arguments, 1); //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = {\n      yy: {}\n    }; // copy state\n\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n\n    if (typeof lexer.yylloc == 'undefined') {\n      lexer.yylloc = {};\n    }\n\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n      this.parseError = sharedState.yy.parseError;\n    } else {\n      this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack(n) {\n      stack.length = stack.length - 2 * n;\n      vstack.length = vstack.length - n;\n      lstack.length = lstack.length - n;\n    }\n\n    var lex = function lex() {\n      var token;\n      token = lexer.lex() || EOF; // if token isn't its numeric value, convert\n\n      if (typeof token !== 'number') {\n        token = self.symbols_[token] || token;\n      }\n\n      return token;\n    };\n\n    var symbol,\n        preErrorSymbol,\n        state,\n        action,\n        a,\n        r,\n        yyval = {},\n        p,\n        len,\n        newState,\n        expected;\n\n    while (true) {\n      // retreive state number from top of stack\n      state = stack[stack.length - 1]; // use default actions if available\n\n      if (this.defaultActions[state]) {\n        action = this.defaultActions[state];\n      } else {\n        if (symbol === null || typeof symbol == 'undefined') {\n          symbol = lex();\n        } // read action for current state and first input\n\n\n        action = table[state] && table[state][symbol];\n      } // handle parse error\n\n\n      if (typeof action === 'undefined' || !action.length || !action[0]) {\n        // Return the rule stack depth where the nearest error rule can be found.\n        // Return FALSE when no error recovery rule was found.\n        var locateNearestErrorRecoveryRule = function locateNearestErrorRecoveryRule(state) {\n          var stack_probe = stack.length - 1;\n          var depth = 0; // try to recover from error\n\n          for (;;) {\n            // check for error recovery rule in this state\n            if (TERROR.toString() in table[state]) {\n              return depth;\n            }\n\n            if (state === 0 || stack_probe < 2) {\n              return false; // No suitable error recovery rule available.\n            }\n\n            stack_probe -= 2; // popStack(1): [symbol, action]\n\n            state = stack[stack_probe];\n            ++depth;\n          }\n        };\n\n        var error_rule_depth;\n        var errStr = '';\n\n        if (!recovering) {\n          // first see if there's any chance at hitting an error recovery rule:\n          error_rule_depth = locateNearestErrorRecoveryRule(state); // Report error\n\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n\n          if (lexer.showPosition) {\n            errStr = 'Parse error on line ' + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = 'Parse error on line ' + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n\n          this.parseError(errStr, {\n            text: lexer.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer.yylineno,\n            loc: yyloc,\n            expected: expected,\n            recoverable: error_rule_depth !== false\n          });\n        } else if (preErrorSymbol !== EOF) {\n          error_rule_depth = locateNearestErrorRecoveryRule(state);\n        } // just recovered from another error\n\n\n        if (recovering == 3) {\n          if (symbol === EOF || preErrorSymbol === EOF) {\n            throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n          } // discard current lookahead and grab another\n\n\n          yyleng = lexer.yyleng;\n          yytext = lexer.yytext;\n          yylineno = lexer.yylineno;\n          yyloc = lexer.yylloc;\n          symbol = lex();\n        } // try to recover from error\n\n\n        if (error_rule_depth === false) {\n          throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n        }\n\n        popStack(error_rule_depth);\n        preErrorSymbol = symbol == TERROR ? null : symbol; // save the lookahead token\n\n        symbol = TERROR; // insert generic error symbol as new lookahead\n\n        state = stack[stack.length - 1];\n        action = table[state] && table[state][TERROR];\n        recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n      } // this shouldn't happen, unless resolve defaults are off\n\n\n      if (action[0] instanceof Array && action.length > 1) {\n        throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n      }\n\n      switch (action[0]) {\n        case 1:\n          // shift\n          //this.shiftCount++;\n          stack.push(symbol);\n          vstack.push(lexer.yytext);\n          lstack.push(lexer.yylloc);\n          stack.push(action[1]); // push state\n\n          symbol = null;\n\n          if (!preErrorSymbol) {\n            // normal execution/no error\n            yyleng = lexer.yyleng;\n            yytext = lexer.yytext;\n            yylineno = lexer.yylineno;\n            yyloc = lexer.yylloc;\n\n            if (recovering > 0) {\n              recovering--;\n            }\n          } else {\n            // error just occurred, resume old lookahead f/ before error\n            symbol = preErrorSymbol;\n            preErrorSymbol = null;\n          }\n\n          break;\n\n        case 2:\n          // reduce\n          //this.reductionCount++;\n          len = this.productions_[action[1]][1]; // perform semantic action\n\n          yyval.$ = vstack[vstack.length - len]; // default to $$ = $1\n          // default location, uses first token for firsts, last for lasts\n\n          yyval._$ = {\n            first_line: lstack[lstack.length - (len || 1)].first_line,\n            last_line: lstack[lstack.length - 1].last_line,\n            first_column: lstack[lstack.length - (len || 1)].first_column,\n            last_column: lstack[lstack.length - 1].last_column\n          };\n\n          if (ranges) {\n            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n          }\n\n          r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n          if (typeof r !== 'undefined') {\n            return r;\n          } // pop off stack\n\n\n          if (len) {\n            stack = stack.slice(0, -1 * len * 2);\n            vstack = vstack.slice(0, -1 * len);\n            lstack = lstack.slice(0, -1 * len);\n          }\n\n          stack.push(this.productions_[action[1]][0]); // push nonterminal (reduce)\n\n          vstack.push(yyval.$);\n          lstack.push(yyval._$); // goto new state = table[STATE][NONTERMINAL]\n\n          newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n          stack.push(newState);\n          break;\n\n        case 3:\n          // accept\n          return true;\n      }\n    }\n\n    return true;\n  }\n};\n/* generated by jison-lex 0.3.4 */\n\nvar lexer = function () {\n  var lexer = {\n    EOF: 1,\n    parseError: function parseError(str, hash) {\n      if (this.yy.parser) {\n        this.yy.parser.parseError(str, hash);\n      } else {\n        throw new Error(str);\n      }\n    },\n    // resets the lexer, sets new input\n    setInput: function setInput(input, yy) {\n      this.yy = yy || this.yy || {};\n      this._input = input;\n      this._more = this._backtrack = this.done = false;\n      this.yylineno = this.yyleng = 0;\n      this.yytext = this.matched = this.match = '';\n      this.conditionStack = ['INITIAL'];\n      this.yylloc = {\n        first_line: 1,\n        first_column: 0,\n        last_line: 1,\n        last_column: 0\n      };\n\n      if (this.options.ranges) {\n        this.yylloc.range = [0, 0];\n      }\n\n      this.offset = 0;\n      return this;\n    },\n    // consumes and returns one char from the input\n    input: function input() {\n      var ch = this._input[0];\n      this.yytext += ch;\n      this.yyleng++;\n      this.offset++;\n      this.match += ch;\n      this.matched += ch;\n      var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n      if (lines) {\n        this.yylineno++;\n        this.yylloc.last_line++;\n      } else {\n        this.yylloc.last_column++;\n      }\n\n      if (this.options.ranges) {\n        this.yylloc.range[1]++;\n      }\n\n      this._input = this._input.slice(1);\n      return ch;\n    },\n    // unshifts one char (or a string) into the input\n    unput: function unput(ch) {\n      var len = ch.length;\n      var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n      this._input = ch + this._input;\n      this.yytext = this.yytext.substr(0, this.yytext.length - len); //this.yyleng -= len;\n\n      this.offset -= len;\n      var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n      this.match = this.match.substr(0, this.match.length - 1);\n      this.matched = this.matched.substr(0, this.matched.length - 1);\n\n      if (lines.length - 1) {\n        this.yylineno -= lines.length - 1;\n      }\n\n      var r = this.yylloc.range;\n      this.yylloc = {\n        first_line: this.yylloc.first_line,\n        last_line: this.yylineno + 1,\n        first_column: this.yylloc.first_column,\n        last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n      };\n\n      if (this.options.ranges) {\n        this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n      }\n\n      this.yyleng = this.yytext.length;\n      return this;\n    },\n    // When called from action, caches matched text and appends it on next action\n    more: function more() {\n      this._more = true;\n      return this;\n    },\n    // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n    reject: function reject() {\n      if (this.options.backtrack_lexer) {\n        this._backtrack = true;\n      } else {\n        return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n          text: \"\",\n          token: null,\n          line: this.yylineno\n        });\n      }\n\n      return this;\n    },\n    // retain first n characters of the match\n    less: function less(n) {\n      this.unput(this.match.slice(n));\n    },\n    // displays already matched input, i.e. for error messages\n    pastInput: function pastInput() {\n      var past = this.matched.substr(0, this.matched.length - this.match.length);\n      return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n    // displays upcoming input, i.e. for error messages\n    upcomingInput: function upcomingInput() {\n      var next = this.match;\n\n      if (next.length < 20) {\n        next += this._input.substr(0, 20 - next.length);\n      }\n\n      return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n    // displays the character position where the lexing error occurred, i.e. for error messages\n    showPosition: function showPosition() {\n      var pre = this.pastInput();\n      var c = new Array(pre.length + 1).join(\"-\");\n      return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n    // test the lexed token: return FALSE when not a match, otherwise return token\n    test_match: function test_match(match, indexed_rule) {\n      var token, lines, backup;\n\n      if (this.options.backtrack_lexer) {\n        // save context\n        backup = {\n          yylineno: this.yylineno,\n          yylloc: {\n            first_line: this.yylloc.first_line,\n            last_line: this.last_line,\n            first_column: this.yylloc.first_column,\n            last_column: this.yylloc.last_column\n          },\n          yytext: this.yytext,\n          match: this.match,\n          matches: this.matches,\n          matched: this.matched,\n          yyleng: this.yyleng,\n          offset: this.offset,\n          _more: this._more,\n          _input: this._input,\n          yy: this.yy,\n          conditionStack: this.conditionStack.slice(0),\n          done: this.done\n        };\n\n        if (this.options.ranges) {\n          backup.yylloc.range = this.yylloc.range.slice(0);\n        }\n      }\n\n      lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n      if (lines) {\n        this.yylineno += lines.length;\n      }\n\n      this.yylloc = {\n        first_line: this.yylloc.last_line,\n        last_line: this.yylineno + 1,\n        first_column: this.yylloc.last_column,\n        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n      };\n      this.yytext += match[0];\n      this.match += match[0];\n      this.matches = match;\n      this.yyleng = this.yytext.length;\n\n      if (this.options.ranges) {\n        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n      }\n\n      this._more = false;\n      this._backtrack = false;\n      this._input = this._input.slice(match[0].length);\n      this.matched += match[0];\n      token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n      if (this.done && this._input) {\n        this.done = false;\n      }\n\n      if (token) {\n        return token;\n      } else if (this._backtrack) {\n        // recover context\n        for (var k in backup) {\n          this[k] = backup[k];\n        }\n\n        return false; // rule action called reject() implying the next rule should be tested instead.\n      }\n\n      return false;\n    },\n    // return next match in input\n    next: function next() {\n      if (this.done) {\n        return this.EOF;\n      }\n\n      if (!this._input) {\n        this.done = true;\n      }\n\n      var token, match, tempMatch, index;\n\n      if (!this._more) {\n        this.yytext = '';\n        this.match = '';\n      }\n\n      var rules = this._currentRules();\n\n      for (var i = 0; i < rules.length; i++) {\n        tempMatch = this._input.match(this.rules[rules[i]]);\n\n        if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n          match = tempMatch;\n          index = i;\n\n          if (this.options.backtrack_lexer) {\n            token = this.test_match(tempMatch, rules[i]);\n\n            if (token !== false) {\n              return token;\n            } else if (this._backtrack) {\n              match = false;\n              continue; // rule action called reject() implying a rule MISmatch.\n            } else {\n              // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n              return false;\n            }\n          } else if (!this.options.flex) {\n            break;\n          }\n        }\n      }\n\n      if (match) {\n        token = this.test_match(match, rules[index]);\n\n        if (token !== false) {\n          return token;\n        } // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\n\n        return false;\n      }\n\n      if (this._input === \"\") {\n        return this.EOF;\n      } else {\n        return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n          text: \"\",\n          token: null,\n          line: this.yylineno\n        });\n      }\n    },\n    // return next match that has a token\n    lex: function lex() {\n      var r = this.next();\n\n      if (r) {\n        return r;\n      } else {\n        return this.lex();\n      }\n    },\n    // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n    begin: function begin(condition) {\n      this.conditionStack.push(condition);\n    },\n    // pop the previously active lexer condition state off the condition stack\n    popState: function popState() {\n      var n = this.conditionStack.length - 1;\n\n      if (n > 0) {\n        return this.conditionStack.pop();\n      } else {\n        return this.conditionStack[0];\n      }\n    },\n    // produce the lexer rule set which is active for the currently active lexer condition state\n    _currentRules: function _currentRules() {\n      if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n        return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n      } else {\n        return this.conditions[\"INITIAL\"].rules;\n      }\n    },\n    // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n    topState: function topState(n) {\n      n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n      if (n >= 0) {\n        return this.conditionStack[n];\n      } else {\n        return \"INITIAL\";\n      }\n    },\n    // alias for begin(condition)\n    pushState: function pushState(condition) {\n      this.begin(condition);\n    },\n    // return the number of states currently on the stack\n    stateStackSize: function stateStackSize() {\n      return this.conditionStack.length;\n    },\n    options: {},\n    performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n      var YYSTATE = YY_START;\n\n      switch ($avoiding_name_collisions) {\n        case 0:\n          /* skip whitespace */\n          break;\n\n        case 1:\n          return 8;\n          break;\n\n        case 2:\n          return 8;\n          break;\n\n        case 3:\n          return 21;\n          break;\n\n        case 4:\n          return 35;\n          break;\n\n        case 5:\n          return 24;\n          break;\n\n        case 6:\n          return 26;\n          break;\n\n        case 7:\n          return 26;\n          break;\n\n        case 8:\n          return 25;\n          break;\n\n        case 9:\n          return 21;\n          break;\n\n        case 10:\n          return 31;\n          break;\n\n        case 11:\n          return 31;\n          break;\n\n        case 12:\n          return 33;\n          break;\n\n        case 13:\n          return 28;\n          break;\n\n        case 14:\n          return 9;\n          break;\n\n        case 15:\n          return ' ';\n          break;\n\n        case 16:\n          return 32;\n          break;\n\n        case 17:\n          return 27;\n          break;\n\n        case 18:\n          return 29;\n          break;\n\n        case 19:\n          return 30;\n          break;\n\n        case 20:\n          return 18;\n          break;\n\n        case 21:\n          return 19;\n          break;\n\n        case 22:\n          return 17;\n          break;\n\n        case 23:\n          return 11;\n          break;\n\n        case 24:\n          return 20;\n          break;\n\n        case 25:\n          return 12;\n          break;\n\n        case 26:\n          return 13;\n          break;\n\n        case 27:\n          return 15;\n          break;\n\n        case 28:\n          return 14;\n          break;\n\n        case 29:\n          return 16;\n          break;\n\n        case 30:\n          return '\"';\n          break;\n\n        case 31:\n          return \"'\";\n          break;\n\n        case 32:\n          return \"!\";\n          break;\n\n        case 33:\n          return 10;\n          break;\n\n        case 34:\n          return 34;\n          break;\n\n        case 35:\n          return '#';\n          break;\n\n        case 36:\n          return 5;\n          break;\n      }\n    },\n    rules: [/^(?:\\s+)/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:[A-Za-z]{1,}[A-Za-z_0-9\\.]+(?=[(]))/, /^(?:#[A-Z0-9\\/]+(!|\\?)?)/, /^(?:\\$[A-Za-z]+\\$[0-9]+)/, /^(?:\\$[A-Za-z]+[0-9]+)/, /^(?:[A-Za-z]+\\$[0-9]+)/, /^(?:[A-Za-z]+[0-9]+)/, /^(?:[A-Za-z\\.]+(?=[(]))/, /^(?:[A-Za-z]{1,}[A-Za-z_0-9]+)/, /^(?:[A-Za-z_]+)/, /^(?:[0-9]+)/, /^(?:\\[(.*)?\\])/, /^(?:&)/, /^(?: )/, /^(?:[.])/, /^(?::)/, /^(?:;)/, /^(?:,)/, /^(?:\\*)/, /^(?:\\/)/, /^(?:-)/, /^(?:\\+)/, /^(?:\\^)/, /^(?:\\()/, /^(?:\\))/, /^(?:>)/, /^(?:<)/, /^(?:NOT\\b)/, /^(?:\")/, /^(?:')/, /^(?:!)/, /^(?:=)/, /^(?:%)/, /^(?:[#])/, /^(?:$)/],\n    conditions: {\n      \"INITIAL\": {\n        \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n        \"inclusive\": true\n      }\n    }\n  };\n  return lexer;\n}();\n\nparser.lexer = lexer;\nexport function Parser() {\n  this.yy = {};\n}\nParser.prototype = parser;\nparser.Parser = Parser;", "/* eslint-disable import/prefer-default-export */\n\n/**\n * Trim value by cutting character starting from the beginning and ending at the same time.\n *\n * @param {String} string String to trimming.\n * @param {Number} [margin=1] Number of character to cut.\n * @returns {String}\n */\nexport function trimEdges(string) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  string = string.substring(margin, string.length - margin);\n  return string;\n}", "function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Convert row label to index.\n *\n * @param {String} label Row label (eq. '1', '5')\n * @returns {Number} Returns -1 if label is not recognized otherwise proper row index.\n */\nexport function rowLabelToIndex(label) {\n  var result = parseInt(label, 10);\n\n  if (isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n\n  return result;\n}\n/**\n * Convert row index to label.\n *\n * @param {Number} row Row index.\n * @returns {String} Returns row label (eq. '1', '7').\n */\n\nexport function rowIndexToLabel(row) {\n  var result = '';\n\n  if (row >= 0) {\n    result = \"\".concat(row + 1);\n  }\n\n  return result;\n}\nvar COLUMN_LABEL_BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nvar COLUMN_LABEL_BASE_LENGTH = COLUMN_LABEL_BASE.length;\n/**\n * Convert column label to index.\n *\n * @param {String} label Column label (eq. 'ABB', 'CNQ')\n * @returns {Number} Returns -1 if label is not recognized otherwise proper column index.\n */\n\nexport function columnLabelToIndex(label) {\n  var result = 0;\n\n  if (typeof label === 'string') {\n    label = label.toUpperCase();\n\n    for (var i = 0, j = label.length - 1; i < label.length; i += 1, j -= 1) {\n      result += Math.pow(COLUMN_LABEL_BASE_LENGTH, j) * (COLUMN_LABEL_BASE.indexOf(label[i]) + 1);\n    }\n  }\n\n  --result;\n  return result;\n}\n/**\n * Convert column index to label.\n *\n * @param {Number} column Column index.\n * @returns {String} Returns column label (eq. 'ABB', 'CNQ').\n */\n\nexport function columnIndexToLabel(column) {\n  var result = '';\n\n  while (column >= 0) {\n    result = String.fromCharCode(column % COLUMN_LABEL_BASE_LENGTH + 97) + result;\n    column = Math.floor(column / COLUMN_LABEL_BASE_LENGTH) - 1;\n  }\n\n  return result.toUpperCase();\n}\nvar LABEL_EXTRACT_REGEXP = /^([$])?([A-Za-z]+)([$])?([0-9]+)$/;\n/**\n * Extract cell coordinates.\n *\n * @param {String} label Cell coordinates (eq. 'A1', '$B6', '$N$98').\n * @returns {Array} Returns an array of objects.\n */\n\nexport function extractLabel(label) {\n  if (typeof label !== 'string' || !LABEL_EXTRACT_REGEXP.test(label)) {\n    return [];\n  }\n\n  var _label$toUpperCase$ma = label.toUpperCase().match(LABEL_EXTRACT_REGEXP),\n      _label$toUpperCase$ma2 = _slicedToArray(_label$toUpperCase$ma, 5),\n      columnAbs = _label$toUpperCase$ma2[1],\n      column = _label$toUpperCase$ma2[2],\n      rowAbs = _label$toUpperCase$ma2[3],\n      row = _label$toUpperCase$ma2[4];\n\n  return [{\n    index: rowLabelToIndex(row),\n    label: row,\n    isAbsolute: rowAbs === '$'\n  }, {\n    index: columnLabelToIndex(column),\n    label: column,\n    isAbsolute: columnAbs === '$'\n  }];\n}\n/**\n * Convert row and column indexes into cell label.\n *\n * @param {Object} row Object with `index` and `isAbsolute` properties.\n * @param {Object} column Object with `index` and `isAbsolute` properties.\n * @returns {String} Returns cell label.\n */\n\nexport function toLabel(row, column) {\n  var rowLabel = (row.isAbsolute ? '$' : '') + rowIndexToLabel(row.index);\n  var columnLabel = (column.isAbsolute ? '$' : '') + columnIndexToLabel(column.index);\n  return columnLabel + rowLabel;\n}"],
  "mappings": "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",
  "names": ["error", "error", "Math", "undefined", "isArray", "jStat", "i", "func", "slice", "row", "n", "m", "sum", "number", "curriedFunction", "x", "X", "ssr", "sse", "sst", "error", "error", "xsqr", "dof", "x1", "x", "n", "M", "N", "error", "error", "o", "module", "BESSEL", "o", "besselj", "besseli", "error", "error", "error", "error", "error", "values", "dates", "i", "error", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "formulajs", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "SYMBOL", "func", "o", "func", "o", "error", "lexer", "lex", "locateNearestErrorRecoveryRule", "state", "parseError", "anonymous", "_unsupportedIterableToArray", "o", "_arrayLikeToArray", "_typeof", "obj", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "o", "_arrayLikeToArray", "_setPrototypeOf", "p", "_getPrototypeOf", "Parser", "parse", "error", "Emitter"]
}
